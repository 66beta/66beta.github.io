{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.png","path":"favicon.png","modified":0,"renderable":0},{"_id":"source/public/katematic.png","path":"public/katematic.png","modified":0,"renderable":0},{"_id":"source/public/tampermonkey.png","path":"public/tampermonkey.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"afae8afad73c0e72dbac9a602203465908038b92","modified":1515136953945},{"_id":"source/favicon.png","hash":"78c86a814b9e22dfe5c63a76922981ddaca86939","modified":1515136172101},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1537271883519},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1537271883520},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1537271883520},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1537271883520},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1537271883522},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1537271883522},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1537271883522},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1537271883522},{"_id":"themes/next/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1537271883523},{"_id":"themes/next/_config.yml","hash":"3158614cfc45600eb99eae9bd134c3ba4b261d7d","modified":1537273192168},{"_id":"themes/next/bower.json","hash":"5391684ba84fe633bc7877ab711a7d8a0072ceda","modified":1537271883524},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1537271883524},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1537271883529},{"_id":"themes/next/package.json","hash":"9acf6b8c8194f8a366025c8aab64d236908e62a1","modified":1537271883548},{"_id":"source/_posts/Be-Careful-With-Timezone-in-Javascript.md","hash":"26615abc161abf211e1f4388e349a8ca6f9c11e6","modified":1537271666156},{"_id":"source/_posts/Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy.md","hash":"21a02771e6c359a0a814a39b8b8e50a397f50c6c","modified":1515552296749},{"_id":"source/_posts/You-Dont-Know-JS-notes-part1.md","hash":"195792b0b14786ee2c4d26ce1b366f31167797b9","modified":1528850671203},{"_id":"source/_posts/You-Dont-Know-JS-notes-part2.md","hash":"232e945fb933400e94163e4c21ca2f7b5b713ad6","modified":1528948182442},{"_id":"source/_posts/brew-upgrade-break-nvm.md","hash":"330c0a449eb00197f7a64da0e4a5af4a949bd6f6","modified":1528850661892},{"_id":"source/_posts/ci-session-issue-with-xampp-on-osx.md","hash":"610e10934b4f5bc65308aba3219f4377a603c94c","modified":1515552303586},{"_id":"source/_posts/css-notes.md","hash":"d348d4c6cbd19f3afe1e7dd0115a7f5e483e1b60","modified":1515567532981},{"_id":"source/_posts/delete-a-chinese-foler-from-linux-command-line.md","hash":"10a76febc4127d622360c6f53efac8181d812031","modified":1515552319037},{"_id":"source/_posts/delete-commits-from-github.md","hash":"de4ae61359ab601bc0f95c7fe06456d8fd90da43","modified":1515552332165},{"_id":"source/_posts/enable-third-party-extensions-on-chrome.md","hash":"e156d0b81e096dd327c1b967564d578281ec5558","modified":1515552337931},{"_id":"source/_posts/hello-world.md","hash":"d8564df46823cb94a07531bfc28d9eba0eebe686","modified":1515552342030},{"_id":"source/_posts/how-to-setup-hexo.md","hash":"fedf77d229951af45d6f69ecc3311b265c6a481c","modified":1515552346159},{"_id":"source/_posts/jquery-mobile-full-page-reload.md","hash":"c29fdeaa80ea2d5b046b8fb689c3ce120fe966ba","modified":1515552265167},{"_id":"source/_posts/js-notes.md","hash":"e700e2c9de708499ae3a4d5285d733c16fd88098","modified":1515634956104},{"_id":"source/_posts/meet-docker-again.md","hash":"b514729593b575945eb10cf3b5058d86c2675539","modified":1515374938300},{"_id":"source/_posts/multi-line-template-with-es5.md","hash":"caa006daae66f5ec812412d06e95affaee4e87f8","modified":1533264520612},{"_id":"source/_posts/use-current_time-instead-of-time-in-wordpress-plugin-development.md","hash":"4e1dc6552bbee28634cd662ee2921ae5a558048d","modified":1515552260836},{"_id":"source/_posts/vps-initial-setup.md","hash":"e93830d07d3635de4a208314ebca83405b0123a2","modified":1515552363272},{"_id":"source/categories/index.md","hash":"f1f4b5249d939ab1f0918b45a5c6e60388292ea6","modified":1515563113572},{"_id":"source/public/katematic.png","hash":"1d3d0fae26fbb342b3ace4ec77969f6491cfbef2","modified":1515142813588},{"_id":"source/tags/index.md","hash":"3bbe9aa4db8f5f84b55555bbb8ccb2a702bff2df","modified":1515563076967},{"_id":"source/public/tampermonkey.png","hash":"e950bed8c93a50dafb4a57222df0a5c646dc3f3f","modified":1515136172101},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1537271883513},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1537271883515},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1537271874736},{"_id":"themes/next/.git/index","hash":"75ed590a4182ae1da47d614b6d70e1e3fdc7255a","modified":1537272569792},{"_id":"themes/next/.git/packed-refs","hash":"82e1474c8bd96fadfb0e68d26b08310edba08c84","modified":1537271883510},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1537271883520},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1537271883521},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1537271883521},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1537271883521},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1537271883521},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1537271883522},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1537271883524},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1537271883525},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1537271883525},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1537271883525},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1537271883525},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1537271883525},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1537271883526},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1537271883526},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1537271883526},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1537271883530},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1537271883530},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1537271883530},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1537271883530},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1537271883530},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1537271883530},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1537271883530},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1537271883531},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1537271883531},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1537271883531},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1537271883531},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1537271883531},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1537271883531},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1537271883532},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1537271883532},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1537271883532},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1537271883532},{"_id":"themes/next/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1537271883533},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1537271883547},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1537271883547},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1537271883547},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1537271883547},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1537271883547},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1537271883547},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1537271883548},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1537271883548},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1537271883548},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1537271883548},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1537271883581},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1537271883581},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1537271883581},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883568},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1537271874738},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1537271874736},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1537271874739},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1537271874739},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1537271874737},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1537271874740},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1537271874737},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1537271874738},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1537271874738},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1537271874740},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1537271874736},{"_id":"themes/next/.git/logs/HEAD","hash":"016f8128b92b63085a6c7f600d33b3e09d6e35ae","modified":1537271883514},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1537271883526},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1537271883527},{"_id":"themes/next/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1537271883527},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1537271883527},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1537271883527},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1537271883527},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1537271883528},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1537271883528},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1537271883528},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1537271883528},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1537271883529},{"_id":"themes/next/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1537271883529},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1537271883529},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1537271883532},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537271883532},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1537271883533},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1537271883534},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1537271883534},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1537271883534},{"_id":"themes/next/layout/_macro/post.swig","hash":"27922af64ecb9db9a28bcf1c98fb68b26bf0b67a","modified":1537271883534},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1537271883535},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1537271883535},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1537271883535},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1537271883536},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1537271883536},{"_id":"themes/next/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1537271883536},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1537271883538},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1537271883538},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1537271883539},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1537271883539},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1537271883539},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1537271883540},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1537271883542},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1537271883544},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1537271883544},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1537271883544},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1537271883545},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1537271883545},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1537271883545},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1537271883545},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1537271883545},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1537271883549},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1537271883549},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1537271883549},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1537271883549},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1537271883549},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1537271883549},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1537271883549},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1537271883550},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1537271883550},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1537271883568},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1537271883568},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1537271883568},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537271883568},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537271883568},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537271883569},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537271883569},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537271883569},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537271883569},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537271883569},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537271883570},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1537271883570},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1537271883570},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537271883570},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1537271883570},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537271883571},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537271883571},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537271883571},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537271883571},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883540},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883540},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883562},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883562},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883563},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883567},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1537271883568},{"_id":"themes/next/.git/refs/heads/master","hash":"664bba5e792b5fe2fcd493c7848293824276fecd","modified":1537271883513},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1537271883533},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1537271883533},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1537271883536},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1537271883536},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1537271883537},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1537271883537},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1537271883537},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1537271883537},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1537271883537},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1537271883538},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1537271883538},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1537271883538},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1537271883538},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1537271883539},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1537271883539},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1537271883539},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1537271883540},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1537271883540},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1537271883540},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1537271883540},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1537271883541},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1537271883541},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1537271883541},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1537271883541},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1537271883541},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1537271883541},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1537271883541},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1537271883542},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1537271883542},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1537271883542},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1537271883542},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1537271883542},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1537271883543},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1537271883543},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1537271883543},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1537271883543},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1537271883543},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1537271883544},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1537271883544},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1537271883544},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1537271883545},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1537271883546},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1537271883546},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1537271883546},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1537271883547},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1537271883562},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1537271883562},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1537271883562},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1537271883563},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1537271883567},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1537271883567},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1537271883567},{"_id":"themes/next/source/css/_variables/base.styl","hash":"0b43ddd92e395342703550f629699c5e591fd68b","modified":1537271883567},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1537271883571},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1537271883571},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1537271883571},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1537271883572},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1537271883572},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1537271883572},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1537271883572},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1537271883572},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1537271883573},{"_id":"themes/next/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1537271883573},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1537272578473},{"_id":"themes/next/source/lib/canvas-nest/README.md","hash":"bf7819cbb879bb82ec1097513d8f799df8835e0f","modified":1537272578473},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1537272578474},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1537271883573},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1537271883573},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1537271883573},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1537271883574},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1537271883574},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537271883580},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537271883580},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537271883580},{"_id":"themes/next/.git/objects/pack/pack-4692ac29428546720a6672178e524b2c366ae834.idx","hash":"5ea3af8ded1aa8e67460a16f2fc1f83532be8c71","modified":1537271883499},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537271883577},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"016f8128b92b63085a6c7f600d33b3e09d6e35ae","modified":1537271883514},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1537271883512},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1537271883546},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1537271883546},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1537271883550},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1537271883550},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1537271883550},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1537271883551},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1537271883551},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1537271883553},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1537271883558},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1537271883561},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1537271883561},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1537271883561},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1537271883561},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1537271883562},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1537271883562},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1537271883562},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1537271883563},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1537271883563},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1537271883563},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1537271883563},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1537271883564},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1537271883564},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537271883564},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1537271883564},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1537271883564},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1537271883565},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1537271883565},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1537271883565},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1537271883565},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1537271883565},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1537271883566},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1537271883566},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1537271883566},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1537271883566},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1537271883566},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1537271883566},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"86c9976f517da4574495372da33e03b95b2a5d52","modified":1537271883572},{"_id":"themes/next/source/lib/canvas-nest/.git/FETCH_HEAD","hash":"1331a42be91f8e6aac6956a4b174c1a0a5e0211d","modified":1537272694911},{"_id":"themes/next/source/lib/canvas-nest/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1537272578468},{"_id":"themes/next/source/lib/canvas-nest/.git/ORIG_HEAD","hash":"5442226ab36d787824e89f50241336839b376133","modified":1537272694921},{"_id":"themes/next/source/lib/canvas-nest/.git/config","hash":"6aef6bbfcb8ccf9d042bf26defe7d08167b6d81e","modified":1537272578470},{"_id":"themes/next/source/lib/canvas-nest/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1537272576692},{"_id":"themes/next/source/lib/canvas-nest/.git/index","hash":"3d523d5fb60b98935febbd2e64c1dfc5373a0fc0","modified":1537272684366},{"_id":"themes/next/source/lib/canvas-nest/.git/packed-refs","hash":"60cebf9a6bcd88fd6b2132480cdef3ebf7a7dcf7","modified":1537272578467},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1537271883574},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1537271883574},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1537271883575},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1537271883578},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1537271883578},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1537271883576},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1537271883577},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537271883579},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"016f8128b92b63085a6c7f600d33b3e09d6e35ae","modified":1537271883512},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1537271883551},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1537271883551},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1537271883551},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1537271883551},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1537271883551},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1537271883552},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1537271883552},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1537271883552},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1537271883552},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1537271883552},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1537271883552},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1537271883553},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1537271883553},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1537271883553},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1537271883553},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1537271883553},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1537271883553},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1537271883554},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1537271883554},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1537271883554},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1537271883554},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1537271883554},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1537271883554},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1537271883555},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1537271883555},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1537271883555},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1537271883555},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1537271883555},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1537271883555},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1537271883556},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1537271883556},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ed9608d2740a33664eb703f806c218a4fc520087","modified":1537271883556},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1537271883557},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1537271883557},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1537271883557},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1537271883557},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1537271883557},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1537271883557},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1537271883557},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1537271883558},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1537271883558},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1537271883558},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1537271883558},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1537271883558},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1537271883558},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1537271883559},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1537271883559},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1537271883559},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1537271883559},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1537271883559},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1537271883559},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1537271883560},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1537271883560},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1537271883560},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1537271883560},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1537271883560},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1537271883561},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1537271883561},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1537271883561},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1537271883564},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537271883564},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1537271883565},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1537272576693},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1537272576692},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1537272576693},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1537272576694},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1537272576693},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1537272576694},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1537272576693},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1537272576692},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1537272576693},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1537272576694},{"_id":"themes/next/source/lib/canvas-nest/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1537272576692},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/HEAD","hash":"98fbea313ad1777b2a5b12e7b725cd9646dcaaec","modified":1537272578469},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1537271883576},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/2a/f622a4d7df40a2708946e91d6d7a0df1dc468c","hash":"3da7207fb18d361b83c56f4e35f67e9e945abd82","modified":1537272578460},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/45/9262fe92f0115707bf8d8764f1886bc5e7c9e0","hash":"36040483f8af76775b7e4b6d87cec53729625399","modified":1537272578461},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/5a/69ce9c2e4a1a34f6063ae9a121af1555669c69","hash":"dad25cc0f450e2827b5676975f4a70636e3fd2c8","modified":1537272578457},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/39233ece53c9bdb9a1faf3271ed5768b034aad","hash":"5a770d418c1bb7b0f031f4d5416530002032fcf3","modified":1537272578458},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1537272578456},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/75/de2b8fa62d52690de32c351c63ab6446104ed5","hash":"52d10122d633ce4895a0690c5955e1b356f5a391","modified":1537272578461},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/86/1c9f4241fe0eb6af02ad770d5ce04c1f68972b","hash":"7005c3e36015a4af30d4b91bd5a849a7861a073e","modified":1537272578459},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/90/f6477118d05f5f96ce0a63c6f18b7b2baea200","hash":"385f58e92981f27fa54eb52bf60424e87c70a9d8","modified":1537272578456},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/98/67d1132e0e50bbb7df754a63358d70741df6d5","hash":"3cb710a1faee73c08036f5e2df7df3a7ce29e9dd","modified":1537272578455},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/aa/da83ad9aa55faa2b34ede31b1d41e16966f80b","hash":"b304541ab95b7969a63ba2ec4f60f5391bd8bb44","modified":1537272578455},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/d4/95d28a8fab74d23908f6ccef9e4db2625fbacb","hash":"59e6067b0a806deee7bda6460b36c0f63e2e1db5","modified":1537272578457},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/heads/master","hash":"5442226ab36d787824e89f50241336839b376133","modified":1537272578469},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/heads/master","hash":"98fbea313ad1777b2a5b12e7b725cd9646dcaaec","modified":1537272578470},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1537272578468},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/remotes/origin/HEAD","hash":"98fbea313ad1777b2a5b12e7b725cd9646dcaaec","modified":1537272578468},{"_id":"themes/next/.git/objects/pack/pack-4692ac29428546720a6672178e524b2c366ae834.pack","hash":"86cf339a573226f90d202f199e4f58794ce66993","modified":1537271883497},{"_id":"public/categories/index.html","hash":"b2d7c552834fe934cd9814db2053fa130c4a1cd1","modified":1537273285853},{"_id":"public/tags/index.html","hash":"88c4d89e413b3da685169b9a699046feead4dddc","modified":1537273285853},{"_id":"public/archives/2014/05/index.html","hash":"dfc337043179e210215749054fa75e3f4109cfd0","modified":1537273285853},{"_id":"public/archives/2014/06/index.html","hash":"9d08ffa72a23085d88053ea55fe499977add6a39","modified":1537273285853},{"_id":"public/archives/2014/07/index.html","hash":"a1658cd5e4e8d3645fb52601ea92d762a9d104c3","modified":1537273285853},{"_id":"public/archives/2014/08/index.html","hash":"b0e14ad1c8b3bb154d3bfb17d2282610581bb3ac","modified":1537273285853},{"_id":"public/archives/2014/12/index.html","hash":"fbeb3e8fee09399e01c92c8c21709d754e479dc8","modified":1537273285853},{"_id":"public/archives/2015/index.html","hash":"88a3e6f600c75cf9343ddbc5dfdb0a1859d49918","modified":1537273285854},{"_id":"public/archives/2015/08/index.html","hash":"c6186f724f4275f15fbe87e416be5dc0dab115e8","modified":1537273285854},{"_id":"public/archives/2018/01/index.html","hash":"0407829062d0b0c625615cb36fbebc5b8c7421a2","modified":1537273285854},{"_id":"public/archives/2018/05/index.html","hash":"c34dc084cb1ba06fed1ca967997ef4139ae3eb02","modified":1537273285854},{"_id":"public/archives/2018/06/index.html","hash":"5d7e6120601560bff2236656ab68fe909d74b25e","modified":1537273285854},{"_id":"public/archives/2018/08/index.html","hash":"10d5b78fe96325af7cee54e4a03b354c704d7f76","modified":1537273285854},{"_id":"public/archives/2018/09/index.html","hash":"5451bcc61e6d37e208523df56b833be292dad439","modified":1537273285854},{"_id":"public/categories/前端/index.html","hash":"70fa05f90fd36eeec99e96dc97ea05f055b5d68d","modified":1537273285854},{"_id":"public/categories/前端/page/2/index.html","hash":"fa2759f2e23731e74d879d4d93af0e829b000274","modified":1537273285854},{"_id":"public/categories/其他/index.html","hash":"3b17149add9fccc0e82881a29caec3094ed061db","modified":1537273285854},{"_id":"public/categories/其他/page/2/index.html","hash":"1711f45a746d8ca6b2ea856f0a806d1880018198","modified":1537273285854},{"_id":"public/categories/后端/index.html","hash":"d75fb0994442e1dc3243e4e20daf560c4e1a8522","modified":1537273285854},{"_id":"public/categories/nodejs/index.html","hash":"c39a48ade5d39eb9cc0f993ea70d3276e3a47397","modified":1537273285854},{"_id":"public/tags/js/index.html","hash":"796044167b39586f7ea6205aa3f98d65a0474810","modified":1537273285854},{"_id":"public/tags/js/page/2/index.html","hash":"9ec7d5f122783eca5ca8103c42e138aedc358e7f","modified":1537273285854},{"_id":"public/tags/sublime/index.html","hash":"d49b62070177c5e1172757417ceeb006a3c2c490","modified":1537273285855},{"_id":"public/tags/node/index.html","hash":"ea81fe96b7c12644a7bd66d49634deec89d2fd9e","modified":1537273285855},{"_id":"public/tags/nvm/index.html","hash":"842fe3a5dd77aadb4f5da2051cca71002e63e6ca","modified":1537273285855},{"_id":"public/tags/homebrew/index.html","hash":"f7ad792245f792814aa1b859feb4cf27017913f4","modified":1537273285855},{"_id":"public/tags/PHP/index.html","hash":"89d9b0be6d1a78cae77c3cad80be0560f752bead","modified":1537273285855},{"_id":"public/tags/css/index.html","hash":"626babe7490103687a2b94d1102875b408701fbb","modified":1537273285855},{"_id":"public/tags/linux/index.html","hash":"9b58af01e512cf9e4e8db2bc66968bae233cdbc2","modified":1537273285855},{"_id":"public/tags/git/index.html","hash":"52f94c83c5fb87b1e818c6ddb4ee59fd5db8777d","modified":1537273285855},{"_id":"public/tags/chrome/index.html","hash":"1bc3cb505844498b600563d4281b1bbce2d3ef48","modified":1537273285855},{"_id":"public/tags/hexo/index.html","hash":"2841d44b9374bc819d0954257a89437409467bac","modified":1537273285855},{"_id":"public/tags/nodejs/index.html","hash":"010cf60292c851628e37c24650e66e65b36a008b","modified":1537273285855},{"_id":"public/tags/jQuery-Mobile/index.html","hash":"d60a975f49c85815a9652697e0e95350ad0caed8","modified":1537273285855},{"_id":"public/tags/docker/index.html","hash":"bd0c9c64c4ba6c3419c22a0c4afd643ea30fa96c","modified":1537273285856},{"_id":"public/tags/php/index.html","hash":"dd9147da9575a4f78107793ca748e295f4a63810","modified":1537273285856},{"_id":"public/tags/wordpress/index.html","hash":"fe05eba7850934568ba6bc9672313722052b3440","modified":1537273285856},{"_id":"public/Be-Careful-With-Timezone-in-Javascript/index.html","hash":"19dbacc908a2ec1e45ef7db42476defe944dc097","modified":1537273285856},{"_id":"public/multi-line-template-with-es5/index.html","hash":"c1467763f8664e49aeca6955126942f859896f0a","modified":1537273285856},{"_id":"public/You-Dont-Know-JS-notes-part2/index.html","hash":"dd03efd8d3869000af3cbe1bb167d1a2cdb9dce3","modified":1537273285856},{"_id":"public/brew-upgrade-break-nvm/index.html","hash":"ddd90bc633193b894cf1bb6d0392fe27e12ea463","modified":1537273285856},{"_id":"public/You-Dont-Know-JS-notes-part1/index.html","hash":"250eec4fd214d9e9370ea58e3073d103ed2b9a4c","modified":1537273285856},{"_id":"public/js-notes/index.html","hash":"dabf5ba2fd408eccf509aa06adcc85eccc6f0e0e","modified":1537273285856},{"_id":"public/meet-docker-again/index.html","hash":"55c64e70541a1db74892855b26c37fc6166912f8","modified":1537273285856},{"_id":"public/Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy/index.html","hash":"6dde6ae800ef626f4a88b8ba019e5cab2a166bad","modified":1537273285856},{"_id":"public/vps-initial-setup/index.html","hash":"d6218b46691d0dabaa69b43c72542a593164116f","modified":1537273285856},{"_id":"public/delete-a-chinese-foler-from-linux-command-line/index.html","hash":"9ed53b66c2bf788ba8a95d0718c94d54386b7944","modified":1537273285856},{"_id":"public/delete-commits-from-github/index.html","hash":"6c6a9edf7c3ab2155f5fcfe8e4a3a37e3619455a","modified":1537273285856},{"_id":"public/use-current_time-instead-of-time-in-wordpress-plugin-development/index.html","hash":"86e708e0e66f825644c96cadbd369aabe254dd67","modified":1537273285856},{"_id":"public/ci-session-issue-with-xampp-on-osx/index.html","hash":"ce0c72be1ac94b4634038f65188f073724ce28f9","modified":1537273285857},{"_id":"public/jquery-mobile-full-page-reload/index.html","hash":"72af8f798c8a047dd74c42c9135b598b6288840f","modified":1537273285857},{"_id":"public/enable-third-party-extensions-on-chrome/index.html","hash":"2a76f6c78be0b902253fd704ce50c91685ae6882","modified":1537273285857},{"_id":"public/css-notes/index.html","hash":"2f9330c6cee768009276193d8f98b017099cb422","modified":1537273285857},{"_id":"public/how-to-setup-hexo/index.html","hash":"55f7fbad683f4a4dc63ca1b929fa8adbd23957bd","modified":1537273285857},{"_id":"public/hello-world/index.html","hash":"3a927a00b00ec9b41e8113bc67a74e88155a16fa","modified":1537273285857},{"_id":"public/archives/index.html","hash":"c36906ff8909bf3631cd682296b91b649f3888c1","modified":1537273285857},{"_id":"public/archives/page/2/index.html","hash":"39db9782dd7922856357138c960d088a7f7a1a55","modified":1537273285857},{"_id":"public/archives/2014/index.html","hash":"04ec3cdf9e342b2b87dc28caf9cb8b4740ca2031","modified":1537273285857},{"_id":"public/archives/2018/index.html","hash":"7b4964e9d40f7610c4e2e30130f91e95469938fa","modified":1537273285857},{"_id":"public/index.html","hash":"df6fef14b8a2be1e110911b32556c35a0d8cdcd5","modified":1537273285857},{"_id":"public/page/2/index.html","hash":"614ee950c897f202e617a2ead4a78fa6f6ea0f4c","modified":1537273285857},{"_id":"public/CNAME","hash":"afae8afad73c0e72dbac9a602203465908038b92","modified":1537273285862},{"_id":"public/favicon.png","hash":"78c86a814b9e22dfe5c63a76922981ddaca86939","modified":1537273285862},{"_id":"public/public/katematic.png","hash":"1d3d0fae26fbb342b3ace4ec77969f6491cfbef2","modified":1537273285863},{"_id":"public/public/tampermonkey.png","hash":"e950bed8c93a50dafb4a57222df0a5c646dc3f3f","modified":1537273285863},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1537273285863},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1537273285863},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1537273285863},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1537273285863},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1537273285863},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1537273285863},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1537273285863},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1537273285863},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1537273285863},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1537273285863},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1537273285863},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1537273285863},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537273285863},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1537273285863},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1537273285863},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1537273285863},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1537273285863},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1537273285864},{"_id":"public/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1537273285864},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1537273285864},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1537273285864},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1537273286271},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1537273286273},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1537273286308},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1537273286308},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1537273286308},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1537273286308},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1537273286308},{"_id":"public/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1537273286308},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1537273286308},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1537273286308},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1537273286308},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1537273286308},{"_id":"public/lib/canvas-nest/README.html","hash":"9bb29b415d0859e097fdfcc6689b235c0e699224","modified":1537273286308},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1537273286309},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1537273286309},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1537273286309},{"_id":"public/js/src/schemes/pisces.js","hash":"86c9976f517da4574495372da33e03b95b2a5d52","modified":1537273286309},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1537273286309},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1537273286309},{"_id":"public/css/main.css","hash":"3792598593349248d09b66bb294a96d2bea7ad60","modified":1537273286309},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1537273286309},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1537273286309},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1537273286309},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1537273286309},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1537273286309},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1537273286309},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1537273286309}],"Category":[{"name":"前端","_id":"cjm7ot1tr00027hsl6tumjmt9"},{"name":"其他","_id":"cjm7ot1tw00077hslq52xnud9"},{"name":"后端","_id":"cjm7ot1u4000l7hslzqqrdkyv"},{"name":"nodejs","_id":"cjm7ot1uc00167hsltsx53e9y"}],"Data":[],"Page":[{"title":"分类","date":"2018-01-10T05:44:47.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-01-10 13:44:47\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-01-10T05:45:13.572Z","path":"categories/index.html","layout":"page","_id":"cjm7ot1zh002d7hsllh5nw5sw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-01-10T05:43:16.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-01-10 13:43:16\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-10T05:44:36.967Z","path":"tags/index.html","layout":"page","_id":"cjm7ot1zi002e7hslrn92c35t","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Javascript中获取日期要注意时区","date":"2018-09-03T07:49:07.000Z","_content":"\n> 记\b一个无知与粗心引发的BUG\n\n需要获取当前日期，\b格式为`2018-09-03`，于是想当然地写了：\n```js\nnew Date().toJSON() // \"2018-09-03T07:52:51.903Z\"\n\nnew Date().toJSON().slice(0, 10) // \"2018-09-03\"\n```\n\n如果不熟悉Date对象的方法，这里就有个天坑了，`toJSON()`方法获取的是格林尼治标准时间（UTC），中国时区是东八区领先8小时，即平时很多地方看到的`+0800`。\n\n<!-- more -->\n\n问题就在这里，如果你是白天正常工作时间(09:00 ~ 18:00)写代码，可能发现不了这个bug，因为获取的是日期`2018-09-03`，这个时间段不会有影响啊。\n\n如果是早上8点前，问题就出现了。假设你设备上当前是`2018-09-03 06:30:00`，UTC日期其实还在你的昨天`2018-09-02`：\n```js\nnew Date('2018-09-03 06:30:00').toJSON() // \"2018-09-02T22:30:00.000Z\"\n\nnew Date('2018-09-03 06:30:00').toJSON().slice(0, 10) // \"2018-09-02\"\n```\n\n更悲催的是，如果没意识到是这个问题，在(09:00 ~ 18:00)工作时间断排查，就要怀疑人生了...\n\n那么如何正确姿势呢？\n> update 2018-09-18 腾讯X5内核真的“与众不同”，华为和步步高系很喜欢用\n\n\n```js\n// 此处可以用getFullYear这种来获取，比较保险。但字符串操作应该更快一些\ngetTodayDate () {\n  let d = new Date().toLocaleDateString() // '2018/9/3' X5内核: '2018-9-3'\n  d = d.indexOf('/') > 0 ? d.split('/') : d.split('-') // ['2018', '9', '3']\n  d[1] = ('0' + d[1]).slice(-2) // '09'\n  d[2] = ('0' + d[2]).slice(-2) // '03'\n  return d.join('-') // '2018-09-03'\n}\n```\n\n那么如何避免类似问题呢？\n\n只能是提高自己姿势水平，别无他法，有空多看看 [MDN的文档](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)","source":"_posts/Be-Careful-With-Timezone-in-Javascript.md","raw":"---\ntitle: Javascript中获取日期要注意时区\ndate: 2018-09-03 15:49:07\ntags:\n - js\ncategories:\n  - 前端\n---\n\n> 记\b一个无知与粗心引发的BUG\n\n需要获取当前日期，\b格式为`2018-09-03`，于是想当然地写了：\n```js\nnew Date().toJSON() // \"2018-09-03T07:52:51.903Z\"\n\nnew Date().toJSON().slice(0, 10) // \"2018-09-03\"\n```\n\n如果不熟悉Date对象的方法，这里就有个天坑了，`toJSON()`方法获取的是格林尼治标准时间（UTC），中国时区是东八区领先8小时，即平时很多地方看到的`+0800`。\n\n<!-- more -->\n\n问题就在这里，如果你是白天正常工作时间(09:00 ~ 18:00)写代码，可能发现不了这个bug，因为获取的是日期`2018-09-03`，这个时间段不会有影响啊。\n\n如果是早上8点前，问题就出现了。假设你设备上当前是`2018-09-03 06:30:00`，UTC日期其实还在你的昨天`2018-09-02`：\n```js\nnew Date('2018-09-03 06:30:00').toJSON() // \"2018-09-02T22:30:00.000Z\"\n\nnew Date('2018-09-03 06:30:00').toJSON().slice(0, 10) // \"2018-09-02\"\n```\n\n更悲催的是，如果没意识到是这个问题，在(09:00 ~ 18:00)工作时间断排查，就要怀疑人生了...\n\n那么如何正确姿势呢？\n> update 2018-09-18 腾讯X5内核真的“与众不同”，华为和步步高系很喜欢用\n\n\n```js\n// 此处可以用getFullYear这种来获取，比较保险。但字符串操作应该更快一些\ngetTodayDate () {\n  let d = new Date().toLocaleDateString() // '2018/9/3' X5内核: '2018-9-3'\n  d = d.indexOf('/') > 0 ? d.split('/') : d.split('-') // ['2018', '9', '3']\n  d[1] = ('0' + d[1]).slice(-2) // '09'\n  d[2] = ('0' + d[2]).slice(-2) // '03'\n  return d.join('-') // '2018-09-03'\n}\n```\n\n那么如何避免类似问题呢？\n\n只能是提高自己姿势水平，别无他法，有空多看看 [MDN的文档](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)","slug":"Be-Careful-With-Timezone-in-Javascript","published":1,"updated":"2018-09-18T11:54:26.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1tm00007hslp5eioil0","content":"<blockquote>\n<p>记\b一个无知与粗心引发的BUG</p>\n</blockquote>\n<p>需要获取当前日期，\b格式为<code>2018-09-03</code>，于是想当然地写了：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toJSON() <span class=\"comment\">// \"2018-09-03T07:52:51.903Z\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toJSON().slice(<span class=\"number\">0</span>, <span class=\"number\">10</span>) <span class=\"comment\">// \"2018-09-03\"</span></span><br></pre></td></tr></table></figure></p>\n<p>如果不熟悉Date对象的方法，这里就有个天坑了，<code>toJSON()</code>方法获取的是格林尼治标准时间（UTC），中国时区是东八区领先8小时，即平时很多地方看到的<code>+0800</code>。</p>\n<a id=\"more\"></a>\n<p>问题就在这里，如果你是白天正常工作时间(09:00 ~ 18:00)写代码，可能发现不了这个bug，因为获取的是日期<code>2018-09-03</code>，这个时间段不会有影响啊。</p>\n<p>如果是早上8点前，问题就出现了。假设你设备上当前是<code>2018-09-03 06:30:00</code>，UTC日期其实还在你的昨天<code>2018-09-02</code>：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'2018-09-03 06:30:00'</span>).toJSON() <span class=\"comment\">// \"2018-09-02T22:30:00.000Z\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'2018-09-03 06:30:00'</span>).toJSON().slice(<span class=\"number\">0</span>, <span class=\"number\">10</span>) <span class=\"comment\">// \"2018-09-02\"</span></span><br></pre></td></tr></table></figure></p>\n<p>更悲催的是，如果没意识到是这个问题，在(09:00 ~ 18:00)工作时间断排查，就要怀疑人生了…</p>\n<p>那么如何正确姿势呢？</p>\n<blockquote>\n<p>update 2018-09-18 腾讯X5内核真的“与众不同”，华为和步步高系很喜欢用</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处可以用getFullYear这种来获取，比较保险。但字符串操作应该更快一些</span></span><br><span class=\"line\">getTodayDate () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString() <span class=\"comment\">// '2018/9/3' X5内核: '2018-9-3'</span></span><br><span class=\"line\">  d = d.indexOf(<span class=\"string\">'/'</span>) &gt; <span class=\"number\">0</span> ? d.split(<span class=\"string\">'/'</span>) : d.split(<span class=\"string\">'-'</span>) <span class=\"comment\">// ['2018', '9', '3']</span></span><br><span class=\"line\">  d[<span class=\"number\">1</span>] = (<span class=\"string\">'0'</span> + d[<span class=\"number\">1</span>]).slice(<span class=\"number\">-2</span>) <span class=\"comment\">// '09'</span></span><br><span class=\"line\">  d[<span class=\"number\">2</span>] = (<span class=\"string\">'0'</span> + d[<span class=\"number\">2</span>]).slice(<span class=\"number\">-2</span>) <span class=\"comment\">// '03'</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> d.join(<span class=\"string\">'-'</span>) <span class=\"comment\">// '2018-09-03'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么如何避免类似问题呢？</p>\n<p>只能是提高自己姿势水平，别无他法，有空多看看 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\" rel=\"noopener\">MDN的文档</a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>记\b一个无知与粗心引发的BUG</p>\n</blockquote>\n<p>需要获取当前日期，\b格式为<code>2018-09-03</code>，于是想当然地写了：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toJSON() <span class=\"comment\">// \"2018-09-03T07:52:51.903Z\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toJSON().slice(<span class=\"number\">0</span>, <span class=\"number\">10</span>) <span class=\"comment\">// \"2018-09-03\"</span></span><br></pre></td></tr></table></figure></p>\n<p>如果不熟悉Date对象的方法，这里就有个天坑了，<code>toJSON()</code>方法获取的是格林尼治标准时间（UTC），中国时区是东八区领先8小时，即平时很多地方看到的<code>+0800</code>。</p>","more":"<p>问题就在这里，如果你是白天正常工作时间(09:00 ~ 18:00)写代码，可能发现不了这个bug，因为获取的是日期<code>2018-09-03</code>，这个时间段不会有影响啊。</p>\n<p>如果是早上8点前，问题就出现了。假设你设备上当前是<code>2018-09-03 06:30:00</code>，UTC日期其实还在你的昨天<code>2018-09-02</code>：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'2018-09-03 06:30:00'</span>).toJSON() <span class=\"comment\">// \"2018-09-02T22:30:00.000Z\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">'2018-09-03 06:30:00'</span>).toJSON().slice(<span class=\"number\">0</span>, <span class=\"number\">10</span>) <span class=\"comment\">// \"2018-09-02\"</span></span><br></pre></td></tr></table></figure></p>\n<p>更悲催的是，如果没意识到是这个问题，在(09:00 ~ 18:00)工作时间断排查，就要怀疑人生了…</p>\n<p>那么如何正确姿势呢？</p>\n<blockquote>\n<p>update 2018-09-18 腾讯X5内核真的“与众不同”，华为和步步高系很喜欢用</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处可以用getFullYear这种来获取，比较保险。但字符串操作应该更快一些</span></span><br><span class=\"line\">getTodayDate () &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> d = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleDateString() <span class=\"comment\">// '2018/9/3' X5内核: '2018-9-3'</span></span><br><span class=\"line\">  d = d.indexOf(<span class=\"string\">'/'</span>) &gt; <span class=\"number\">0</span> ? d.split(<span class=\"string\">'/'</span>) : d.split(<span class=\"string\">'-'</span>) <span class=\"comment\">// ['2018', '9', '3']</span></span><br><span class=\"line\">  d[<span class=\"number\">1</span>] = (<span class=\"string\">'0'</span> + d[<span class=\"number\">1</span>]).slice(<span class=\"number\">-2</span>) <span class=\"comment\">// '09'</span></span><br><span class=\"line\">  d[<span class=\"number\">2</span>] = (<span class=\"string\">'0'</span> + d[<span class=\"number\">2</span>]).slice(<span class=\"number\">-2</span>) <span class=\"comment\">// '03'</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> d.join(<span class=\"string\">'-'</span>) <span class=\"comment\">// '2018-09-03'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>那么如何避免类似问题呢？</p>\n<p>只能是提高自己姿势水平，别无他法，有空多看看 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\" rel=\"noopener\">MDN的文档</a></p>"},{"title":"为Bootstrap忽略sublimelinter htmltidy的空标签提示","date":"2015-08-03T02:46:05.000Z","_content":"找到Sublimelinter的对应配置（Windows），`Preferences > Package Settings > SublimeLinter > Settings User`，针对htmltidy添加设置：\n\n```json\n\"htmltidy\": {\n  \"ignore_match\": [\"trimming empty <span>\"]\n}\n```\n\n添加以上设置后，用Bootstrap的时候就不会提示空`<span>`了\n","source":"_posts/Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy.md","raw":"---\ntitle: '为Bootstrap忽略sublimelinter htmltidy的空标签提示'\ndate: 2015-08-03 10:46:05\ntags:\n  - sublime\ncategories:\n  - 其他\n---\n找到Sublimelinter的对应配置（Windows），`Preferences > Package Settings > SublimeLinter > Settings User`，针对htmltidy添加设置：\n\n```json\n\"htmltidy\": {\n  \"ignore_match\": [\"trimming empty <span>\"]\n}\n```\n\n添加以上设置后，用Bootstrap的时候就不会提示空`<span>`了\n","slug":"Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy","published":1,"updated":"2018-01-10T02:44:56.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1tq00017hslslrkamcp","content":"<p>找到Sublimelinter的对应配置（Windows），<code>Preferences &gt; Package Settings &gt; SublimeLinter &gt; Settings User</code>，针对htmltidy添加设置：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"htmltidy\": &#123;</span><br><span class=\"line\">  \"ignore_match\": [\"trimming empty &lt;span&gt;\"]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>添加以上设置后，用Bootstrap的时候就不会提示空<code>&lt;span&gt;</code>了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>找到Sublimelinter的对应配置（Windows），<code>Preferences &gt; Package Settings &gt; SublimeLinter &gt; Settings User</code>，针对htmltidy添加设置：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"htmltidy\": &#123;</span><br><span class=\"line\">  \"ignore_match\": [\"trimming empty &lt;span&gt;\"]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>添加以上设置后，用Bootstrap的时候就不会提示空<code>&lt;span&gt;</code>了</p>\n"},{"title":"《你不知道的JS(上)》学习笔记 第一部分","date":"2018-05-24T03:08:28.000Z","_content":"\n## 内建类型\n  - string\n  - nubmer\n  - boolean\n  - undefined\n  - object (包括null)\n  - symbol (ES6+)\n\n## 类型转换\n__Truthy&Falsy__\n  - `Boolean(NaN) === false`\n  - `Boolean([]) === true`\n  - `Boolean({}) === true`\n\n__等价__\n```js\nvar a = [1,2,3]\nvar b = [1,2,3]\nvar c = \"1,2,3\"\n\na == c // true\nb == c // true\na == b // false\n\n[1,2,3].toString() // \"1,2,3\"\n```\n__不等价__\n```js\nvar a = 42\nvar b = \"foo\"\n\na < b // false\na > b // false\na == b // false\n\nNumber(\"foo\") // NaN\n```\nNaN既不大于其他值，也不小于其他值\n\n<!-- more -->\n\n## 变量\n标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。\n\n## Strict模式\n使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。\n\n## 立即调用表达式IIFE\n```js\n(function IIFE(){\n  console.log( \"Hello!\" );\n})();\n// \"Hello!\"\n```\n\n## 闭包\n```js\nfunction makeAdder(x) {\n  function add(y) {\n    return y + x;\n  };\n  return add;\n}\nvar plusOne = makeAdder( 1 );\nplusOne( 3 ); // 4 <-- 1 + 3\n```\n\n## 模块\n模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。\n```js\nfunction User() {\n  var username;\n  var password;\n  function doLogin(user,pw) {\n    username = user;\n    password = pw;\n  }\n  var publicAPI = {\n    login: doLogin\n  };\n  return publicAPI;\n}\n// 创建实例\nvar fred = User();\nfred.login('jack', '123');\n```\n\n## this标识符\n```js\nfunction foo() {\n  console.log( this.bar );\n}\nvar bar = \"global\";\nvar obj1 = {\n  bar: \"obj1\",\n  foo: foo\n};\nvar obj2 = {\n  bar: \"obj2\"\n};\n\nfoo();            // \"global\"\nobj1.foo();       // \"obj1\"\nfoo.call( obj2 ); // \"obj2\"\nnew foo();        // undefined\n```\n  - `foo()`最终在*非strict*模式中将*this*设置为全局对象；在*strict*模式中*this*将会是`undefined`\n  - `obj1.foo()`将*this*设置为对象*obj1*\n  - `foo.call(obj2)`将*this*设置为对象*obj2*\n  - `new foo()`将*this*设置为一个新的空对象\n\n## 原型\n```js\nvar foo = {\n  a: 42\n};\n// 创建 `bar` 并将它链接到 `foo`\nvar bar = Object.create( foo );\nbar.b = \"hello world\";\nbar.b; // \"hello world\"\nbar.a; // 42 <-- 委托到 `foo`\n```\n## 作用域\n\nLHS查询 `var a`\nRHS查询 `a = 2`\n\n### 欺骗\n\n1. `eval`\n```js\nfunction foo(str, a) {\n  eval( str );\n  console.log( a, b );\n}\nvar b = 2;\nfoo( \"var b = 3;\", 1 ); // 1 3\n```\n2. `with`\n```js\nfunction foo(obj) {\n  with (obj) {\n    a = 2; // o2时，隐式 var a\n  }\n}\nvar o1 = { a: 3 };\nvar o2 = { b: 3 };\n\nfoo( o1 );\nconsole.log( o1.a ); // 2\nfoo( o2 );\nconsole.log( o2.a ); // undefined\nconsole.log( a ); // 2 泄漏到了全局作用域\n```\n\n### 性能\n`eval` 和 `with`都不建议使用，且受严格模式限制。\b引擎不会优化`eval` 和 `with`，使用多会卡。\n\n## 函数与块级作用域\n```js\nfunction doSomething(a) {\n  function doSomethingElse(a) {\n    return a - 1;\n  }\n  var b;\n  b = a + doSomethingElse( a * 2 );\n  console.log( b * 3 );\n}\ndoSomething( 2 ); // 15\n```\n`b` 和 `doSomethingElse(..)` 对任何外界影响都是不可访问的，而是仅仅由 `doSomething(..)` 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。\n\n### 命名空间\n```js\nvar MyReallyCoolLibrary = {\n  awesome: \"stuff\",\n  doSomething: function() {},\n  doAnotherThing: function() {}\n};\n```\n\n### 匿名函数命名\n```js\nsetTimeout( function timeoutHandler(){\n  console.log( \"I waited 1 second!\" );\n}, 1000 );\n// ES6 箭头函数\nvar timeoutHandler = () => console.log( \"I waited 1 second!\" );\n```\n\n### IIFE\n```js\nvar a = 2;\n(function IIFE( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n})( window );\nconsole.log( a ); // 2\n```\nUMD模块\n```js\nvar a = 2;\n(function IIFE( def ){\n  def( window );\n})(function def( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n});\n```\n`def` 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 `def`）被传递给在代码段前半部分定义的 `IIFE` 函数。最后，参数 `def` （函数）被调用，并将 `window` 作为 `global` 参数传入。\n\n### 块级作用域\n- `With`\n- `try/catch`\n  ```js\n  try { throw 2 } catch(a) {\n    console.log( a ); // 2\n  }\n  console.log( a ); // ReferenceError\n  ```\n- `let`\n- `const`\n\n### 垃圾回收\n```js\n// bad\nfunction process(data) { .. }\nvar someReallyBigData = { .. };\nprocess( someReallyBigData );\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n\n// 优化\nfunction process(data) { ..}\n// 运行过后，任何定义在这个块中的东西都可以消失了\n{\n  let someReallyBigData = { .. };\n  process( someReallyBigData );\n}\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n```\n\n## 提升\n\n```js\n// 函数优先\nfoo(); // 1\nvar foo; // var 被抛弃\nfunction foo() {\n  console.log( 1 );\n}\nfoo = function() {\n  console.log( 2 );\n};\n\n// 函数声明覆盖\nfoo(); // 3\nfunction foo() {\n  console.log( 1 );\n}\nvar foo = function() {\n  console.log( 2 );\n};\nfunction foo() {\n  console.log( 3 );\n}\n```\n\n## 闭包\n```js\n// 错误 1\nfor (var i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i ); // 打印6个6\n  }, i*1000 );\n}\n// 错误 2\nfor (var i=1; i<=5; i++) {\n  (function(){\n    setTimeout( function timer(){\n      console.log( i );\n    }, i*1000 );\n  })();\n}\n// 正确\nfor (var i=1; i<=5; i++) {\n  (function(){\n    var j = i; // \b\bIIFE作用域内部变量\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })();\n}\n// 优雅\nfor (var i=1; i<=5; i++) {\n  (function(j){\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })( i ); // 传参方式\n}\n// ES6\nfor (let i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i );\n  }, i*1000 );\n}\n```\n\n### 基于闭包的模块\n```js\nfunction CoolModule() {\n  var something = \"cool\";\n  var another = [1, 2, 3];\n  function doSomething() {\n    console.log( something );\n  }\n  function doAnother() {\n    console.log( another.join( \" ! \" ) );\n  }\n  return {\n    doSomething: doSomething,\n    doAnother: doAnother\n  };\n}\nvar foo = CoolModule();\nfoo.doSomething(); // cool\nfoo.doAnother(); // 1 ! 2 ! 3\n```","source":"_posts/You-Dont-Know-JS-notes-part1.md","raw":"---\ntitle: 《你不知道的JS(上)》学习笔记 第一部分\ndate: 2018-05-24 11:08:28\ntags:\n  - js\ncategories:\n  - 前端\n---\n\n## 内建类型\n  - string\n  - nubmer\n  - boolean\n  - undefined\n  - object (包括null)\n  - symbol (ES6+)\n\n## 类型转换\n__Truthy&Falsy__\n  - `Boolean(NaN) === false`\n  - `Boolean([]) === true`\n  - `Boolean({}) === true`\n\n__等价__\n```js\nvar a = [1,2,3]\nvar b = [1,2,3]\nvar c = \"1,2,3\"\n\na == c // true\nb == c // true\na == b // false\n\n[1,2,3].toString() // \"1,2,3\"\n```\n__不等价__\n```js\nvar a = 42\nvar b = \"foo\"\n\na < b // false\na > b // false\na == b // false\n\nNumber(\"foo\") // NaN\n```\nNaN既不大于其他值，也不小于其他值\n\n<!-- more -->\n\n## 变量\n标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。\n\n## Strict模式\n使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。\n\n## 立即调用表达式IIFE\n```js\n(function IIFE(){\n  console.log( \"Hello!\" );\n})();\n// \"Hello!\"\n```\n\n## 闭包\n```js\nfunction makeAdder(x) {\n  function add(y) {\n    return y + x;\n  };\n  return add;\n}\nvar plusOne = makeAdder( 1 );\nplusOne( 3 ); // 4 <-- 1 + 3\n```\n\n## 模块\n模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。\n```js\nfunction User() {\n  var username;\n  var password;\n  function doLogin(user,pw) {\n    username = user;\n    password = pw;\n  }\n  var publicAPI = {\n    login: doLogin\n  };\n  return publicAPI;\n}\n// 创建实例\nvar fred = User();\nfred.login('jack', '123');\n```\n\n## this标识符\n```js\nfunction foo() {\n  console.log( this.bar );\n}\nvar bar = \"global\";\nvar obj1 = {\n  bar: \"obj1\",\n  foo: foo\n};\nvar obj2 = {\n  bar: \"obj2\"\n};\n\nfoo();            // \"global\"\nobj1.foo();       // \"obj1\"\nfoo.call( obj2 ); // \"obj2\"\nnew foo();        // undefined\n```\n  - `foo()`最终在*非strict*模式中将*this*设置为全局对象；在*strict*模式中*this*将会是`undefined`\n  - `obj1.foo()`将*this*设置为对象*obj1*\n  - `foo.call(obj2)`将*this*设置为对象*obj2*\n  - `new foo()`将*this*设置为一个新的空对象\n\n## 原型\n```js\nvar foo = {\n  a: 42\n};\n// 创建 `bar` 并将它链接到 `foo`\nvar bar = Object.create( foo );\nbar.b = \"hello world\";\nbar.b; // \"hello world\"\nbar.a; // 42 <-- 委托到 `foo`\n```\n## 作用域\n\nLHS查询 `var a`\nRHS查询 `a = 2`\n\n### 欺骗\n\n1. `eval`\n```js\nfunction foo(str, a) {\n  eval( str );\n  console.log( a, b );\n}\nvar b = 2;\nfoo( \"var b = 3;\", 1 ); // 1 3\n```\n2. `with`\n```js\nfunction foo(obj) {\n  with (obj) {\n    a = 2; // o2时，隐式 var a\n  }\n}\nvar o1 = { a: 3 };\nvar o2 = { b: 3 };\n\nfoo( o1 );\nconsole.log( o1.a ); // 2\nfoo( o2 );\nconsole.log( o2.a ); // undefined\nconsole.log( a ); // 2 泄漏到了全局作用域\n```\n\n### 性能\n`eval` 和 `with`都不建议使用，且受严格模式限制。\b引擎不会优化`eval` 和 `with`，使用多会卡。\n\n## 函数与块级作用域\n```js\nfunction doSomething(a) {\n  function doSomethingElse(a) {\n    return a - 1;\n  }\n  var b;\n  b = a + doSomethingElse( a * 2 );\n  console.log( b * 3 );\n}\ndoSomething( 2 ); // 15\n```\n`b` 和 `doSomethingElse(..)` 对任何外界影响都是不可访问的，而是仅仅由 `doSomething(..)` 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。\n\n### 命名空间\n```js\nvar MyReallyCoolLibrary = {\n  awesome: \"stuff\",\n  doSomething: function() {},\n  doAnotherThing: function() {}\n};\n```\n\n### 匿名函数命名\n```js\nsetTimeout( function timeoutHandler(){\n  console.log( \"I waited 1 second!\" );\n}, 1000 );\n// ES6 箭头函数\nvar timeoutHandler = () => console.log( \"I waited 1 second!\" );\n```\n\n### IIFE\n```js\nvar a = 2;\n(function IIFE( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n})( window );\nconsole.log( a ); // 2\n```\nUMD模块\n```js\nvar a = 2;\n(function IIFE( def ){\n  def( window );\n})(function def( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n});\n```\n`def` 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 `def`）被传递给在代码段前半部分定义的 `IIFE` 函数。最后，参数 `def` （函数）被调用，并将 `window` 作为 `global` 参数传入。\n\n### 块级作用域\n- `With`\n- `try/catch`\n  ```js\n  try { throw 2 } catch(a) {\n    console.log( a ); // 2\n  }\n  console.log( a ); // ReferenceError\n  ```\n- `let`\n- `const`\n\n### 垃圾回收\n```js\n// bad\nfunction process(data) { .. }\nvar someReallyBigData = { .. };\nprocess( someReallyBigData );\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n\n// 优化\nfunction process(data) { ..}\n// 运行过后，任何定义在这个块中的东西都可以消失了\n{\n  let someReallyBigData = { .. };\n  process( someReallyBigData );\n}\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n```\n\n## 提升\n\n```js\n// 函数优先\nfoo(); // 1\nvar foo; // var 被抛弃\nfunction foo() {\n  console.log( 1 );\n}\nfoo = function() {\n  console.log( 2 );\n};\n\n// 函数声明覆盖\nfoo(); // 3\nfunction foo() {\n  console.log( 1 );\n}\nvar foo = function() {\n  console.log( 2 );\n};\nfunction foo() {\n  console.log( 3 );\n}\n```\n\n## 闭包\n```js\n// 错误 1\nfor (var i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i ); // 打印6个6\n  }, i*1000 );\n}\n// 错误 2\nfor (var i=1; i<=5; i++) {\n  (function(){\n    setTimeout( function timer(){\n      console.log( i );\n    }, i*1000 );\n  })();\n}\n// 正确\nfor (var i=1; i<=5; i++) {\n  (function(){\n    var j = i; // \b\bIIFE作用域内部变量\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })();\n}\n// 优雅\nfor (var i=1; i<=5; i++) {\n  (function(j){\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })( i ); // 传参方式\n}\n// ES6\nfor (let i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i );\n  }, i*1000 );\n}\n```\n\n### 基于闭包的模块\n```js\nfunction CoolModule() {\n  var something = \"cool\";\n  var another = [1, 2, 3];\n  function doSomething() {\n    console.log( something );\n  }\n  function doAnother() {\n    console.log( another.join( \" ! \" ) );\n  }\n  return {\n    doSomething: doSomething,\n    doAnother: doAnother\n  };\n}\nvar foo = CoolModule();\nfoo.doSomething(); // cool\nfoo.doAnother(); // 1 ! 2 ! 3\n```","slug":"You-Dont-Know-JS-notes-part1","published":1,"updated":"2018-06-13T00:44:31.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1tt00047hslqinh80la","content":"<h2 id=\"内建类型\"><a href=\"#内建类型\" class=\"headerlink\" title=\"内建类型\"></a>内建类型</h2><ul>\n<li>string</li>\n<li>nubmer</li>\n<li>boolean</li>\n<li>undefined</li>\n<li>object (包括null)</li>\n<li>symbol (ES6+)</li>\n</ul>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p><strong>Truthy&amp;Falsy</strong></p>\n<ul>\n<li><code>Boolean(NaN) === false</code></li>\n<li><code>Boolean([]) === true</code></li>\n<li><code>Boolean({}) === true</code></li>\n</ul>\n<p><strong>等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">\"1,2,3\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a == c <span class=\"comment\">// true</span></span><br><span class=\"line\">b == c <span class=\"comment\">// true</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].toString() <span class=\"comment\">// \"1,2,3\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>不等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">42</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">\"foo\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a &lt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a &gt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>(<span class=\"string\">\"foo\"</span>) <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure></p>\n<p>NaN既不大于其他值，也不小于其他值</p>\n<a id=\"more\"></a>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。</p>\n<h2 id=\"Strict模式\"><a href=\"#Strict模式\" class=\"headerlink\" title=\"Strict模式\"></a>Strict模式</h2><p>使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。</p>\n<h2 id=\"立即调用表达式IIFE\"><a href=\"#立即调用表达式IIFE\" class=\"headerlink\" title=\"立即调用表达式IIFE\"></a>立即调用表达式IIFE</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"Hello!\"</span> );</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"><span class=\"comment\">// \"Hello!\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAdder</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y + x;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> plusOne = makeAdder( <span class=\"number\">1</span> );</span><br><span class=\"line\">plusOne( <span class=\"number\">3</span> ); <span class=\"comment\">// 4 &lt;-- 1 + 3</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><p>模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">User</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> username;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> password;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doLogin</span>(<span class=\"params\">user,pw</span>) </span>&#123;</span><br><span class=\"line\">    username = user;</span><br><span class=\"line\">    password = pw;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> publicAPI = &#123;</span><br><span class=\"line\">    login: doLogin</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> publicAPI;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fred = User();</span><br><span class=\"line\">fred.login(<span class=\"string\">'jack'</span>, <span class=\"string\">'123'</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"this标识符\"><a href=\"#this标识符\" class=\"headerlink\" title=\"this标识符\"></a>this标识符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.bar );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"string\">\"global\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj1\"</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj2\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo();            <span class=\"comment\">// \"global\"</span></span><br><span class=\"line\">obj1.foo();       <span class=\"comment\">// \"obj1\"</span></span><br><span class=\"line\">foo.call( obj2 ); <span class=\"comment\">// \"obj2\"</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> foo();        <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>foo()</code>最终在<em>非strict</em>模式中将<em>this</em>设置为全局对象；在<em>strict</em>模式中<em>this</em>将会是<code>undefined</code></li>\n<li><code>obj1.foo()</code>将<em>this</em>设置为对象<em>obj1</em></li>\n<li><code>foo.call(obj2)</code>将<em>this</em>设置为对象<em>obj2</em></li>\n<li><code>new foo()</code>将<em>this</em>设置为一个新的空对象</li>\n</ul>\n<h2 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 创建 `bar` 并将它链接到 `foo`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"built_in\">Object</span>.create( foo );</span><br><span class=\"line\">bar.b = <span class=\"string\">\"hello world\"</span>;</span><br><span class=\"line\">bar.b; <span class=\"comment\">// \"hello world\"</span></span><br><span class=\"line\">bar.a; <span class=\"comment\">// 42 &lt;-- 委托到 `foo`</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>LHS查询 <code>var a</code><br>RHS查询 <code>a = 2</code></p>\n<h3 id=\"欺骗\"><a href=\"#欺骗\" class=\"headerlink\" title=\"欺骗\"></a>欺骗</h3><ol>\n<li><p><code>eval</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">str, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">eval</span>( str );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a, b );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo( <span class=\"string\">\"var b = 3;\"</span>, <span class=\"number\">1</span> ); <span class=\"comment\">// 1 3</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>with</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">with</span> (obj) &#123;</span><br><span class=\"line\">    a = <span class=\"number\">2</span>; <span class=\"comment\">// o2时，隐式 var a</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o1 = &#123; <span class=\"attr\">a</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2 = &#123; <span class=\"attr\">b</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo( o1 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o1.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">foo( o2 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o2.a ); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2 泄漏到了全局作用域</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h3><p><code>eval</code> 和 <code>with</code>都不建议使用，且受严格模式限制。\b引擎不会优化<code>eval</code> 和 <code>with</code>，使用多会卡。</p>\n<h2 id=\"函数与块级作用域\"><a href=\"#函数与块级作用域\" class=\"headerlink\" title=\"函数与块级作用域\"></a>函数与块级作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b;</span><br><span class=\"line\">  b = a + doSomethingElse( a * <span class=\"number\">2</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( b * <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">doSomething( <span class=\"number\">2</span> ); <span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<p><code>b</code> 和 <code>doSomethingElse(..)</code> 对任何外界影响都是不可访问的，而是仅仅由 <code>doSomething(..)</code> 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。</p>\n<h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyReallyCoolLibrary = &#123;</span><br><span class=\"line\">  awesome: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">  doSomething: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;,</span><br><span class=\"line\">  doAnotherThing: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"匿名函数命名\"><a href=\"#匿名函数命名\" class=\"headerlink\" title=\"匿名函数命名\"></a>匿名函数命名</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeoutHandler</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span> );</span><br><span class=\"line\"><span class=\"comment\">// ES6 箭头函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeoutHandler = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br></pre></td></tr></table></figure>\n<h3 id=\"IIFE\"><a href=\"#IIFE\" class=\"headerlink\" title=\"IIFE\"></a>IIFE</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)( <span class=\"built_in\">window</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>UMD模块<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> def </span>)</span>&#123;</span><br><span class=\"line\">  def( <span class=\"built_in\">window</span> );</span><br><span class=\"line\">&#125;)(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">def</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p><code>def</code> 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 <code>def</code>）被传递给在代码段前半部分定义的 <code>IIFE</code> 函数。最后，参数 <code>def</code> （函数）被调用，并将 <code>window</code> 作为 <code>global</code> 参数传入。</p>\n<h3 id=\"块级作用域\"><a href=\"#块级作用域\" class=\"headerlink\" title=\"块级作用域\"></a>块级作用域</h3><ul>\n<li><code>With</code></li>\n<li><p><code>try/catch</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123; <span class=\"keyword\">throw</span> <span class=\"number\">2</span> &#125; <span class=\"keyword\">catch</span>(a) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// ReferenceError</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>let</code></p>\n</li>\n<li><code>const</code></li>\n</ul>\n<h3 id=\"垃圾回收\"><a href=\"#垃圾回收\" class=\"headerlink\" title=\"垃圾回收\"></a>垃圾回收</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; .. &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">process( someReallyBigData );</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; ..&#125;</span><br><span class=\"line\"><span class=\"comment\">// 运行过后，任何定义在这个块中的东西都可以消失了</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">  process( someReallyBigData );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br></pre></td></tr></table></figure>\n<h2 id=\"提升\"><a href=\"#提升\" class=\"headerlink\" title=\"提升\"></a>提升</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数优先</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// var 被抛弃</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数声明覆盖</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包-1\"><a href=\"#闭包-1\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误 1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i ); <span class=\"comment\">// 打印6个6</span></span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 错误 2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">    &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> j = i; <span class=\"comment\">// \b\bIIFE作用域内部变量</span></span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 优雅</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">j</span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)( i ); <span class=\"comment\">// 传参方式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"基于闭包的模块\"><a href=\"#基于闭包的模块\" class=\"headerlink\" title=\"基于闭包的模块\"></a>基于闭包的模块</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CoolModule</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> something = <span class=\"string\">\"cool\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> another = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( something );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnother</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( another.join( <span class=\"string\">\" ! \"</span> ) );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    doSomething: doSomething,</span><br><span class=\"line\">    doAnother: doAnother</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = CoolModule();</span><br><span class=\"line\">foo.doSomething(); <span class=\"comment\">// cool</span></span><br><span class=\"line\">foo.doAnother(); <span class=\"comment\">// 1 ! 2 ! 3</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"内建类型\"><a href=\"#内建类型\" class=\"headerlink\" title=\"内建类型\"></a>内建类型</h2><ul>\n<li>string</li>\n<li>nubmer</li>\n<li>boolean</li>\n<li>undefined</li>\n<li>object (包括null)</li>\n<li>symbol (ES6+)</li>\n</ul>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p><strong>Truthy&amp;Falsy</strong></p>\n<ul>\n<li><code>Boolean(NaN) === false</code></li>\n<li><code>Boolean([]) === true</code></li>\n<li><code>Boolean({}) === true</code></li>\n</ul>\n<p><strong>等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">\"1,2,3\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a == c <span class=\"comment\">// true</span></span><br><span class=\"line\">b == c <span class=\"comment\">// true</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].toString() <span class=\"comment\">// \"1,2,3\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>不等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">42</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">\"foo\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a &lt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a &gt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>(<span class=\"string\">\"foo\"</span>) <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure></p>\n<p>NaN既不大于其他值，也不小于其他值</p>","more":"<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。</p>\n<h2 id=\"Strict模式\"><a href=\"#Strict模式\" class=\"headerlink\" title=\"Strict模式\"></a>Strict模式</h2><p>使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。</p>\n<h2 id=\"立即调用表达式IIFE\"><a href=\"#立即调用表达式IIFE\" class=\"headerlink\" title=\"立即调用表达式IIFE\"></a>立即调用表达式IIFE</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"Hello!\"</span> );</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"><span class=\"comment\">// \"Hello!\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAdder</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y + x;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> plusOne = makeAdder( <span class=\"number\">1</span> );</span><br><span class=\"line\">plusOne( <span class=\"number\">3</span> ); <span class=\"comment\">// 4 &lt;-- 1 + 3</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><p>模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">User</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> username;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> password;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doLogin</span>(<span class=\"params\">user,pw</span>) </span>&#123;</span><br><span class=\"line\">    username = user;</span><br><span class=\"line\">    password = pw;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> publicAPI = &#123;</span><br><span class=\"line\">    login: doLogin</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> publicAPI;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fred = User();</span><br><span class=\"line\">fred.login(<span class=\"string\">'jack'</span>, <span class=\"string\">'123'</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"this标识符\"><a href=\"#this标识符\" class=\"headerlink\" title=\"this标识符\"></a>this标识符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.bar );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"string\">\"global\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj1\"</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj2\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo();            <span class=\"comment\">// \"global\"</span></span><br><span class=\"line\">obj1.foo();       <span class=\"comment\">// \"obj1\"</span></span><br><span class=\"line\">foo.call( obj2 ); <span class=\"comment\">// \"obj2\"</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> foo();        <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>foo()</code>最终在<em>非strict</em>模式中将<em>this</em>设置为全局对象；在<em>strict</em>模式中<em>this</em>将会是<code>undefined</code></li>\n<li><code>obj1.foo()</code>将<em>this</em>设置为对象<em>obj1</em></li>\n<li><code>foo.call(obj2)</code>将<em>this</em>设置为对象<em>obj2</em></li>\n<li><code>new foo()</code>将<em>this</em>设置为一个新的空对象</li>\n</ul>\n<h2 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 创建 `bar` 并将它链接到 `foo`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"built_in\">Object</span>.create( foo );</span><br><span class=\"line\">bar.b = <span class=\"string\">\"hello world\"</span>;</span><br><span class=\"line\">bar.b; <span class=\"comment\">// \"hello world\"</span></span><br><span class=\"line\">bar.a; <span class=\"comment\">// 42 &lt;-- 委托到 `foo`</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>LHS查询 <code>var a</code><br>RHS查询 <code>a = 2</code></p>\n<h3 id=\"欺骗\"><a href=\"#欺骗\" class=\"headerlink\" title=\"欺骗\"></a>欺骗</h3><ol>\n<li><p><code>eval</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">str, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">eval</span>( str );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a, b );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo( <span class=\"string\">\"var b = 3;\"</span>, <span class=\"number\">1</span> ); <span class=\"comment\">// 1 3</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>with</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">with</span> (obj) &#123;</span><br><span class=\"line\">    a = <span class=\"number\">2</span>; <span class=\"comment\">// o2时，隐式 var a</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o1 = &#123; <span class=\"attr\">a</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2 = &#123; <span class=\"attr\">b</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo( o1 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o1.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">foo( o2 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o2.a ); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2 泄漏到了全局作用域</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h3><p><code>eval</code> 和 <code>with</code>都不建议使用，且受严格模式限制。\b引擎不会优化<code>eval</code> 和 <code>with</code>，使用多会卡。</p>\n<h2 id=\"函数与块级作用域\"><a href=\"#函数与块级作用域\" class=\"headerlink\" title=\"函数与块级作用域\"></a>函数与块级作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b;</span><br><span class=\"line\">  b = a + doSomethingElse( a * <span class=\"number\">2</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( b * <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">doSomething( <span class=\"number\">2</span> ); <span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<p><code>b</code> 和 <code>doSomethingElse(..)</code> 对任何外界影响都是不可访问的，而是仅仅由 <code>doSomething(..)</code> 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。</p>\n<h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyReallyCoolLibrary = &#123;</span><br><span class=\"line\">  awesome: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">  doSomething: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;,</span><br><span class=\"line\">  doAnotherThing: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"匿名函数命名\"><a href=\"#匿名函数命名\" class=\"headerlink\" title=\"匿名函数命名\"></a>匿名函数命名</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeoutHandler</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span> );</span><br><span class=\"line\"><span class=\"comment\">// ES6 箭头函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeoutHandler = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br></pre></td></tr></table></figure>\n<h3 id=\"IIFE\"><a href=\"#IIFE\" class=\"headerlink\" title=\"IIFE\"></a>IIFE</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)( <span class=\"built_in\">window</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>UMD模块<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> def </span>)</span>&#123;</span><br><span class=\"line\">  def( <span class=\"built_in\">window</span> );</span><br><span class=\"line\">&#125;)(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">def</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p><code>def</code> 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 <code>def</code>）被传递给在代码段前半部分定义的 <code>IIFE</code> 函数。最后，参数 <code>def</code> （函数）被调用，并将 <code>window</code> 作为 <code>global</code> 参数传入。</p>\n<h3 id=\"块级作用域\"><a href=\"#块级作用域\" class=\"headerlink\" title=\"块级作用域\"></a>块级作用域</h3><ul>\n<li><code>With</code></li>\n<li><p><code>try/catch</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123; <span class=\"keyword\">throw</span> <span class=\"number\">2</span> &#125; <span class=\"keyword\">catch</span>(a) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// ReferenceError</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>let</code></p>\n</li>\n<li><code>const</code></li>\n</ul>\n<h3 id=\"垃圾回收\"><a href=\"#垃圾回收\" class=\"headerlink\" title=\"垃圾回收\"></a>垃圾回收</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; .. &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">process( someReallyBigData );</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; ..&#125;</span><br><span class=\"line\"><span class=\"comment\">// 运行过后，任何定义在这个块中的东西都可以消失了</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">  process( someReallyBigData );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br></pre></td></tr></table></figure>\n<h2 id=\"提升\"><a href=\"#提升\" class=\"headerlink\" title=\"提升\"></a>提升</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数优先</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// var 被抛弃</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数声明覆盖</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包-1\"><a href=\"#闭包-1\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误 1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i ); <span class=\"comment\">// 打印6个6</span></span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 错误 2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">    &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> j = i; <span class=\"comment\">// \b\bIIFE作用域内部变量</span></span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 优雅</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">j</span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)( i ); <span class=\"comment\">// 传参方式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"基于闭包的模块\"><a href=\"#基于闭包的模块\" class=\"headerlink\" title=\"基于闭包的模块\"></a>基于闭包的模块</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CoolModule</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> something = <span class=\"string\">\"cool\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> another = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( something );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnother</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( another.join( <span class=\"string\">\" ! \"</span> ) );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    doSomething: doSomething,</span><br><span class=\"line\">    doAnother: doAnother</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = CoolModule();</span><br><span class=\"line\">foo.doSomething(); <span class=\"comment\">// cool</span></span><br><span class=\"line\">foo.doAnother(); <span class=\"comment\">// 1 ! 2 ! 3</span></span><br></pre></td></tr></table></figure>"},{"title":"《你不知道的JS(上)》学习笔记 第二部分","date":"2018-06-24T03:08:28.000Z","_content":"\n## 关于this\n\n在函数被调用时建立的一个绑定，它指向 __什么__ 是完全由函数被调用的调用位置来决定的。\n\n### call绑定\n```js\nfunction identify() {\n  return this.name.toUpperCase();\n}\nfunction speak() {\n  var greeting = \"Hello, I'm \" + identify.call( this );\n  console.log( greeting );\n}\nvar me = { name: \"Kyle\" };\nvar you = { name: \"Reader\" };\n\nidentify.call( me ); // KYLE\nidentify.call( you ); // READER\n\nspeak.call( me ); // Hello, I'm KYLE\nspeak.call( you ); // Hello, I'm READER\n```\n\n<!-- more -->\n\n## this解析\n\n调用位置：函数在代码中被调用的位置（__不是被声明的位置__）。\n\n### 默认绑定\n```js\n// 严格模式下不允许默认绑定this到全局\nfunction foo() {\n  \"use strict\";\n  console.log( this.a );\n}\nvar a = 2;\nfoo(); // TypeError: `this` is `undefined`\n\n// 下面严格模式与foo()调用位置无关\nfunction foo() {\n  console.log( this.a );\n}\nvar a = 2;\n(function(){\n  \"use strict\";\n  foo(); // 2\n})();\n```\n\n### 隐式绑定\n\n引用链的最后一层是影响调用位置的：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\n\nvar obj2 = {\n  a: 42,\n  foo: foo\n};\n\nvar obj1 = {\n  a: 2,\n  obj2: obj2\n};\n\nobj1.obj2.foo(); // 42\n```\n\n隐式丢失，绑定到默认全局，或严格模式下的`undefined`\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar bar = obj.foo; // 函数引用！\nvar a = \"oops, global\"; // `a` 也是一个全局对象的属性\n\nbar(); // \"oops, global\"\n```\n\n传入回调函数：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nfunction doFoo(fn) {\n  // fn引用foo\n  fn(); // <-- 调用位置!\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar a = \"oops, global\"; // a 是全局对象的属性\n\ndoFoo( obj.foo ); // \"oops, global\"\n```\n\n### 显式绑定\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\n\nfoo.call( obj ); // 2\n```\n通过 `foo.call(..)` 强制把 `this` 绑定到 `obj`\n\n如果传递一个简单基本类型值（`string boolean number`）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 `new String(..)`，`new Boolean(..)`，或 `new Number(..)`）。称为“装箱（boxing）”。\n\n1. 硬绑定\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\nvar bar = function() {\n  foo.call( obj ); // 硬绑定\n};\n\nbar(); // 2\nsetTimeout( bar, 100 ); // 2\n// 不可以被覆盖\nbar.call( window ); // 2\n```\n\n__硬绑定的应用：__\n\n- 包裹函数，负责接收参数并返回值\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  var obj = { a: 2 };\n  var bar = function() {\n    return foo.apply( obj, arguments );\n  };\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n- 辅助函数\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  // 简单的 `bind` 帮助函数\n  function bind(fn, obj) {\n    return function() {\n      return fn.apply( obj, arguments );\n    };\n  }\n  var obj = { a: 2 };\n  var bar = bind( foo, obj );\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 `Function.prototype.bind`\n```js\nfunction foo(something) {\n  console.log( this.a, something );\n  return this.a + something;\n}\nvar obj = {\n  a: 2\n};\nvar bar = foo.bind( obj );\n\nvar b = bar( 3 ); // 2 3\nconsole.log( b ); // 5\n```\n\n2. api调用的上下文(context)\n\n```js\nfunction foo(el) {\n  console.log( el, this.id );\n}\nvar obj = {\n  id: \"awesome\"\n};\n// 使用 `obj` 作为 `this` 来调用 `foo(..)`\n[1, 2, 3].forEach( foo, obj ); // 1 awesome  2 awesome  3 awesome\n```\n\n待续...","source":"_posts/You-Dont-Know-JS-notes-part2.md","raw":"---\ntitle: 《你不知道的JS(上)》学习笔记 第二部分\ndate: 2018-06-24 11:08:28\ntags:\n  - js\ncategories:\n  - 前端\n---\n\n## 关于this\n\n在函数被调用时建立的一个绑定，它指向 __什么__ 是完全由函数被调用的调用位置来决定的。\n\n### call绑定\n```js\nfunction identify() {\n  return this.name.toUpperCase();\n}\nfunction speak() {\n  var greeting = \"Hello, I'm \" + identify.call( this );\n  console.log( greeting );\n}\nvar me = { name: \"Kyle\" };\nvar you = { name: \"Reader\" };\n\nidentify.call( me ); // KYLE\nidentify.call( you ); // READER\n\nspeak.call( me ); // Hello, I'm KYLE\nspeak.call( you ); // Hello, I'm READER\n```\n\n<!-- more -->\n\n## this解析\n\n调用位置：函数在代码中被调用的位置（__不是被声明的位置__）。\n\n### 默认绑定\n```js\n// 严格模式下不允许默认绑定this到全局\nfunction foo() {\n  \"use strict\";\n  console.log( this.a );\n}\nvar a = 2;\nfoo(); // TypeError: `this` is `undefined`\n\n// 下面严格模式与foo()调用位置无关\nfunction foo() {\n  console.log( this.a );\n}\nvar a = 2;\n(function(){\n  \"use strict\";\n  foo(); // 2\n})();\n```\n\n### 隐式绑定\n\n引用链的最后一层是影响调用位置的：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\n\nvar obj2 = {\n  a: 42,\n  foo: foo\n};\n\nvar obj1 = {\n  a: 2,\n  obj2: obj2\n};\n\nobj1.obj2.foo(); // 42\n```\n\n隐式丢失，绑定到默认全局，或严格模式下的`undefined`\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar bar = obj.foo; // 函数引用！\nvar a = \"oops, global\"; // `a` 也是一个全局对象的属性\n\nbar(); // \"oops, global\"\n```\n\n传入回调函数：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nfunction doFoo(fn) {\n  // fn引用foo\n  fn(); // <-- 调用位置!\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar a = \"oops, global\"; // a 是全局对象的属性\n\ndoFoo( obj.foo ); // \"oops, global\"\n```\n\n### 显式绑定\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\n\nfoo.call( obj ); // 2\n```\n通过 `foo.call(..)` 强制把 `this` 绑定到 `obj`\n\n如果传递一个简单基本类型值（`string boolean number`）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 `new String(..)`，`new Boolean(..)`，或 `new Number(..)`）。称为“装箱（boxing）”。\n\n1. 硬绑定\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\nvar bar = function() {\n  foo.call( obj ); // 硬绑定\n};\n\nbar(); // 2\nsetTimeout( bar, 100 ); // 2\n// 不可以被覆盖\nbar.call( window ); // 2\n```\n\n__硬绑定的应用：__\n\n- 包裹函数，负责接收参数并返回值\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  var obj = { a: 2 };\n  var bar = function() {\n    return foo.apply( obj, arguments );\n  };\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n- 辅助函数\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  // 简单的 `bind` 帮助函数\n  function bind(fn, obj) {\n    return function() {\n      return fn.apply( obj, arguments );\n    };\n  }\n  var obj = { a: 2 };\n  var bar = bind( foo, obj );\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 `Function.prototype.bind`\n```js\nfunction foo(something) {\n  console.log( this.a, something );\n  return this.a + something;\n}\nvar obj = {\n  a: 2\n};\nvar bar = foo.bind( obj );\n\nvar b = bar( 3 ); // 2 3\nconsole.log( b ); // 5\n```\n\n2. api调用的上下文(context)\n\n```js\nfunction foo(el) {\n  console.log( el, this.id );\n}\nvar obj = {\n  id: \"awesome\"\n};\n// 使用 `obj` 作为 `this` 来调用 `foo(..)`\n[1, 2, 3].forEach( foo, obj ); // 1 awesome  2 awesome  3 awesome\n```\n\n待续...","slug":"You-Dont-Know-JS-notes-part2","published":1,"updated":"2018-06-14T03:49:42.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1tu00057hsle6ccbglk","content":"<h2 id=\"关于this\"><a href=\"#关于this\" class=\"headerlink\" title=\"关于this\"></a>关于this</h2><p>在函数被调用时建立的一个绑定，它指向 <strong>什么</strong> 是完全由函数被调用的调用位置来决定的。</p>\n<h3 id=\"call绑定\"><a href=\"#call绑定\" class=\"headerlink\" title=\"call绑定\"></a>call绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name.toUpperCase();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> greeting = <span class=\"string\">\"Hello, I'm \"</span> + identify.call( <span class=\"keyword\">this</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( greeting );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> me = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Kyle\"</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> you = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Reader\"</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">identify.call( me ); <span class=\"comment\">// KYLE</span></span><br><span class=\"line\">identify.call( you ); <span class=\"comment\">// READER</span></span><br><span class=\"line\"></span><br><span class=\"line\">speak.call( me ); <span class=\"comment\">// Hello, I'm KYLE</span></span><br><span class=\"line\">speak.call( you ); <span class=\"comment\">// Hello, I'm READER</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"this解析\"><a href=\"#this解析\" class=\"headerlink\" title=\"this解析\"></a>this解析</h2><p>调用位置：函数在代码中被调用的位置（<strong>不是被声明的位置</strong>）。</p>\n<h3 id=\"默认绑定\"><a href=\"#默认绑定\" class=\"headerlink\" title=\"默认绑定\"></a>默认绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 严格模式下不允许默认绑定this到全局</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo(); <span class=\"comment\">// TypeError: `this` is `undefined`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面严格模式与foo()调用位置无关</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h3 id=\"隐式绑定\"><a href=\"#隐式绑定\" class=\"headerlink\" title=\"隐式绑定\"></a>隐式绑定</h3><p>引用链的最后一层是影响调用位置的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  obj2: obj2</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.obj2.foo(); <span class=\"comment\">// 42</span></span><br></pre></td></tr></table></figure>\n<p>隐式丢失，绑定到默认全局，或严格模式下的<code>undefined</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = obj.foo; <span class=\"comment\">// 函数引用！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// `a` 也是一个全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<p>传入回调函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doFoo</span>(<span class=\"params\">fn</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// fn引用foo</span></span><br><span class=\"line\">  fn(); <span class=\"comment\">// &lt;-- 调用位置!</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// a 是全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">doFoo( obj.foo ); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"显式绑定\"><a href=\"#显式绑定\" class=\"headerlink\" title=\"显式绑定\"></a>显式绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo.call( obj ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>通过 <code>foo.call(..)</code> 强制把 <code>this</code> 绑定到 <code>obj</code></p>\n<p>如果传递一个简单基本类型值（<code>string boolean number</code>）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 <code>new String(..)</code>，<code>new Boolean(..)</code>，或 <code>new Number(..)</code>）。称为“装箱（boxing）”。</p>\n<ol>\n<li>硬绑定<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo.call( obj ); <span class=\"comment\">// 硬绑定</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">setTimeout( bar, <span class=\"number\">100</span> ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"comment\">// 不可以被覆盖</span></span><br><span class=\"line\">bar.call( <span class=\"built_in\">window</span> ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>硬绑定的应用：</strong></p>\n<ul>\n<li><p>包裹函数，负责接收参数并返回值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>辅助函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 简单的 `bind` 帮助函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bind</span>(<span class=\"params\">fn, obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = bind( foo, obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 <code>Function.prototype.bind</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo.bind( obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>api调用的上下文(context)</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( el, <span class=\"keyword\">this</span>.id );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  id: <span class=\"string\">\"awesome\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 使用 `obj` 作为 `this` 来调用 `foo(..)`</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach( foo, obj ); <span class=\"comment\">// 1 awesome  2 awesome  3 awesome</span></span><br></pre></td></tr></table></figure>\n<p>待续…</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"关于this\"><a href=\"#关于this\" class=\"headerlink\" title=\"关于this\"></a>关于this</h2><p>在函数被调用时建立的一个绑定，它指向 <strong>什么</strong> 是完全由函数被调用的调用位置来决定的。</p>\n<h3 id=\"call绑定\"><a href=\"#call绑定\" class=\"headerlink\" title=\"call绑定\"></a>call绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name.toUpperCase();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> greeting = <span class=\"string\">\"Hello, I'm \"</span> + identify.call( <span class=\"keyword\">this</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( greeting );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> me = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Kyle\"</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> you = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Reader\"</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">identify.call( me ); <span class=\"comment\">// KYLE</span></span><br><span class=\"line\">identify.call( you ); <span class=\"comment\">// READER</span></span><br><span class=\"line\"></span><br><span class=\"line\">speak.call( me ); <span class=\"comment\">// Hello, I'm KYLE</span></span><br><span class=\"line\">speak.call( you ); <span class=\"comment\">// Hello, I'm READER</span></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"this解析\"><a href=\"#this解析\" class=\"headerlink\" title=\"this解析\"></a>this解析</h2><p>调用位置：函数在代码中被调用的位置（<strong>不是被声明的位置</strong>）。</p>\n<h3 id=\"默认绑定\"><a href=\"#默认绑定\" class=\"headerlink\" title=\"默认绑定\"></a>默认绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 严格模式下不允许默认绑定this到全局</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo(); <span class=\"comment\">// TypeError: `this` is `undefined`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面严格模式与foo()调用位置无关</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h3 id=\"隐式绑定\"><a href=\"#隐式绑定\" class=\"headerlink\" title=\"隐式绑定\"></a>隐式绑定</h3><p>引用链的最后一层是影响调用位置的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  obj2: obj2</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.obj2.foo(); <span class=\"comment\">// 42</span></span><br></pre></td></tr></table></figure>\n<p>隐式丢失，绑定到默认全局，或严格模式下的<code>undefined</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = obj.foo; <span class=\"comment\">// 函数引用！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// `a` 也是一个全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<p>传入回调函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doFoo</span>(<span class=\"params\">fn</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// fn引用foo</span></span><br><span class=\"line\">  fn(); <span class=\"comment\">// &lt;-- 调用位置!</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// a 是全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">doFoo( obj.foo ); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"显式绑定\"><a href=\"#显式绑定\" class=\"headerlink\" title=\"显式绑定\"></a>显式绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo.call( obj ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>通过 <code>foo.call(..)</code> 强制把 <code>this</code> 绑定到 <code>obj</code></p>\n<p>如果传递一个简单基本类型值（<code>string boolean number</code>）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 <code>new String(..)</code>，<code>new Boolean(..)</code>，或 <code>new Number(..)</code>）。称为“装箱（boxing）”。</p>\n<ol>\n<li>硬绑定<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo.call( obj ); <span class=\"comment\">// 硬绑定</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">setTimeout( bar, <span class=\"number\">100</span> ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"comment\">// 不可以被覆盖</span></span><br><span class=\"line\">bar.call( <span class=\"built_in\">window</span> ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>硬绑定的应用：</strong></p>\n<ul>\n<li><p>包裹函数，负责接收参数并返回值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>辅助函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 简单的 `bind` 帮助函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bind</span>(<span class=\"params\">fn, obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = bind( foo, obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 <code>Function.prototype.bind</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo.bind( obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>api调用的上下文(context)</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( el, <span class=\"keyword\">this</span>.id );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  id: <span class=\"string\">\"awesome\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 使用 `obj` 作为 `this` 来调用 `foo(..)`</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach( foo, obj ); <span class=\"comment\">// 1 awesome  2 awesome  3 awesome</span></span><br></pre></td></tr></table></figure>\n<p>待续…</p>"},{"title":"brew upgrade 升级把我的node环境给搞坏了","date":"2018-06-07T07:33:21.000Z","_content":"起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是`brew update`，哦哟！确实好多可以升级的。随即开上代理并`brew upgrade`，一阵升级好痛快！\n\n升级完毕，愉快得打开vscode并`yarn dev`，报错了...\n\nvscode 终端每次加载都会提示`nvm is not compatible with the npm config \"prefix\" option: currently set to \"/usr/local\"`\n\n<!-- more -->\n\n`nvm ls`指向`system`即最新稳定版10.4.0（brew刚升级的）`nvm use 8.11.2`，重启vscode，还是指向`system`\n\n排查，各种google、stackoverflow查，各种改`.bash_profile`、`.zshrc`配置，还是没用。\n\n后来一想，一定是brew导致的！\n\n> 修复过程\n- brew 卸载新版 yarn、node\n- 重新无依赖安装yarn `brew install yarn --without-node`\n- nvm重新指向 `nvm use 8.11.2`\n- 重启vscode\n\n>扩展阅读\n`brew update` 屏蔽指定软件 `brew pin <formula>`\n取消屏蔽 `brew unpin <formula>`\n","source":"_posts/brew-upgrade-break-nvm.md","raw":"---\ntitle: brew upgrade 升级把我的node环境给搞坏了\ndate: 2018-06-07 15:33:21\ntags:\n  - node\n  - nvm\n  - homebrew\ncategories:\n  - 前端\n---\n起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是`brew update`，哦哟！确实好多可以升级的。随即开上代理并`brew upgrade`，一阵升级好痛快！\n\n升级完毕，愉快得打开vscode并`yarn dev`，报错了...\n\nvscode 终端每次加载都会提示`nvm is not compatible with the npm config \"prefix\" option: currently set to \"/usr/local\"`\n\n<!-- more -->\n\n`nvm ls`指向`system`即最新稳定版10.4.0（brew刚升级的）`nvm use 8.11.2`，重启vscode，还是指向`system`\n\n排查，各种google、stackoverflow查，各种改`.bash_profile`、`.zshrc`配置，还是没用。\n\n后来一想，一定是brew导致的！\n\n> 修复过程\n- brew 卸载新版 yarn、node\n- 重新无依赖安装yarn `brew install yarn --without-node`\n- nvm重新指向 `nvm use 8.11.2`\n- 重启vscode\n\n>扩展阅读\n`brew update` 屏蔽指定软件 `brew pin <formula>`\n取消屏蔽 `brew unpin <formula>`\n","slug":"brew-upgrade-break-nvm","published":1,"updated":"2018-06-13T00:44:21.892Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1tv00067hslsckoej5m","content":"<p>起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是<code>brew update</code>，哦哟！确实好多可以升级的。随即开上代理并<code>brew upgrade</code>，一阵升级好痛快！</p>\n<p>升级完毕，愉快得打开vscode并<code>yarn dev</code>，报错了…</p>\n<p>vscode 终端每次加载都会提示<code>nvm is not compatible with the npm config &quot;prefix&quot; option: currently set to &quot;/usr/local&quot;</code></p>\n<a id=\"more\"></a>\n<p><code>nvm ls</code>指向<code>system</code>即最新稳定版10.4.0（brew刚升级的）<code>nvm use 8.11.2</code>，重启vscode，还是指向<code>system</code></p>\n<p>排查，各种google、stackoverflow查，各种改<code>.bash_profile</code>、<code>.zshrc</code>配置，还是没用。</p>\n<p>后来一想，一定是brew导致的！</p>\n<blockquote>\n<p>修复过程</p>\n<ul>\n<li>brew 卸载新版 yarn、node</li>\n<li>重新无依赖安装yarn <code>brew install yarn --without-node</code></li>\n<li>nvm重新指向 <code>nvm use 8.11.2</code></li>\n<li>重启vscode</li>\n</ul>\n<p>扩展阅读<br><code>brew update</code> 屏蔽指定软件 <code>brew pin &lt;formula&gt;</code><br>取消屏蔽 <code>brew unpin &lt;formula&gt;</code></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是<code>brew update</code>，哦哟！确实好多可以升级的。随即开上代理并<code>brew upgrade</code>，一阵升级好痛快！</p>\n<p>升级完毕，愉快得打开vscode并<code>yarn dev</code>，报错了…</p>\n<p>vscode 终端每次加载都会提示<code>nvm is not compatible with the npm config &quot;prefix&quot; option: currently set to &quot;/usr/local&quot;</code></p>","more":"<p><code>nvm ls</code>指向<code>system</code>即最新稳定版10.4.0（brew刚升级的）<code>nvm use 8.11.2</code>，重启vscode，还是指向<code>system</code></p>\n<p>排查，各种google、stackoverflow查，各种改<code>.bash_profile</code>、<code>.zshrc</code>配置，还是没用。</p>\n<p>后来一想，一定是brew导致的！</p>\n<blockquote>\n<p>修复过程</p>\n<ul>\n<li>brew 卸载新版 yarn、node</li>\n<li>重新无依赖安装yarn <code>brew install yarn --without-node</code></li>\n<li>nvm重新指向 <code>nvm use 8.11.2</code></li>\n<li>重启vscode</li>\n</ul>\n<p>扩展阅读<br><code>brew update</code> 屏蔽指定软件 <code>brew pin &lt;formula&gt;</code><br>取消屏蔽 <code>brew unpin &lt;formula&gt;</code></p>\n</blockquote>"},{"title":"CI Session regenerate Issue with xampp on OSX","date":"2014-07-21T05:28:21.000Z","_content":"最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<!-- more -->\n问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。\n经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：\n`$config['sess_encrypt_cookie'] = FALSE;`\n居然OK了～\n也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。\n记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。\n","source":"_posts/ci-session-issue-with-xampp-on-osx.md","raw":"---\ntitle: 'CI Session regenerate Issue with xampp on OSX'\ndate: 2014-07-21 13:28:21\ntags:\n  - PHP\ncategories:\n  - 后端\n---\n最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<!-- more -->\n问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。\n经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：\n`$config['sess_encrypt_cookie'] = FALSE;`\n居然OK了～\n也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。\n记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。\n","slug":"ci-session-issue-with-xampp-on-osx","published":1,"updated":"2018-01-10T02:45:03.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1tx000a7hsltfzteick","content":"<p>最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<a id=\"more\"></a><br>问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。<br>经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：<br><code>$config[&#39;sess_encrypt_cookie&#39;] = FALSE;</code><br>居然OK了～<br>也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。<br>记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。</p>\n","site":{"data":{}},"excerpt":"<p>最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。","more":"<br>问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。<br>经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：<br><code>$config[&#39;sess_encrypt_cookie&#39;] = FALSE;</code><br>居然OK了～<br>也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。<br>记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。</p>"},{"title":"CSS 笔记","date":"2014-05-15T08:59:12.000Z","_content":"> last update: 2018-01-10\n\n主要记录一些平时很少用到，但可能会忘记的点。\n\n## fastclick导致单选按钮需要点击两次\n\n```css\nlabel > * {\n  pointer-events: none;\n}\n```\n\n## 定义选中样式\n\n如：\n\n```css\n::selection {color:#09c;}\n```\n\n<!-- more -->\n\n## 移动端开发字体设置\n\n```css\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n```\n\n## div文字垂直居中\n\n```html\n<div>我要垂直居中！</div>\n```\n\n```css\ndiv { height: 100px; display: table-cell; vertical-align: middle; }\n```\n\n\n## 用CSS做三角形\n\n```html\n<div></div>\n```\n\n```css\ndiv { height: 0; width: 0; margin-bottom: 1em; }\n```\n\n向上的：\n\n```css\nborder-left: 5px solid transparent;\nborder-right: 5px solid transparent;å\nborder-bottom: 5px solid #09c;\n```\n\n等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：\n\n```css\nborder-bottom: 9px solid #09c;\n```\n\n## 用box-shadow做纸张层叠效果\n\n[jsFiddle地址](http://jsfiddle.net/66beta/ad4HG/)\n{% jsfiddle ad4HG html,css,result %}\n\n## 清除ios原生控件样式与点击时闪现的透明层\n\n```css\n* {\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n```","source":"_posts/css-notes.md","raw":"---\ntitle: CSS 笔记\ndate: 2014-05-15 16:59:12\ntags:\n  - css\ncategories:\n  - 前端\n---\n> last update: 2018-01-10\n\n主要记录一些平时很少用到，但可能会忘记的点。\n\n## fastclick导致单选按钮需要点击两次\n\n```css\nlabel > * {\n  pointer-events: none;\n}\n```\n\n## 定义选中样式\n\n如：\n\n```css\n::selection {color:#09c;}\n```\n\n<!-- more -->\n\n## 移动端开发字体设置\n\n```css\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n```\n\n## div文字垂直居中\n\n```html\n<div>我要垂直居中！</div>\n```\n\n```css\ndiv { height: 100px; display: table-cell; vertical-align: middle; }\n```\n\n\n## 用CSS做三角形\n\n```html\n<div></div>\n```\n\n```css\ndiv { height: 0; width: 0; margin-bottom: 1em; }\n```\n\n向上的：\n\n```css\nborder-left: 5px solid transparent;\nborder-right: 5px solid transparent;å\nborder-bottom: 5px solid #09c;\n```\n\n等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：\n\n```css\nborder-bottom: 9px solid #09c;\n```\n\n## 用box-shadow做纸张层叠效果\n\n[jsFiddle地址](http://jsfiddle.net/66beta/ad4HG/)\n{% jsfiddle ad4HG html,css,result %}\n\n## 清除ios原生控件样式与点击时闪现的透明层\n\n```css\n* {\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n```","slug":"css-notes","published":1,"updated":"2018-01-10T06:58:52.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1tz000c7hslk4dxs24n","content":"<blockquote>\n<p>last update: 2018-01-10</p>\n</blockquote>\n<p>主要记录一些平时很少用到，但可能会忘记的点。</p>\n<h2 id=\"fastclick导致单选按钮需要点击两次\"><a href=\"#fastclick导致单选按钮需要点击两次\" class=\"headerlink\" title=\"fastclick导致单选按钮需要点击两次\"></a>fastclick导致单选按钮需要点击两次</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">label</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">pointer-events</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"定义选中样式\"><a href=\"#定义选中样式\" class=\"headerlink\" title=\"定义选中样式\"></a>定义选中样式</h2><p>如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">::selection</span> &#123;<span class=\"attribute\">color</span>:<span class=\"number\">#09c</span>;&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"移动端开发字体设置\"><a href=\"#移动端开发字体设置\" class=\"headerlink\" title=\"移动端开发字体设置\"></a>移动端开发字体设置</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';</span><br></pre></td></tr></table></figure>\n<h2 id=\"div文字垂直居中\"><a href=\"#div文字垂直居中\" class=\"headerlink\" title=\"div文字垂直居中\"></a>div文字垂直居中</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我要垂直居中！<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">display</span>: table-cell; <span class=\"attribute\">vertical-align</span>: middle; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用CSS做三角形\"><a href=\"#用CSS做三角形\" class=\"headerlink\" title=\"用CSS做三角形\"></a>用CSS做三角形</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">1em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>向上的：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-left</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">border-right</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;å</span><br><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<p>等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 9<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用box-shadow做纸张层叠效果\"><a href=\"#用box-shadow做纸张层叠效果\" class=\"headerlink\" title=\"用box-shadow做纸张层叠效果\"></a>用box-shadow做纸张层叠效果</h2><p><a href=\"http://jsfiddle.net/66beta/ad4HG/\" target=\"_blank\" rel=\"noopener\">jsFiddle地址</a><br><iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ad4HG/embedded/html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe></p>\n<h2 id=\"清除ios原生控件样式与点击时闪现的透明层\"><a href=\"#清除ios原生控件样式与点击时闪现的透明层\" class=\"headerlink\" title=\"清除ios原生控件样式与点击时闪现的透明层\"></a>清除ios原生控件样式与点击时闪现的透明层</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-appearance</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-tap-highlight-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote>\n<p>last update: 2018-01-10</p>\n</blockquote>\n<p>主要记录一些平时很少用到，但可能会忘记的点。</p>\n<h2 id=\"fastclick导致单选按钮需要点击两次\"><a href=\"#fastclick导致单选按钮需要点击两次\" class=\"headerlink\" title=\"fastclick导致单选按钮需要点击两次\"></a>fastclick导致单选按钮需要点击两次</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">label</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">pointer-events</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"定义选中样式\"><a href=\"#定义选中样式\" class=\"headerlink\" title=\"定义选中样式\"></a>定义选中样式</h2><p>如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">::selection</span> &#123;<span class=\"attribute\">color</span>:<span class=\"number\">#09c</span>;&#125;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"移动端开发字体设置\"><a href=\"#移动端开发字体设置\" class=\"headerlink\" title=\"移动端开发字体设置\"></a>移动端开发字体设置</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';</span><br></pre></td></tr></table></figure>\n<h2 id=\"div文字垂直居中\"><a href=\"#div文字垂直居中\" class=\"headerlink\" title=\"div文字垂直居中\"></a>div文字垂直居中</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我要垂直居中！<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">display</span>: table-cell; <span class=\"attribute\">vertical-align</span>: middle; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用CSS做三角形\"><a href=\"#用CSS做三角形\" class=\"headerlink\" title=\"用CSS做三角形\"></a>用CSS做三角形</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">1em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>向上的：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-left</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">border-right</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;å</span><br><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<p>等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 9<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用box-shadow做纸张层叠效果\"><a href=\"#用box-shadow做纸张层叠效果\" class=\"headerlink\" title=\"用box-shadow做纸张层叠效果\"></a>用box-shadow做纸张层叠效果</h2><p><a href=\"http://jsfiddle.net/66beta/ad4HG/\" target=\"_blank\" rel=\"noopener\">jsFiddle地址</a><br><iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ad4HG/embedded/html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe></p>\n<h2 id=\"清除ios原生控件样式与点击时闪现的透明层\"><a href=\"#清除ios原生控件样式与点击时闪现的透明层\" class=\"headerlink\" title=\"清除ios原生控件样式与点击时闪现的透明层\"></a>清除ios原生控件样式与点击时闪现的透明层</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-appearance</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-tap-highlight-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"如何在Linux终端中删除中文文件夹","date":"2014-08-11T07:42:02.000Z","_content":"为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。<!-- more -->\n后来Google了下，找到了解决办法，记录下，有备无患～\n\n1. 列出当前目录下文件(夹)的节点号。\n\n    `ls -i`\n\n1. 看到要删除的文件夹的节点号，比如123456，利用节点号删除\n\n`find ./ -inum 123456 -print -exec rm {} -rf \\;`\n\n其实不只是中文文件夹，乱码的也是同理。\n","source":"_posts/delete-a-chinese-foler-from-linux-command-line.md","raw":"---\ntitle: 如何在Linux终端中删除中文文件夹\ndate: 2014-08-11 15:42:02\ntags:\n  - linux\ncategories:\n  - 其他\n---\n为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。<!-- more -->\n后来Google了下，找到了解决办法，记录下，有备无患～\n\n1. 列出当前目录下文件(夹)的节点号。\n\n    `ls -i`\n\n1. 看到要删除的文件夹的节点号，比如123456，利用节点号删除\n\n`find ./ -inum 123456 -print -exec rm {} -rf \\;`\n\n其实不只是中文文件夹，乱码的也是同理。\n","slug":"delete-a-chinese-foler-from-linux-command-line","published":1,"updated":"2018-01-10T02:45:19.037Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1u1000g7hsl1x2yf496","content":"<p>为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。<a id=\"more\"></a><br>后来Google了下，找到了解决办法，记录下，有备无患～</p>\n<ol>\n<li><p>列出当前目录下文件(夹)的节点号。</p>\n<p> <code>ls -i</code></p>\n</li>\n<li><p>看到要删除的文件夹的节点号，比如123456，利用节点号删除</p>\n</li>\n</ol>\n<p><code>find ./ -inum 123456 -print -exec rm {} -rf \\;</code></p>\n<p>其实不只是中文文件夹，乱码的也是同理。</p>\n","site":{"data":{}},"excerpt":"<p>为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。","more":"<br>后来Google了下，找到了解决办法，记录下，有备无患～</p>\n<ol>\n<li><p>列出当前目录下文件(夹)的节点号。</p>\n<p> <code>ls -i</code></p>\n</li>\n<li><p>看到要删除的文件夹的节点号，比如123456，利用节点号删除</p>\n</li>\n</ol>\n<p><code>find ./ -inum 123456 -print -exec rm {} -rf \\;</code></p>\n<p>其实不只是中文文件夹，乱码的也是同理。</p>"},{"title":"如何在Github上删除commit","date":"2014-08-11T07:30:08.000Z","_content":"自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。<!-- more -->\n想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。\n\n## 在git/Github中删除commit的命令\n\n```bash\ngit reset --hard <commit_id>\ngit push origin HEAD --force\n```\n\n**git reset –hard** 彻底回退到某个版本\n**<commit_id>** 长长的SHA1值\n**HEAD** 最近一个提交\n需要在命令行中执行，Github客户端没有这个功能。\n","source":"_posts/delete-commits-from-github.md","raw":"---\ntitle: 如何在Github上删除commit\ndate: 2014-08-11 15:30:08\ntags:\n  - git\ncategories:\n  - 其他\n---\n自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。<!-- more -->\n想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。\n\n## 在git/Github中删除commit的命令\n\n```bash\ngit reset --hard <commit_id>\ngit push origin HEAD --force\n```\n\n**git reset –hard** 彻底回退到某个版本\n**<commit_id>** 长长的SHA1值\n**HEAD** 最近一个提交\n需要在命令行中执行，Github客户端没有这个功能。\n","slug":"delete-commits-from-github","published":1,"updated":"2018-01-10T02:45:32.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1u3000j7hslwekaia6s","content":"<p>自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。<a id=\"more\"></a><br>想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。</p>\n<h2 id=\"在git-Github中删除commit的命令\"><a href=\"#在git-Github中删除commit的命令\" class=\"headerlink\" title=\"在git/Github中删除commit的命令\"></a>在git/Github中删除commit的命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit_id&gt;</span><br><span class=\"line\">git push origin HEAD --force</span><br></pre></td></tr></table></figure>\n<p><strong>git reset –hard</strong> 彻底回退到某个版本<br><strong><commit_id></commit_id></strong> 长长的SHA1值<br><strong>HEAD</strong> 最近一个提交<br>需要在命令行中执行，Github客户端没有这个功能。</p>\n","site":{"data":{}},"excerpt":"<p>自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。","more":"<br>想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。</p>\n<h2 id=\"在git-Github中删除commit的命令\"><a href=\"#在git-Github中删除commit的命令\" class=\"headerlink\" title=\"在git/Github中删除commit的命令\"></a>在git/Github中删除commit的命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit_id&gt;</span><br><span class=\"line\">git push origin HEAD --force</span><br></pre></td></tr></table></figure>\n<p><strong>git reset –hard</strong> 彻底回退到某个版本<br><strong><commit_id></commit_id></strong> 长长的SHA1值<br><strong>HEAD</strong> 最近一个提交<br>需要在命令行中执行，Github客户端没有这个功能。</p>"},{"title":"Chrome中启用第三方扩展","date":"2014-06-10T09:52:12.000Z","_content":"Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。\n乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。\n但是类似**Youtube Center**之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？\n\n## \"Challenge except\"\n\n感谢的userscripts.org社区，催生了<!-- more -->**[Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo)**这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！\n\n## 进入主题\n\n到Chrome应用商店安装**Tampermonkey**，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是`https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js`，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。\n于是，被Chrome禁用的扩展，又复活了。\n![Install Youtube Center on Tampermonkey](/public/tampermonkey.png)\n\n## 担心\n\n万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～\n","source":"_posts/enable-third-party-extensions-on-chrome.md","raw":"---\ntitle: Chrome中启用第三方扩展\ndate: 2014-06-10 17:52:12\ntags:\n  - chrome\ncategories:\n  - 其他\n---\nGoogle发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。\n乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。\n但是类似**Youtube Center**之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？\n\n## \"Challenge except\"\n\n感谢的userscripts.org社区，催生了<!-- more -->**[Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo)**这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！\n\n## 进入主题\n\n到Chrome应用商店安装**Tampermonkey**，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是`https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js`，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。\n于是，被Chrome禁用的扩展，又复活了。\n![Install Youtube Center on Tampermonkey](/public/tampermonkey.png)\n\n## 担心\n\n万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～\n","slug":"enable-third-party-extensions-on-chrome","published":1,"updated":"2018-01-10T02:45:37.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1u5000n7hsl4szxsel1","content":"<p>Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。<br>乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。<br>但是类似<strong>Youtube Center</strong>之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？</p>\n<h2 id=\"“Challenge-except”\"><a href=\"#“Challenge-except”\" class=\"headerlink\" title=\"“Challenge except”\"></a>“Challenge except”</h2><p>感谢的userscripts.org社区，催生了<a id=\"more\"></a><strong><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" target=\"_blank\" rel=\"noopener\">Tampermonkey</a></strong>这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！</p>\n<h2 id=\"进入主题\"><a href=\"#进入主题\" class=\"headerlink\" title=\"进入主题\"></a>进入主题</h2><p>到Chrome应用商店安装<strong>Tampermonkey</strong>，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是<code>https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js</code>，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。<br>于是，被Chrome禁用的扩展，又复活了。<br><img src=\"/public/tampermonkey.png\" alt=\"Install Youtube Center on Tampermonkey\"></p>\n<h2 id=\"担心\"><a href=\"#担心\" class=\"headerlink\" title=\"担心\"></a>担心</h2><p>万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～</p>\n","site":{"data":{}},"excerpt":"<p>Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。<br>乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。<br>但是类似<strong>Youtube Center</strong>之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？</p>\n<h2 id=\"“Challenge-except”\"><a href=\"#“Challenge-except”\" class=\"headerlink\" title=\"“Challenge except”\"></a>“Challenge except”</h2><p>感谢的userscripts.org社区，催生了","more":"<strong><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" target=\"_blank\" rel=\"noopener\">Tampermonkey</a></strong>这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！</p>\n<h2 id=\"进入主题\"><a href=\"#进入主题\" class=\"headerlink\" title=\"进入主题\"></a>进入主题</h2><p>到Chrome应用商店安装<strong>Tampermonkey</strong>，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是<code>https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js</code>，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。<br>于是，被Chrome禁用的扩展，又复活了。<br><img src=\"/public/tampermonkey.png\" alt=\"Install Youtube Center on Tampermonkey\"></p>\n<h2 id=\"担心\"><a href=\"#担心\" class=\"headerlink\" title=\"担心\"></a>担心</h2><p>万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～</p>"},{"title":"Hello World","date":"2014-05-04T14:11:06.000Z","_content":"## Octopress不成，Hexo之\n\nRuby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。\n那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～\nHexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。\n<!-- more -->\n毕竟是js啊，改起来瞬间就顺手了...\n\n## 好好码字\n\n自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！\n都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2014-05-04 22:11:06\ntags:\n  - hexo\n  - nodejs\ncategories:\n  - 其他\n---\n## Octopress不成，Hexo之\n\nRuby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。\n那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～\nHexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。\n<!-- more -->\n毕竟是js啊，改起来瞬间就顺手了...\n\n## 好好码字\n\n自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！\n都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～\n","slug":"hello-world","published":1,"updated":"2018-01-10T02:45:42.030Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1u6000q7hsl4edd5ume","content":"<h2 id=\"Octopress不成，Hexo之\"><a href=\"#Octopress不成，Hexo之\" class=\"headerlink\" title=\"Octopress不成，Hexo之\"></a>Octopress不成，Hexo之</h2><p>Ruby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。<br>那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～<br>Hexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。<br><a id=\"more\"></a><br>毕竟是js啊，改起来瞬间就顺手了…</p>\n<h2 id=\"好好码字\"><a href=\"#好好码字\" class=\"headerlink\" title=\"好好码字\"></a>好好码字</h2><p>自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！<br>都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Octopress不成，Hexo之\"><a href=\"#Octopress不成，Hexo之\" class=\"headerlink\" title=\"Octopress不成，Hexo之\"></a>Octopress不成，Hexo之</h2><p>Ruby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。<br>那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～<br>Hexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。<br>","more":"<br>毕竟是js啊，改起来瞬间就顺手了…</p>\n<h2 id=\"好好码字\"><a href=\"#好好码字\" class=\"headerlink\" title=\"好好码字\"></a>好好码字</h2><p>自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！<br>都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～</p>"},{"title":"如何安装配置Hexo","date":"2014-05-06T08:29:59.000Z","_content":"[Hexo](http://hexo.io/) - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞[tommy351](http://zespia.tw/)开发的。在[Github](https://github.com/tommy351/hexo)上搜索\"node.js blog\"的话，当前是Most stars的。\n**Hexo的安装也非常便捷(Git等常用工具就不多说了～)：**\n\n## 搭建环境\n\n<!-- more -->\n\n1. 安装nodejs，可以从[nodejs官网](http://nodejs.org/)下载到最新稳定版本。\n\n  OSX/Linux用户建议直接安装[nvm (Node Version Manager)](https://github.com/creationix/nvm)，然后用nvm安装指定的nodejs版本；\n  Windows用户没有nvm但是有[nodist (Natural node version manager for windows)](https://github.com/marcelklehr/nodist)（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。\n\n1. 采用taobao的npm镜像，安装cnpm\n\n  如同gem镜像一样，taobao也有个npm镜像叫做[TAONPM](http://npm.taobao.org/)，没10分钟同步一次，杠杠滴。\n  每次指定镜像源太麻烦了，所以有了cnpm：\n  `npm install -g cnpm --registry=http://registry.npm.taobao.org`\n  下次再想从taobao镜像安装的时候，直接\n  `cnpm install -g *`\n  很方便。\n\n## 安装并初始化Hexo\n\n1. 安装Hexo\n\n  搭建好了nodejs环境，安装模块就很简单了：\n  `npm install -g hexo`\n\n1. 初始化\n\n  以我的Windows机器（POWERSHELL）为例：\n  `PS C:\\Users\\66beta> hexo init 66beta.github.io`\n  **注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究**\n  来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。\n  [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：\n  `npm install hexo-generator-feed --save`\n  然后，根据[Hexo官方文档](http://hexo.io/docs/configuration.html)来对_config.yml做一些配置。\n\n## 写文章并生成HTML\n\n1. 添加一篇文章\n\n  `hexo new [layout] <title>`\n  比如：\n  `hexo new \"Hello Hexo\"`\n  在source\\\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～\n\n1. 生成HTML\n\n  编写完后，运行生成HTML的命令：`hexo generate`\n\n1. 预览\n\n  生成完HTML文件后，可以运行一个web服务来查看效果：`hexo server`\n  保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。\n\n## 完毕\n\n以上只是记录下安装的流程，具体安装与使用请见[Hexo官网](http://hexo.io/)，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。\n\n自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～\n","source":"_posts/how-to-setup-hexo.md","raw":"---\ntitle: '如何安装配置Hexo'\ndate: 2014-05-06 16:29:59\ntags:\n  - hexo\ncategories:\n  - 其他\n---\n[Hexo](http://hexo.io/) - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞[tommy351](http://zespia.tw/)开发的。在[Github](https://github.com/tommy351/hexo)上搜索\"node.js blog\"的话，当前是Most stars的。\n**Hexo的安装也非常便捷(Git等常用工具就不多说了～)：**\n\n## 搭建环境\n\n<!-- more -->\n\n1. 安装nodejs，可以从[nodejs官网](http://nodejs.org/)下载到最新稳定版本。\n\n  OSX/Linux用户建议直接安装[nvm (Node Version Manager)](https://github.com/creationix/nvm)，然后用nvm安装指定的nodejs版本；\n  Windows用户没有nvm但是有[nodist (Natural node version manager for windows)](https://github.com/marcelklehr/nodist)（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。\n\n1. 采用taobao的npm镜像，安装cnpm\n\n  如同gem镜像一样，taobao也有个npm镜像叫做[TAONPM](http://npm.taobao.org/)，没10分钟同步一次，杠杠滴。\n  每次指定镜像源太麻烦了，所以有了cnpm：\n  `npm install -g cnpm --registry=http://registry.npm.taobao.org`\n  下次再想从taobao镜像安装的时候，直接\n  `cnpm install -g *`\n  很方便。\n\n## 安装并初始化Hexo\n\n1. 安装Hexo\n\n  搭建好了nodejs环境，安装模块就很简单了：\n  `npm install -g hexo`\n\n1. 初始化\n\n  以我的Windows机器（POWERSHELL）为例：\n  `PS C:\\Users\\66beta> hexo init 66beta.github.io`\n  **注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究**\n  来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。\n  [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：\n  `npm install hexo-generator-feed --save`\n  然后，根据[Hexo官方文档](http://hexo.io/docs/configuration.html)来对_config.yml做一些配置。\n\n## 写文章并生成HTML\n\n1. 添加一篇文章\n\n  `hexo new [layout] <title>`\n  比如：\n  `hexo new \"Hello Hexo\"`\n  在source\\\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～\n\n1. 生成HTML\n\n  编写完后，运行生成HTML的命令：`hexo generate`\n\n1. 预览\n\n  生成完HTML文件后，可以运行一个web服务来查看效果：`hexo server`\n  保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。\n\n## 完毕\n\n以上只是记录下安装的流程，具体安装与使用请见[Hexo官网](http://hexo.io/)，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。\n\n自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～\n","slug":"how-to-setup-hexo","published":1,"updated":"2018-01-10T02:45:46.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1u7000t7hslxn2p8t4g","content":"<p><a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a> - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞<a href=\"http://zespia.tw/\" target=\"_blank\" rel=\"noopener\">tommy351</a>开发的。在<a href=\"https://github.com/tommy351/hexo\" target=\"_blank\" rel=\"noopener\">Github</a>上搜索”node.js blog”的话，当前是Most stars的。<br><strong>Hexo的安装也非常便捷(Git等常用工具就不多说了～)：</strong></p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2><a id=\"more\"></a>\n<ol>\n<li><p>安装nodejs，可以从<a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">nodejs官网</a>下载到最新稳定版本。</p>\n<p>OSX/Linux用户建议直接安装<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm (Node Version Manager)</a>，然后用nvm安装指定的nodejs版本；<br>Windows用户没有nvm但是有<a href=\"https://github.com/marcelklehr/nodist\" target=\"_blank\" rel=\"noopener\">nodist (Natural node version manager for windows)</a>（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。</p>\n</li>\n<li><p>采用taobao的npm镜像，安装cnpm</p>\n<p>如同gem镜像一样，taobao也有个npm镜像叫做<a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"noopener\">TAONPM</a>，没10分钟同步一次，杠杠滴。<br>每次指定镜像源太麻烦了，所以有了cnpm：<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code><br>下次再想从taobao镜像安装的时候，直接<br><code>cnpm install -g *</code><br>很方便。</p>\n</li>\n</ol>\n<h2 id=\"安装并初始化Hexo\"><a href=\"#安装并初始化Hexo\" class=\"headerlink\" title=\"安装并初始化Hexo\"></a>安装并初始化Hexo</h2><ol>\n<li><p>安装Hexo</p>\n<p>搭建好了nodejs环境，安装模块就很简单了：<br><code>npm install -g hexo</code></p>\n</li>\n<li><p>初始化</p>\n<p>以我的Windows机器（POWERSHELL）为例：<br><code>PS C:\\Users\\66beta&gt; hexo init 66beta.github.io</code><br><strong>注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究</strong><br>来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。<br><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a>是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：<br><code>npm install hexo-generator-feed --save</code><br>然后，根据<a href=\"http://hexo.io/docs/configuration.html\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a>来对_config.yml做一些配置。</p>\n</li>\n</ol>\n<h2 id=\"写文章并生成HTML\"><a href=\"#写文章并生成HTML\" class=\"headerlink\" title=\"写文章并生成HTML\"></a>写文章并生成HTML</h2><ol>\n<li><p>添加一篇文章</p>\n<p><code>hexo new [layout] &lt;title&gt;</code><br>比如：<br><code>hexo new &quot;Hello Hexo&quot;</code><br>在source\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～</p>\n</li>\n<li><p>生成HTML</p>\n<p>编写完后，运行生成HTML的命令：<code>hexo generate</code></p>\n</li>\n<li><p>预览</p>\n<p>生成完HTML文件后，可以运行一个web服务来查看效果：<code>hexo server</code><br>保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。</p>\n</li>\n</ol>\n<h2 id=\"完毕\"><a href=\"#完毕\" class=\"headerlink\" title=\"完毕\"></a>完毕</h2><p>以上只是记录下安装的流程，具体安装与使用请见<a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官网</a>，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。</p>\n<p>自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a> - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞<a href=\"http://zespia.tw/\" target=\"_blank\" rel=\"noopener\">tommy351</a>开发的。在<a href=\"https://github.com/tommy351/hexo\" target=\"_blank\" rel=\"noopener\">Github</a>上搜索”node.js blog”的话，当前是Most stars的。<br><strong>Hexo的安装也非常便捷(Git等常用工具就不多说了～)：</strong></p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2>","more":"<ol>\n<li><p>安装nodejs，可以从<a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">nodejs官网</a>下载到最新稳定版本。</p>\n<p>OSX/Linux用户建议直接安装<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm (Node Version Manager)</a>，然后用nvm安装指定的nodejs版本；<br>Windows用户没有nvm但是有<a href=\"https://github.com/marcelklehr/nodist\" target=\"_blank\" rel=\"noopener\">nodist (Natural node version manager for windows)</a>（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。</p>\n</li>\n<li><p>采用taobao的npm镜像，安装cnpm</p>\n<p>如同gem镜像一样，taobao也有个npm镜像叫做<a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"noopener\">TAONPM</a>，没10分钟同步一次，杠杠滴。<br>每次指定镜像源太麻烦了，所以有了cnpm：<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code><br>下次再想从taobao镜像安装的时候，直接<br><code>cnpm install -g *</code><br>很方便。</p>\n</li>\n</ol>\n<h2 id=\"安装并初始化Hexo\"><a href=\"#安装并初始化Hexo\" class=\"headerlink\" title=\"安装并初始化Hexo\"></a>安装并初始化Hexo</h2><ol>\n<li><p>安装Hexo</p>\n<p>搭建好了nodejs环境，安装模块就很简单了：<br><code>npm install -g hexo</code></p>\n</li>\n<li><p>初始化</p>\n<p>以我的Windows机器（POWERSHELL）为例：<br><code>PS C:\\Users\\66beta&gt; hexo init 66beta.github.io</code><br><strong>注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究</strong><br>来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。<br><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a>是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：<br><code>npm install hexo-generator-feed --save</code><br>然后，根据<a href=\"http://hexo.io/docs/configuration.html\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a>来对_config.yml做一些配置。</p>\n</li>\n</ol>\n<h2 id=\"写文章并生成HTML\"><a href=\"#写文章并生成HTML\" class=\"headerlink\" title=\"写文章并生成HTML\"></a>写文章并生成HTML</h2><ol>\n<li><p>添加一篇文章</p>\n<p><code>hexo new [layout] &lt;title&gt;</code><br>比如：<br><code>hexo new &quot;Hello Hexo&quot;</code><br>在source\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～</p>\n</li>\n<li><p>生成HTML</p>\n<p>编写完后，运行生成HTML的命令：<code>hexo generate</code></p>\n</li>\n<li><p>预览</p>\n<p>生成完HTML文件后，可以运行一个web服务来查看效果：<code>hexo server</code><br>保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。</p>\n</li>\n</ol>\n<h2 id=\"完毕\"><a href=\"#完毕\" class=\"headerlink\" title=\"完毕\"></a>完毕</h2><p>以上只是记录下安装的流程，具体安装与使用请见<a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官网</a>，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。</p>\n<p>自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～</p>"},{"title":"jQuery Mobile页面刷新JS失效问题","date":"2014-06-24T08:35:42.000Z","_content":"用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<!-- more -->\n\n翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：\n`\"It's important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=\"external\" or data-ajax=\"false\" to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.\"`\n\n例如：`<a href=\"multipage.html\" rel=\"external\">Multi-page link</a>`\n\n哎，看文档不仔细啊～\n","source":"_posts/jquery-mobile-full-page-reload.md","raw":"---\ntitle: 'jQuery Mobile页面刷新JS失效问题'\ndate: 2014-06-24 16:35:42\ntags:\n  - jQuery Mobile\n  - js\ncategories:\n  - 前端\n---\n用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<!-- more -->\n\n翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：\n`\"It's important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=\"external\" or data-ajax=\"false\" to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.\"`\n\n例如：`<a href=\"multipage.html\" rel=\"external\">Multi-page link</a>`\n\n哎，看文档不仔细啊～\n","slug":"jquery-mobile-full-page-reload","published":1,"updated":"2018-01-10T02:44:25.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1u8000v7hsl4fzxu3wr","content":"<p>用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<a id=\"more\"></a></p>\n<p>翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：<br><code>&quot;It&#39;s important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=&quot;external&quot; or data-ajax=&quot;false&quot; to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.&quot;</code></p>\n<p>例如：<code>&lt;a href=&quot;multipage.html&quot; rel=&quot;external&quot;&gt;Multi-page link&lt;/a&gt;</code></p>\n<p>哎，看文档不仔细啊～</p>\n","site":{"data":{}},"excerpt":"<p>用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。","more":"</p>\n<p>翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：<br><code>&quot;It&#39;s important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=&quot;external&quot; or data-ajax=&quot;false&quot; to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.&quot;</code></p>\n<p>例如：<code>&lt;a href=&quot;multipage.html&quot; rel=&quot;external&quot;&gt;Multi-page link&lt;/a&gt;</code></p>\n<p>哎，看文档不仔细啊～</p>"},{"title":"JS 笔记","date":"2018-01-10T02:46:45.000Z","_content":"记录js的知识点、跳坑指南。\n\n## 声明提升（Hosing）\n\n```js\na();\nvar a = 2;\nfunction a(){\n  console.log(1);\n}\na();\n/* 结果\n1\nUncaught TypeError: foo is not a function\n*/\n\n// 实际执行时的代码\nvar foo; // 声明提升\nfunction foo(){ // 声明提升\n  console.log(1);\n}\nfoo();\nfoo = 0; // 初始化赋值不提升\nfoo(); // 出错，此时 foo 是 0\n```\n\n<!-- more -->\n\n## 闭包陷阱\n\n典型案例，循环绑定事件\n\n```html\n<button>0</button>\n<button>1</button>\n<button>2</button>\n<button>3</button>\n<button>4</button>\n```\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  console.log(who + ' clicked')\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', function () { // 匿名函数才可以传参\n    onClickButton(i)\n  }, false)\n}\n\n/* 结果\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n*/\n```\n\n想要达到预期效果，改成如下即可：\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  return function () { // 返回一个函数\n    console.log(who + ' clicked')\n  }\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', onClickButton(i), false) // 返回了函数，所以不需要匿名函数包裹了\n}\n\n/* 结果\n0 clicked\n1 clicked\n2 clicked\n3 clicked\n4 clicked\n*/\n```\n\n## ES6 解构\n\n```js\n// 获取元素\nconst array = [1, 2, 3, 4];\nconst [first, ,third] = array;\nconsole.log(first, third); // 1 3\n\n// 值交换\nlet a = 1;\nlet b = 2;\n[a, b] = [b, a];\nconsole.log(a, b); // 2 1\n\n// 返回解构简写\nfunction margin() {\n  const left = 1, right = 2, top = 3, bottom = 4;\n  return { left, right, top, bottom };\n}\nconst { left, bottom } = margin();\nconsole.log(left, bottom); // 1 4\n\n// 参数匹配\nconst user = {firstName: '111', lastName: '222'};\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\nconsole.log(getFullName(user)); // 111 222\n\n// 深度匹配\nfunction settings() {\n  return { display: { color: 'red' }, keyboard: { layout: 'querty'} };\n}\nconst { display: { color: displayColor }, keyboard: { layout: keyboardLayout }} = settings();\nconsole.log(displayColor, keyboardLayout); // red querty\n```\n\n## ES6 展开操作符\n\n```js\n// ES5\nMath.max.apply(Math, [2,100,1,6,43]) // 100\n\n// ES6\nMath.max(...[2,100,1,6,43]) // 100\n```","source":"_posts/js-notes.md","raw":"---\ntitle: JS 笔记\ndate: 2018-01-10 10:46:45\ntags:\n  - js\ncategories:\n  - 前端\n---\n记录js的知识点、跳坑指南。\n\n## 声明提升（Hosing）\n\n```js\na();\nvar a = 2;\nfunction a(){\n  console.log(1);\n}\na();\n/* 结果\n1\nUncaught TypeError: foo is not a function\n*/\n\n// 实际执行时的代码\nvar foo; // 声明提升\nfunction foo(){ // 声明提升\n  console.log(1);\n}\nfoo();\nfoo = 0; // 初始化赋值不提升\nfoo(); // 出错，此时 foo 是 0\n```\n\n<!-- more -->\n\n## 闭包陷阱\n\n典型案例，循环绑定事件\n\n```html\n<button>0</button>\n<button>1</button>\n<button>2</button>\n<button>3</button>\n<button>4</button>\n```\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  console.log(who + ' clicked')\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', function () { // 匿名函数才可以传参\n    onClickButton(i)\n  }, false)\n}\n\n/* 结果\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n*/\n```\n\n想要达到预期效果，改成如下即可：\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  return function () { // 返回一个函数\n    console.log(who + ' clicked')\n  }\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', onClickButton(i), false) // 返回了函数，所以不需要匿名函数包裹了\n}\n\n/* 结果\n0 clicked\n1 clicked\n2 clicked\n3 clicked\n4 clicked\n*/\n```\n\n## ES6 解构\n\n```js\n// 获取元素\nconst array = [1, 2, 3, 4];\nconst [first, ,third] = array;\nconsole.log(first, third); // 1 3\n\n// 值交换\nlet a = 1;\nlet b = 2;\n[a, b] = [b, a];\nconsole.log(a, b); // 2 1\n\n// 返回解构简写\nfunction margin() {\n  const left = 1, right = 2, top = 3, bottom = 4;\n  return { left, right, top, bottom };\n}\nconst { left, bottom } = margin();\nconsole.log(left, bottom); // 1 4\n\n// 参数匹配\nconst user = {firstName: '111', lastName: '222'};\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\nconsole.log(getFullName(user)); // 111 222\n\n// 深度匹配\nfunction settings() {\n  return { display: { color: 'red' }, keyboard: { layout: 'querty'} };\n}\nconst { display: { color: displayColor }, keyboard: { layout: keyboardLayout }} = settings();\nconsole.log(displayColor, keyboardLayout); // red querty\n```\n\n## ES6 展开操作符\n\n```js\n// ES5\nMath.max.apply(Math, [2,100,1,6,43]) // 100\n\n// ES6\nMath.max(...[2,100,1,6,43]) // 100\n```","slug":"js-notes","published":1,"updated":"2018-01-11T01:42:36.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1u9000y7hsl7yjr58js","content":"<p>记录js的知识点、跳坑指南。</p>\n<h2 id=\"声明提升（Hosing）\"><a href=\"#声明提升（Hosing）\" class=\"headerlink\" title=\"声明提升（Hosing）\"></a>声明提升（Hosing）</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">1</span></span><br><span class=\"line\"><span class=\"comment\">Uncaught TypeError: foo is not a function</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实际执行时的代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo();</span><br><span class=\"line\">foo = <span class=\"number\">0</span>; <span class=\"comment\">// 初始化赋值不提升</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 出错，此时 foo 是 0</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"闭包陷阱\"><a href=\"#闭包陷阱\" class=\"headerlink\" title=\"闭包陷阱\"></a>闭包陷阱</h2><p>典型案例，循环绑定事件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 匿名函数才可以传参</span></span><br><span class=\"line\">    onClickButton(i)</span><br><span class=\"line\">  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<p>想要达到预期效果，改成如下即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 返回一个函数</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, onClickButton(i), <span class=\"literal\">false</span>) <span class=\"comment\">// 返回了函数，所以不需要匿名函数包裹了</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">0 clicked</span></span><br><span class=\"line\"><span class=\"comment\">1 clicked</span></span><br><span class=\"line\"><span class=\"comment\">2 clicked</span></span><br><span class=\"line\"><span class=\"comment\">3 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-解构\"><a href=\"#ES6-解构\" class=\"headerlink\" title=\"ES6 解构\"></a>ES6 解构</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取元素</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, ,third] = array;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(first, third); <span class=\"comment\">// 1 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 值交换</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">[a, b] = [b, a];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b); <span class=\"comment\">// 2 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回解构简写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">margin</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> left = <span class=\"number\">1</span>, right = <span class=\"number\">2</span>, top = <span class=\"number\">3</span>, bottom = <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; left, right, top, bottom &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; left, bottom &#125; = margin();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(left, bottom); <span class=\"comment\">// 1 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数匹配</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">'111'</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">'222'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123; firstName, lastName &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;firstName&#125;</span> <span class=\"subst\">$&#123;lastName&#125;</span>`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getFullName(user)); <span class=\"comment\">// 111 222</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 深度匹配</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">settings</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: <span class=\"string\">'red'</span> &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: <span class=\"string\">'querty'</span>&#125; &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: displayColor &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: keyboardLayout &#125;&#125; = settings();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(displayColor, keyboardLayout); <span class=\"comment\">// red querty</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-展开操作符\"><a href=\"#ES6-展开操作符\" class=\"headerlink\" title=\"ES6 展开操作符\"></a>ES6 展开操作符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max.apply(<span class=\"built_in\">Math</span>, [<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max(...[<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>记录js的知识点、跳坑指南。</p>\n<h2 id=\"声明提升（Hosing）\"><a href=\"#声明提升（Hosing）\" class=\"headerlink\" title=\"声明提升（Hosing）\"></a>声明提升（Hosing）</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">1</span></span><br><span class=\"line\"><span class=\"comment\">Uncaught TypeError: foo is not a function</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实际执行时的代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo();</span><br><span class=\"line\">foo = <span class=\"number\">0</span>; <span class=\"comment\">// 初始化赋值不提升</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 出错，此时 foo 是 0</span></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"闭包陷阱\"><a href=\"#闭包陷阱\" class=\"headerlink\" title=\"闭包陷阱\"></a>闭包陷阱</h2><p>典型案例，循环绑定事件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 匿名函数才可以传参</span></span><br><span class=\"line\">    onClickButton(i)</span><br><span class=\"line\">  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<p>想要达到预期效果，改成如下即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 返回一个函数</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, onClickButton(i), <span class=\"literal\">false</span>) <span class=\"comment\">// 返回了函数，所以不需要匿名函数包裹了</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">0 clicked</span></span><br><span class=\"line\"><span class=\"comment\">1 clicked</span></span><br><span class=\"line\"><span class=\"comment\">2 clicked</span></span><br><span class=\"line\"><span class=\"comment\">3 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-解构\"><a href=\"#ES6-解构\" class=\"headerlink\" title=\"ES6 解构\"></a>ES6 解构</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取元素</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, ,third] = array;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(first, third); <span class=\"comment\">// 1 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 值交换</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">[a, b] = [b, a];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b); <span class=\"comment\">// 2 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回解构简写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">margin</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> left = <span class=\"number\">1</span>, right = <span class=\"number\">2</span>, top = <span class=\"number\">3</span>, bottom = <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; left, right, top, bottom &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; left, bottom &#125; = margin();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(left, bottom); <span class=\"comment\">// 1 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数匹配</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">'111'</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">'222'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123; firstName, lastName &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;firstName&#125;</span> <span class=\"subst\">$&#123;lastName&#125;</span>`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getFullName(user)); <span class=\"comment\">// 111 222</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 深度匹配</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">settings</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: <span class=\"string\">'red'</span> &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: <span class=\"string\">'querty'</span>&#125; &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: displayColor &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: keyboardLayout &#125;&#125; = settings();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(displayColor, keyboardLayout); <span class=\"comment\">// red querty</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-展开操作符\"><a href=\"#ES6-展开操作符\" class=\"headerlink\" title=\"ES6 展开操作符\"></a>ES6 展开操作符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max.apply(<span class=\"built_in\">Math</span>, [<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max(...[<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>"},{"title":"重拾 Docker","date":"2018-01-05T07:26:24.000Z","_content":"> Nice to meet U, I'm Docker\n\nDocker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。\n\n一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。\n<!-- more -->\n\n## 一、安装\n\n当前，docker分商业版和社区版，个人当然是安装社区版：[docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)\n> 不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具\n\n### 镜像加速\n\n\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 `Preferences - Daemon - Registry mirrors` 下增加DaoCloud的免费镜像地址 `http://ebccc999.m.daocloud.io`，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启`Apply & Restart`。\n\n安装完，命令行输入`docker info` 查看详细信息。\n\n## 二、试一试\n\n起一个nginx的容器试试 `docker container run --publish 80:80 nginx` ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。\n\n```bash\n$ docker container run --publish 80:80 nginx\nUnable to find image 'nginx:latest' locally\nlatest: Pulling from library/nginx\ne7bb522d92ff: Pull complete\n6edc05228666: Pull complete\ncd866a17e81f: Pull complete\nDigest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e\nStatus: Downloaded newer image for nginx:latest\n```\n\n下载完成后就可以看到 [http://localhost](http://localhost) Nginx 启动成功的页面。\n\n如果是后台运行的话，加上 `--detach` 参数：`docker container run --publish 80:80 --detach nginx`，会返回一个容器ID，比如：_0077235b8a9d*************************************_\n\n### 列出运行中的容器\n\n`docker container ls`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   About a minute ago   Up About a minute   0.0.0.0:80->80/tcp   inspiring_saha\n```\n\n### 停止容器\n\n`docker container stop 0077235b8a9d`\n\n### 列出所有容器，包括已经停止的\n\n`docker container ls -a`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   4 minutes ago       Up 4 minutes               0.0.0.0:80->80/tcp   inspiring_saha\nc4a05b8e8200        nginx               \"nginx -g 'daemon ...\"   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce\n```\n\n每个容器的名字 _NAMES_ 是唯一的，可以指定 `docker container run --publish 80:80 --detach --name nginx4node nginx` ，不指定就随机分配一个。\n\n### 重启已停止的容器\n\n`docker container start 0077235b8a9d`\n\n### 查看容器日志\n\n`docker container logs nginx4node`\n\n\n### 删除一个容器\n\n`docker container rm 0077235b8a9d`\n\n## 参数自定义\n\n`docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node`\n\n+ `8080:80`，前面是宿主机端口，后面是容器的端口\n+ `nginx:*.*`，Nginx指定版本号，如果不指定，就是取最新版`nginx:latest`\n\n## 老朋友 Katematic\n\n有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。\n\n![katematic](/public/katematic.png)\n","source":"_posts/meet-docker-again.md","raw":"---\ntitle: 重拾 Docker\ndate: 2018-01-05 15:26:24\ntags:\n  - docker\n  - nodejs\ncategories:\n  - nodejs\n---\n> Nice to meet U, I'm Docker\n\nDocker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。\n\n一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。\n<!-- more -->\n\n## 一、安装\n\n当前，docker分商业版和社区版，个人当然是安装社区版：[docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)\n> 不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具\n\n### 镜像加速\n\n\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 `Preferences - Daemon - Registry mirrors` 下增加DaoCloud的免费镜像地址 `http://ebccc999.m.daocloud.io`，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启`Apply & Restart`。\n\n安装完，命令行输入`docker info` 查看详细信息。\n\n## 二、试一试\n\n起一个nginx的容器试试 `docker container run --publish 80:80 nginx` ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。\n\n```bash\n$ docker container run --publish 80:80 nginx\nUnable to find image 'nginx:latest' locally\nlatest: Pulling from library/nginx\ne7bb522d92ff: Pull complete\n6edc05228666: Pull complete\ncd866a17e81f: Pull complete\nDigest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e\nStatus: Downloaded newer image for nginx:latest\n```\n\n下载完成后就可以看到 [http://localhost](http://localhost) Nginx 启动成功的页面。\n\n如果是后台运行的话，加上 `--detach` 参数：`docker container run --publish 80:80 --detach nginx`，会返回一个容器ID，比如：_0077235b8a9d*************************************_\n\n### 列出运行中的容器\n\n`docker container ls`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   About a minute ago   Up About a minute   0.0.0.0:80->80/tcp   inspiring_saha\n```\n\n### 停止容器\n\n`docker container stop 0077235b8a9d`\n\n### 列出所有容器，包括已经停止的\n\n`docker container ls -a`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   4 minutes ago       Up 4 minutes               0.0.0.0:80->80/tcp   inspiring_saha\nc4a05b8e8200        nginx               \"nginx -g 'daemon ...\"   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce\n```\n\n每个容器的名字 _NAMES_ 是唯一的，可以指定 `docker container run --publish 80:80 --detach --name nginx4node nginx` ，不指定就随机分配一个。\n\n### 重启已停止的容器\n\n`docker container start 0077235b8a9d`\n\n### 查看容器日志\n\n`docker container logs nginx4node`\n\n\n### 删除一个容器\n\n`docker container rm 0077235b8a9d`\n\n## 参数自定义\n\n`docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node`\n\n+ `8080:80`，前面是宿主机端口，后面是容器的端口\n+ `nginx:*.*`，Nginx指定版本号，如果不指定，就是取最新版`nginx:latest`\n\n## 老朋友 Katematic\n\n有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。\n\n![katematic](/public/katematic.png)\n","slug":"meet-docker-again","published":1,"updated":"2018-01-08T01:28:58.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1ua00107hslths81l7c","content":"<blockquote>\n<p>Nice to meet U, I’m Docker</p>\n</blockquote>\n<p>Docker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。</p>\n<p>一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。<br><a id=\"more\"></a></p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><p>当前，docker分商业版和社区版，个人当然是安装社区版：<a href=\"https://store.docker.com/editions/community/docker-ce-desktop-mac\" target=\"_blank\" rel=\"noopener\">docker-ce-desktop-mac</a></p>\n<blockquote>\n<p>不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具</p>\n</blockquote>\n<h3 id=\"镜像加速\"><a href=\"#镜像加速\" class=\"headerlink\" title=\"镜像加速\"></a>镜像加速</h3><p>\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 <code>Preferences - Daemon - Registry mirrors</code> 下增加DaoCloud的免费镜像地址 <code>http://ebccc999.m.daocloud.io</code>，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启<code>Apply &amp; Restart</code>。</p>\n<p>安装完，命令行输入<code>docker info</code> 查看详细信息。</p>\n<h2 id=\"二、试一试\"><a href=\"#二、试一试\" class=\"headerlink\" title=\"二、试一试\"></a>二、试一试</h2><p>起一个nginx的容器试试 <code>docker container run --publish 80:80 nginx</code> ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker container run --publish 80:80 nginx</span><br><span class=\"line\">Unable to find image <span class=\"string\">'nginx:latest'</span> locally</span><br><span class=\"line\">latest: Pulling from library/nginx</span><br><span class=\"line\">e7bb522d92ff: Pull complete</span><br><span class=\"line\">6edc05228666: Pull complete</span><br><span class=\"line\">cd866a17e81f: Pull complete</span><br><span class=\"line\">Digest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> nginx:latest</span><br></pre></td></tr></table></figure>\n<p>下载完成后就可以看到 <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">http://localhost</a> Nginx 启动成功的页面。</p>\n<p>如果是后台运行的话，加上 <code>--detach</code> 参数：<code>docker container run --publish 80:80 --detach nginx</code>，会返回一个容器ID，比如：<em>0077235b8a9d<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></em></p>\n<h3 id=\"列出运行中的容器\"><a href=\"#列出运行中的容器\" class=\"headerlink\" title=\"列出运行中的容器\"></a>列出运行中的容器</h3><p><code>docker container ls</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   About a minute ago   Up About a minute   0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br></pre></td></tr></table></figure>\n<h3 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h3><p><code>docker container stop 0077235b8a9d</code></p>\n<h3 id=\"列出所有容器，包括已经停止的\"><a href=\"#列出所有容器，包括已经停止的\" class=\"headerlink\" title=\"列出所有容器，包括已经停止的\"></a>列出所有容器，包括已经停止的</h3><p><code>docker container ls -a</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   4 minutes ago       Up 4 minutes               0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br><span class=\"line\">c4a05b8e8200        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce</span><br></pre></td></tr></table></figure>\n<p>每个容器的名字 <em>NAMES</em> 是唯一的，可以指定 <code>docker container run --publish 80:80 --detach --name nginx4node nginx</code> ，不指定就随机分配一个。</p>\n<h3 id=\"重启已停止的容器\"><a href=\"#重启已停止的容器\" class=\"headerlink\" title=\"重启已停止的容器\"></a>重启已停止的容器</h3><p><code>docker container start 0077235b8a9d</code></p>\n<h3 id=\"查看容器日志\"><a href=\"#查看容器日志\" class=\"headerlink\" title=\"查看容器日志\"></a>查看容器日志</h3><p><code>docker container logs nginx4node</code></p>\n<h3 id=\"删除一个容器\"><a href=\"#删除一个容器\" class=\"headerlink\" title=\"删除一个容器\"></a>删除一个容器</h3><p><code>docker container rm 0077235b8a9d</code></p>\n<h2 id=\"参数自定义\"><a href=\"#参数自定义\" class=\"headerlink\" title=\"参数自定义\"></a>参数自定义</h2><p><code>docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node</code></p>\n<ul>\n<li><code>8080:80</code>，前面是宿主机端口，后面是容器的端口</li>\n<li><code>nginx:*.*</code>，Nginx指定版本号，如果不指定，就是取最新版<code>nginx:latest</code></li>\n</ul>\n<h2 id=\"老朋友-Katematic\"><a href=\"#老朋友-Katematic\" class=\"headerlink\" title=\"老朋友 Katematic\"></a>老朋友 Katematic</h2><p>有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。</p>\n<p><img src=\"/public/katematic.png\" alt=\"katematic\"></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Nice to meet U, I’m Docker</p>\n</blockquote>\n<p>Docker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。</p>\n<p>一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。<br>","more":"</p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><p>当前，docker分商业版和社区版，个人当然是安装社区版：<a href=\"https://store.docker.com/editions/community/docker-ce-desktop-mac\" target=\"_blank\" rel=\"noopener\">docker-ce-desktop-mac</a></p>\n<blockquote>\n<p>不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具</p>\n</blockquote>\n<h3 id=\"镜像加速\"><a href=\"#镜像加速\" class=\"headerlink\" title=\"镜像加速\"></a>镜像加速</h3><p>\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 <code>Preferences - Daemon - Registry mirrors</code> 下增加DaoCloud的免费镜像地址 <code>http://ebccc999.m.daocloud.io</code>，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启<code>Apply &amp; Restart</code>。</p>\n<p>安装完，命令行输入<code>docker info</code> 查看详细信息。</p>\n<h2 id=\"二、试一试\"><a href=\"#二、试一试\" class=\"headerlink\" title=\"二、试一试\"></a>二、试一试</h2><p>起一个nginx的容器试试 <code>docker container run --publish 80:80 nginx</code> ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker container run --publish 80:80 nginx</span><br><span class=\"line\">Unable to find image <span class=\"string\">'nginx:latest'</span> locally</span><br><span class=\"line\">latest: Pulling from library/nginx</span><br><span class=\"line\">e7bb522d92ff: Pull complete</span><br><span class=\"line\">6edc05228666: Pull complete</span><br><span class=\"line\">cd866a17e81f: Pull complete</span><br><span class=\"line\">Digest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> nginx:latest</span><br></pre></td></tr></table></figure>\n<p>下载完成后就可以看到 <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">http://localhost</a> Nginx 启动成功的页面。</p>\n<p>如果是后台运行的话，加上 <code>--detach</code> 参数：<code>docker container run --publish 80:80 --detach nginx</code>，会返回一个容器ID，比如：<em>0077235b8a9d<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></em></p>\n<h3 id=\"列出运行中的容器\"><a href=\"#列出运行中的容器\" class=\"headerlink\" title=\"列出运行中的容器\"></a>列出运行中的容器</h3><p><code>docker container ls</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   About a minute ago   Up About a minute   0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br></pre></td></tr></table></figure>\n<h3 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h3><p><code>docker container stop 0077235b8a9d</code></p>\n<h3 id=\"列出所有容器，包括已经停止的\"><a href=\"#列出所有容器，包括已经停止的\" class=\"headerlink\" title=\"列出所有容器，包括已经停止的\"></a>列出所有容器，包括已经停止的</h3><p><code>docker container ls -a</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   4 minutes ago       Up 4 minutes               0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br><span class=\"line\">c4a05b8e8200        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce</span><br></pre></td></tr></table></figure>\n<p>每个容器的名字 <em>NAMES</em> 是唯一的，可以指定 <code>docker container run --publish 80:80 --detach --name nginx4node nginx</code> ，不指定就随机分配一个。</p>\n<h3 id=\"重启已停止的容器\"><a href=\"#重启已停止的容器\" class=\"headerlink\" title=\"重启已停止的容器\"></a>重启已停止的容器</h3><p><code>docker container start 0077235b8a9d</code></p>\n<h3 id=\"查看容器日志\"><a href=\"#查看容器日志\" class=\"headerlink\" title=\"查看容器日志\"></a>查看容器日志</h3><p><code>docker container logs nginx4node</code></p>\n<h3 id=\"删除一个容器\"><a href=\"#删除一个容器\" class=\"headerlink\" title=\"删除一个容器\"></a>删除一个容器</h3><p><code>docker container rm 0077235b8a9d</code></p>\n<h2 id=\"参数自定义\"><a href=\"#参数自定义\" class=\"headerlink\" title=\"参数自定义\"></a>参数自定义</h2><p><code>docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node</code></p>\n<ul>\n<li><code>8080:80</code>，前面是宿主机端口，后面是容器的端口</li>\n<li><code>nginx:*.*</code>，Nginx指定版本号，如果不指定，就是取最新版<code>nginx:latest</code></li>\n</ul>\n<h2 id=\"老朋友-Katematic\"><a href=\"#老朋友-Katematic\" class=\"headerlink\" title=\"老朋友 Katematic\"></a>老朋友 Katematic</h2><p>有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。</p>\n<p><img src=\"/public/katematic.png\" alt=\"katematic\"></p>"},{"title":"ES5多行模板","date":"2018-08-03T02:40:54.000Z","_content":"\nES6开始有了模板，很方便。即使面对ES5环境，也可以用Babel转换做兼容。\n\n但是有时候一些老项目，没办法大改项目架构，只能手动支持ES5。\n\n废话少说，show me the code：\n\n```js\nvar template = (function () {/*\n  <div>\n    <input type=\"text\" name=\"username\" value=\"{{username}}\">\n  </div>\n*/}).toString().match(/[^]*\\/\\*([^]*)\\*\\/\\}$/)[1];\n\n// 结合模板引擎使用\nMustache.parse(template);\n$('body').append(Mustache.render(_template, {username: 'Jack'}));\n```","source":"_posts/multi-line-template-with-es5.md","raw":"---\ntitle: ES5多行模板\ndate: 2018-08-03 10:40:54\ntags:\n  - js\ncategories:\n  - 前端\n---\n\nES6开始有了模板，很方便。即使面对ES5环境，也可以用Babel转换做兼容。\n\n但是有时候一些老项目，没办法大改项目架构，只能手动支持ES5。\n\n废话少说，show me the code：\n\n```js\nvar template = (function () {/*\n  <div>\n    <input type=\"text\" name=\"username\" value=\"{{username}}\">\n  </div>\n*/}).toString().match(/[^]*\\/\\*([^]*)\\*\\/\\}$/)[1];\n\n// 结合模板引擎使用\nMustache.parse(template);\n$('body').append(Mustache.render(_template, {username: 'Jack'}));\n```","slug":"multi-line-template-with-es5","published":1,"updated":"2018-08-03T02:48:40.612Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1ub00137hsld75ibtft","content":"<p>ES6开始有了模板，很方便。即使面对ES5环境，也可以用Babel转换做兼容。</p>\n<p>但是有时候一些老项目，没办法大改项目架构，只能手动支持ES5。</p>\n<p>废话少说，show me the code：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> template = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;input type=\"text\" name=\"username\" value=\"&#123;&#123;username&#125;&#125;\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>&#125;).toString().match(<span class=\"regexp\">/[^]*\\/\\*([^]*)\\*\\/\\&#125;$/</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结合模板引擎使用</span></span><br><span class=\"line\">Mustache.parse(template);</span><br><span class=\"line\">$(<span class=\"string\">'body'</span>).append(Mustache.render(_template, &#123;<span class=\"attr\">username</span>: <span class=\"string\">'Jack'</span>&#125;));</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>ES6开始有了模板，很方便。即使面对ES5环境，也可以用Babel转换做兼容。</p>\n<p>但是有时候一些老项目，没办法大改项目架构，只能手动支持ES5。</p>\n<p>废话少说，show me the code：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> template = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;input type=\"text\" name=\"username\" value=\"&#123;&#123;username&#125;&#125;\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span>&#125;).toString().match(<span class=\"regexp\">/[^]*\\/\\*([^]*)\\*\\/\\&#125;$/</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 结合模板引擎使用</span></span><br><span class=\"line\">Mustache.parse(template);</span><br><span class=\"line\">$(<span class=\"string\">'body'</span>).append(Mustache.render(_template, &#123;<span class=\"attr\">username</span>: <span class=\"string\">'Jack'</span>&#125;));</span><br></pre></td></tr></table></figure>"},{"title":"开发WordPress插件的时候，用date函数无法获取所在时区的时间","date":"2014-07-31T06:59:11.000Z","_content":"在普通PHP开发中，假定在php.ini中已经设定了timezone为`Asia/Shanghai`之后，用`date('H:i:s')`即可获得当前时间。\n但是刚刚在研究开发WordPress插件的时候，发现用`date('H:i:s')`获取的时间是0时区，php.ini中的设置没有起作用，<!-- more -->WordPress后台设置的时区也不在此起作用。\nGoogle了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。\n\n## 找到答案\n\n吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数`current_time(\"H:i:s\")`才能获取到本时区时间，用`date('H:i:s')`只能得到0时区的时间。\n文档在这里：[Function Reference:current_time](http://codex.wordpress.org/Function_Reference/current_time)\n","source":"_posts/use-current_time-instead-of-time-in-wordpress-plugin-development.md","raw":"---\ntitle: \"开发WordPress插件的时候，用date函数无法获取所在时区的时间\"\ndate: 2014-07-31 14:59:11\ntags:\n  - php\n  - wordpress\ncategories:\n  - 后端\n---\n在普通PHP开发中，假定在php.ini中已经设定了timezone为`Asia/Shanghai`之后，用`date('H:i:s')`即可获得当前时间。\n但是刚刚在研究开发WordPress插件的时候，发现用`date('H:i:s')`获取的时间是0时区，php.ini中的设置没有起作用，<!-- more -->WordPress后台设置的时区也不在此起作用。\nGoogle了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。\n\n## 找到答案\n\n吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数`current_time(\"H:i:s\")`才能获取到本时区时间，用`date('H:i:s')`只能得到0时区的时间。\n文档在这里：[Function Reference:current_time](http://codex.wordpress.org/Function_Reference/current_time)\n","slug":"use-current_time-instead-of-time-in-wordpress-plugin-development","published":1,"updated":"2018-01-10T02:44:20.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1uc00187hslg998aehp","content":"<p>在普通PHP开发中，假定在php.ini中已经设定了timezone为<code>Asia/Shanghai</code>之后，用<code>date(&#39;H:i:s&#39;)</code>即可获得当前时间。<br>但是刚刚在研究开发WordPress插件的时候，发现用<code>date(&#39;H:i:s&#39;)</code>获取的时间是0时区，php.ini中的设置没有起作用，<a id=\"more\"></a>WordPress后台设置的时区也不在此起作用。<br>Google了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。</p>\n<h2 id=\"找到答案\"><a href=\"#找到答案\" class=\"headerlink\" title=\"找到答案\"></a>找到答案</h2><p>吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数<code>current_time(&quot;H:i:s&quot;)</code>才能获取到本时区时间，用<code>date(&#39;H:i:s&#39;)</code>只能得到0时区的时间。<br>文档在这里：<a href=\"http://codex.wordpress.org/Function_Reference/current_time\" target=\"_blank\" rel=\"noopener\">Function Reference:current_time</a></p>\n","site":{"data":{}},"excerpt":"<p>在普通PHP开发中，假定在php.ini中已经设定了timezone为<code>Asia/Shanghai</code>之后，用<code>date(&#39;H:i:s&#39;)</code>即可获得当前时间。<br>但是刚刚在研究开发WordPress插件的时候，发现用<code>date(&#39;H:i:s&#39;)</code>获取的时间是0时区，php.ini中的设置没有起作用，","more":"WordPress后台设置的时区也不在此起作用。<br>Google了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。</p>\n<h2 id=\"找到答案\"><a href=\"#找到答案\" class=\"headerlink\" title=\"找到答案\"></a>找到答案</h2><p>吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数<code>current_time(&quot;H:i:s&quot;)</code>才能获取到本时区时间，用<code>date(&#39;H:i:s&#39;)</code>只能得到0时区的时间。<br>文档在这里：<a href=\"http://codex.wordpress.org/Function_Reference/current_time\" target=\"_blank\" rel=\"noopener\">Function Reference:current_time</a></p>"},{"title":"VPS极简初始化配置","date":"2014-12-11T08:55:45.000Z","_content":"最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。\n<!-- more -->\n\n## 换OS为Ubuntu\n\n对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。\n\n## 更改root密码\n\n默认密码太难记，换成自己的比较方便，然后就SSH走起\n\n```bash\nsudo passwd root\n```\n\n## 更新软件源\n\n不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是\n\n```bash\nsudo apt-get update\n```\n\n## 安装Shadowsocks\n\n[Shadowsocks on Github](https://github.com/clowwindy/shadowsocks)\nAcross the Great Firewall, we can reach every corner in the world.\n祝病魔早日战胜方校长。\n\n## 安装LAMP，开启必备组件\n\n某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：\n\n```bash\nsudo apt-get install lamp-server^\n```\n\n以上默认不开mod_rewrite，要自己开启：\n\n```bash\nsudo a2enmod rewrite\n```\n\n另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：\n\n```bash\nsudo apt-get install php5-mcrypt\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 设置apache虚拟主机\n\n1. 复制一个站点配置文件\n\n    ```bash\n    sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf\n    ```\n\n1. 编辑新站点配置文件\n\n```bash\nsudo vi /etc/apache2/sites-available/example.com.conf\n```\n\n修改配置信息：\n\n```bash\n<VirtualHost *:80>\n    ServerAdmin webmaster@localhost\n    ServerName example.com\n    ServerAlias www.example.com\n    DocumentRoot /var/www/html/example\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```\n\n启用新站点：\n\n```bash\nsudo a2ensite example.com.conf\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 屏蔽根目录\n\n有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：\n\n```bash\nsudo vi /etc/apache2/sites-available/000-default.conf\n```\n\n添加一行：\n\n```bash\nServerName 服务器的IP地址\n```\n\n配置完毕，够用就行。\n","source":"_posts/vps-initial-setup.md","raw":"---\ntitle: VPS极简初始化配置\ndate: 2014-12-11 16:55:45\ntags:\n  - linux\ncategories:\n  - 其他\n---\n最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。\n<!-- more -->\n\n## 换OS为Ubuntu\n\n对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。\n\n## 更改root密码\n\n默认密码太难记，换成自己的比较方便，然后就SSH走起\n\n```bash\nsudo passwd root\n```\n\n## 更新软件源\n\n不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是\n\n```bash\nsudo apt-get update\n```\n\n## 安装Shadowsocks\n\n[Shadowsocks on Github](https://github.com/clowwindy/shadowsocks)\nAcross the Great Firewall, we can reach every corner in the world.\n祝病魔早日战胜方校长。\n\n## 安装LAMP，开启必备组件\n\n某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：\n\n```bash\nsudo apt-get install lamp-server^\n```\n\n以上默认不开mod_rewrite，要自己开启：\n\n```bash\nsudo a2enmod rewrite\n```\n\n另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：\n\n```bash\nsudo apt-get install php5-mcrypt\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 设置apache虚拟主机\n\n1. 复制一个站点配置文件\n\n    ```bash\n    sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf\n    ```\n\n1. 编辑新站点配置文件\n\n```bash\nsudo vi /etc/apache2/sites-available/example.com.conf\n```\n\n修改配置信息：\n\n```bash\n<VirtualHost *:80>\n    ServerAdmin webmaster@localhost\n    ServerName example.com\n    ServerAlias www.example.com\n    DocumentRoot /var/www/html/example\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```\n\n启用新站点：\n\n```bash\nsudo a2ensite example.com.conf\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 屏蔽根目录\n\n有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：\n\n```bash\nsudo vi /etc/apache2/sites-available/000-default.conf\n```\n\n添加一行：\n\n```bash\nServerName 服务器的IP地址\n```\n\n配置完毕，够用就行。\n","slug":"vps-initial-setup","published":1,"updated":"2018-01-10T02:46:03.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjm7ot1ud001b7hsl2i5qpw3n","content":"<p>最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。<br><a id=\"more\"></a></p>\n<h2 id=\"换OS为Ubuntu\"><a href=\"#换OS为Ubuntu\" class=\"headerlink\" title=\"换OS为Ubuntu\"></a>换OS为Ubuntu</h2><p>对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。</p>\n<h2 id=\"更改root密码\"><a href=\"#更改root密码\" class=\"headerlink\" title=\"更改root密码\"></a>更改root密码</h2><p>默认密码太难记，换成自己的比较方便，然后就SSH走起</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新软件源\"><a href=\"#更新软件源\" class=\"headerlink\" title=\"更新软件源\"></a>更新软件源</h2><p>不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><p><a href=\"https://github.com/clowwindy/shadowsocks\" target=\"_blank\" rel=\"noopener\">Shadowsocks on Github</a><br>Across the Great Firewall, we can reach every corner in the world.<br>祝病魔早日战胜方校长。</p>\n<h2 id=\"安装LAMP，开启必备组件\"><a href=\"#安装LAMP，开启必备组件\" class=\"headerlink\" title=\"安装LAMP，开启必备组件\"></a>安装LAMP，开启必备组件</h2><p>某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lamp-server^</span><br></pre></td></tr></table></figure>\n<p>以上默认不开mod_rewrite，要自己开启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod rewrite</span><br></pre></td></tr></table></figure>\n<p>另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php5-mcrypt</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置apache虚拟主机\"><a href=\"#设置apache虚拟主机\" class=\"headerlink\" title=\"设置apache虚拟主机\"></a>设置apache虚拟主机</h2><ol>\n<li><p>复制一个站点配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑新站点配置文件</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n<p>修改配置信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">    ServerAdmin webmaster@localhost</span><br><span class=\"line\">    ServerName example.com</span><br><span class=\"line\">    ServerAlias www.example.com</span><br><span class=\"line\">    DocumentRoot /var/www/html/example</span><br><span class=\"line\">    ErrorLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/error.log</span><br><span class=\"line\">    CustomLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n<p>启用新站点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2ensite example.com.conf</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"屏蔽根目录\"><a href=\"#屏蔽根目录\" class=\"headerlink\" title=\"屏蔽根目录\"></a>屏蔽根目录</h2><p>有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/000-default.conf</span><br></pre></td></tr></table></figure>\n<p>添加一行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ServerName 服务器的IP地址</span><br></pre></td></tr></table></figure>\n<p>配置完毕，够用就行。</p>\n","site":{"data":{}},"excerpt":"<p>最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。<br>","more":"</p>\n<h2 id=\"换OS为Ubuntu\"><a href=\"#换OS为Ubuntu\" class=\"headerlink\" title=\"换OS为Ubuntu\"></a>换OS为Ubuntu</h2><p>对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。</p>\n<h2 id=\"更改root密码\"><a href=\"#更改root密码\" class=\"headerlink\" title=\"更改root密码\"></a>更改root密码</h2><p>默认密码太难记，换成自己的比较方便，然后就SSH走起</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新软件源\"><a href=\"#更新软件源\" class=\"headerlink\" title=\"更新软件源\"></a>更新软件源</h2><p>不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><p><a href=\"https://github.com/clowwindy/shadowsocks\" target=\"_blank\" rel=\"noopener\">Shadowsocks on Github</a><br>Across the Great Firewall, we can reach every corner in the world.<br>祝病魔早日战胜方校长。</p>\n<h2 id=\"安装LAMP，开启必备组件\"><a href=\"#安装LAMP，开启必备组件\" class=\"headerlink\" title=\"安装LAMP，开启必备组件\"></a>安装LAMP，开启必备组件</h2><p>某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lamp-server^</span><br></pre></td></tr></table></figure>\n<p>以上默认不开mod_rewrite，要自己开启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod rewrite</span><br></pre></td></tr></table></figure>\n<p>另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php5-mcrypt</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置apache虚拟主机\"><a href=\"#设置apache虚拟主机\" class=\"headerlink\" title=\"设置apache虚拟主机\"></a>设置apache虚拟主机</h2><ol>\n<li><p>复制一个站点配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑新站点配置文件</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n<p>修改配置信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">    ServerAdmin webmaster@localhost</span><br><span class=\"line\">    ServerName example.com</span><br><span class=\"line\">    ServerAlias www.example.com</span><br><span class=\"line\">    DocumentRoot /var/www/html/example</span><br><span class=\"line\">    ErrorLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/error.log</span><br><span class=\"line\">    CustomLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n<p>启用新站点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2ensite example.com.conf</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"屏蔽根目录\"><a href=\"#屏蔽根目录\" class=\"headerlink\" title=\"屏蔽根目录\"></a>屏蔽根目录</h2><p>有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/000-default.conf</span><br></pre></td></tr></table></figure>\n<p>添加一行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ServerName 服务器的IP地址</span><br></pre></td></tr></table></figure>\n<p>配置完毕，够用就行。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjm7ot1tu00057hsle6ccbglk","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1tz000d7hsl648w5ct8"},{"post_id":"cjm7ot1tm00007hslp5eioil0","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1u2000h7hsl3iby8h9g"},{"post_id":"cjm7ot1tv00067hslsckoej5m","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1u4000k7hsl84yh4t68"},{"post_id":"cjm7ot1tq00017hslslrkamcp","category_id":"cjm7ot1tw00077hslq52xnud9","_id":"cjm7ot1u6000o7hsljwmj9l0u"},{"post_id":"cjm7ot1tz000c7hslk4dxs24n","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1u7000r7hslyu45hnb7"},{"post_id":"cjm7ot1u1000g7hsl1x2yf496","category_id":"cjm7ot1tw00077hslq52xnud9","_id":"cjm7ot1u8000u7hslijshfsct"},{"post_id":"cjm7ot1tt00047hslqinh80la","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1u9000w7hsl0n1tpkd9"},{"post_id":"cjm7ot1u3000j7hslwekaia6s","category_id":"cjm7ot1tw00077hslq52xnud9","_id":"cjm7ot1ua000z7hslg3i0kaah"},{"post_id":"cjm7ot1u5000n7hsl4szxsel1","category_id":"cjm7ot1tw00077hslq52xnud9","_id":"cjm7ot1ua00117hslh7rk9rw7"},{"post_id":"cjm7ot1tx000a7hsltfzteick","category_id":"cjm7ot1u4000l7hslzqqrdkyv","_id":"cjm7ot1ub00147hsl52dpcxpt"},{"post_id":"cjm7ot1u6000q7hsl4edd5ume","category_id":"cjm7ot1tw00077hslq52xnud9","_id":"cjm7ot1ud00197hslaqfz1xnm"},{"post_id":"cjm7ot1u7000t7hslxn2p8t4g","category_id":"cjm7ot1tw00077hslq52xnud9","_id":"cjm7ot1ue001c7hsluzzizorz"},{"post_id":"cjm7ot1u8000v7hsl4fzxu3wr","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1ue001f7hsltaqinaaj"},{"post_id":"cjm7ot1u9000y7hsl7yjr58js","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1uf001h7hsl754jh6rb"},{"post_id":"cjm7ot1ub00137hsld75ibtft","category_id":"cjm7ot1tr00027hsl6tumjmt9","_id":"cjm7ot1uf001k7hsl4912g0n6"},{"post_id":"cjm7ot1uc00187hslg998aehp","category_id":"cjm7ot1u4000l7hslzqqrdkyv","_id":"cjm7ot1uf001m7hslsx7pjiua"},{"post_id":"cjm7ot1ud001b7hsl2i5qpw3n","category_id":"cjm7ot1tw00077hslq52xnud9","_id":"cjm7ot1uf001o7hslf7j0w2uy"},{"post_id":"cjm7ot1ua00107hslths81l7c","category_id":"cjm7ot1uc00167hsltsx53e9y","_id":"cjm7ot1uf001q7hslbnefdxra"}],"PostTag":[{"post_id":"cjm7ot1tu00057hsle6ccbglk","tag_id":"cjm7ot1tt00037hslelqqlhw5","_id":"cjm7ot1tx00097hsl48h51ff4"},{"post_id":"cjm7ot1tm00007hslp5eioil0","tag_id":"cjm7ot1tt00037hslelqqlhw5","_id":"cjm7ot1ty000b7hsldin8ggot"},{"post_id":"cjm7ot1tq00017hslslrkamcp","tag_id":"cjm7ot1tw00087hsl5qt7b9qo","_id":"cjm7ot1u2000i7hslov6ge10c"},{"post_id":"cjm7ot1tt00047hslqinh80la","tag_id":"cjm7ot1tt00037hslelqqlhw5","_id":"cjm7ot1u6000p7hslxu3mna2g"},{"post_id":"cjm7ot1u9000y7hsl7yjr58js","tag_id":"cjm7ot1tt00037hslelqqlhw5","_id":"cjm7ot1ub00127hsl1c4svo3x"},{"post_id":"cjm7ot1tv00067hslsckoej5m","tag_id":"cjm7ot1u5000m7hslibv1trjv","_id":"cjm7ot1uc00177hsl88s48p1q"},{"post_id":"cjm7ot1tv00067hslsckoej5m","tag_id":"cjm7ot1u7000s7hsl7mn3k6en","_id":"cjm7ot1ud001a7hsl094te72l"},{"post_id":"cjm7ot1tv00067hslsckoej5m","tag_id":"cjm7ot1u9000x7hsl8a4r7u6q","_id":"cjm7ot1ue001e7hslgs9ycoap"},{"post_id":"cjm7ot1ub00137hsld75ibtft","tag_id":"cjm7ot1tt00037hslelqqlhw5","_id":"cjm7ot1ue001g7hslcy86id80"},{"post_id":"cjm7ot1tx000a7hsltfzteick","tag_id":"cjm7ot1ub00157hsl318ju1l0","_id":"cjm7ot1uf001j7hslp3nk54jt"},{"post_id":"cjm7ot1tz000c7hslk4dxs24n","tag_id":"cjm7ot1ue001d7hslurhjibq0","_id":"cjm7ot1uf001l7hsl4wcg9j29"},{"post_id":"cjm7ot1u1000g7hsl1x2yf496","tag_id":"cjm7ot1uf001i7hslg0styyse","_id":"cjm7ot1uf001p7hsl21l8bpeq"},{"post_id":"cjm7ot1u3000j7hslwekaia6s","tag_id":"cjm7ot1uf001n7hslen522ixf","_id":"cjm7ot1ug001s7hsldq164dxv"},{"post_id":"cjm7ot1u5000n7hsl4szxsel1","tag_id":"cjm7ot1ug001r7hslhj5m88du","_id":"cjm7ot1ug001u7hslfrvutqcy"},{"post_id":"cjm7ot1u6000q7hsl4edd5ume","tag_id":"cjm7ot1ug001t7hsljvimv3nv","_id":"cjm7ot1uh001x7hslqiszc6j0"},{"post_id":"cjm7ot1u6000q7hsl4edd5ume","tag_id":"cjm7ot1ug001v7hslqkie4o7u","_id":"cjm7ot1uh001y7hsl0wjqci18"},{"post_id":"cjm7ot1u7000t7hslxn2p8t4g","tag_id":"cjm7ot1ug001t7hsljvimv3nv","_id":"cjm7ot1uh00207hsl29067j8w"},{"post_id":"cjm7ot1u8000v7hsl4fzxu3wr","tag_id":"cjm7ot1uh001z7hsls65optcg","_id":"cjm7ot1uh00227hslqyxg69el"},{"post_id":"cjm7ot1u8000v7hsl4fzxu3wr","tag_id":"cjm7ot1tt00037hslelqqlhw5","_id":"cjm7ot1uh00237hsl1xl4fnhq"},{"post_id":"cjm7ot1ua00107hslths81l7c","tag_id":"cjm7ot1uh00217hslndoyb573","_id":"cjm7ot1ui00267hsl1zcvj6ii"},{"post_id":"cjm7ot1ua00107hslths81l7c","tag_id":"cjm7ot1ug001v7hslqkie4o7u","_id":"cjm7ot1ui00277hsl1b4n3a9z"},{"post_id":"cjm7ot1uc00187hslg998aehp","tag_id":"cjm7ot1ui00257hslvevoy7uo","_id":"cjm7ot1uj002a7hslydr4imr3"},{"post_id":"cjm7ot1uc00187hslg998aehp","tag_id":"cjm7ot1ui00287hslc8hdp7c4","_id":"cjm7ot1uj002b7hsl3kifil8r"},{"post_id":"cjm7ot1ud001b7hsl2i5qpw3n","tag_id":"cjm7ot1uf001i7hslg0styyse","_id":"cjm7ot1uj002c7hsla3hjxv2y"}],"Tag":[{"name":"js","_id":"cjm7ot1tt00037hslelqqlhw5"},{"name":"sublime","_id":"cjm7ot1tw00087hsl5qt7b9qo"},{"name":"node","_id":"cjm7ot1u5000m7hslibv1trjv"},{"name":"nvm","_id":"cjm7ot1u7000s7hsl7mn3k6en"},{"name":"homebrew","_id":"cjm7ot1u9000x7hsl8a4r7u6q"},{"name":"PHP","_id":"cjm7ot1ub00157hsl318ju1l0"},{"name":"css","_id":"cjm7ot1ue001d7hslurhjibq0"},{"name":"linux","_id":"cjm7ot1uf001i7hslg0styyse"},{"name":"git","_id":"cjm7ot1uf001n7hslen522ixf"},{"name":"chrome","_id":"cjm7ot1ug001r7hslhj5m88du"},{"name":"hexo","_id":"cjm7ot1ug001t7hsljvimv3nv"},{"name":"nodejs","_id":"cjm7ot1ug001v7hslqkie4o7u"},{"name":"jQuery Mobile","_id":"cjm7ot1uh001z7hsls65optcg"},{"name":"docker","_id":"cjm7ot1uh00217hslndoyb573"},{"name":"php","_id":"cjm7ot1ui00257hslvevoy7uo"},{"name":"wordpress","_id":"cjm7ot1ui00287hslc8hdp7c4"}]}}