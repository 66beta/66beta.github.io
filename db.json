{"Asset":[{"_id":"source\\CNAME","path":"CNAME","modified":false},{"_id":"source\\favicon.png","path":"favicon.png","modified":false},{"_id":"source\\public\\tampermonkey.png","path":"public/tampermonkey.png","modified":false},{"_id":"themes\\landscape\\source\\js\\script.js","path":"js/script.js","modified":false},{"_id":"themes\\landscape\\source\\css\\style.styl","path":"css/style.styl","modified":false},{"_id":"themes\\landscape\\source\\css\\fonts\\FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":false},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":false},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":false},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":false},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":false},{"_id":"themes\\landscape\\source\\css\\images\\banner.jpg","path":"css/images/banner.jpg","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\blank.gif","path":"fancybox/blank.gif","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":false},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":false}],"Cache":[{"_id":"scaffolds\\page.md","mtime":1406185291000},{"_id":"scaffolds\\photo.md","mtime":1406185291000},{"_id":"scaffolds\\post.md","mtime":1406185291000},{"_id":"scaffolds\\draft.md","mtime":1406185291000},{"_id":"source\\CNAME","mtime":1406185291000},{"_id":"source\\favicon.png","mtime":1406185291000},{"_id":"source\\public\\tampermonkey.png","mtime":1406185291000},{"_id":"themes\\landscape\\Gruntfile.js","mtime":1406181142000},{"_id":"themes\\landscape\\LICENSE","mtime":1406181142000},{"_id":"themes\\landscape\\README.md","mtime":1406181142000},{"_id":"themes\\landscape\\_config.yml","mtime":1406181142000},{"_id":"themes\\landscape\\package.json","mtime":1406181142000},{"_id":"themes\\landscape\\scripts\\fancybox.js","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\archive.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\category.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\index.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\layout.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\page.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\post.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\tag.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_widget\\archive.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_widget\\category.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_widget\\nav_category.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_widget\\recent_posts.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_widget\\tag.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_widget\\tagcloud.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\after-footer.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\archive-post.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\archive.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\article.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\footer.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\google-analytics.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\head.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\header.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\mobile-nav.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\sidebar.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\post\\category.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\post\\date.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\post\\gallery.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\post\\nav.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\post\\tag.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\layout\\_partial\\post\\title.ejs","mtime":1406181142000},{"_id":"themes\\landscape\\source\\js\\script.js","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_extend.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_variables.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\style.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\archive.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\article.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\comment.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\footer.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\header.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\highlight.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\mobile.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\sidebar-aside.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\sidebar-bottom.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_partial\\sidebar.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_util\\grid.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\_util\\mixin.styl","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\fonts\\FontAwesome.otf","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.eot","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.svg","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.ttf","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\fonts\\fontawesome-webfont.woff","mtime":1406181142000},{"_id":"themes\\landscape\\source\\css\\images\\banner.jpg","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\blank.gif","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_loading.gif","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_loading@2x.gif","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_overlay.png","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_sprite.png","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\fancybox_sprite@2x.png","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\jquery.fancybox.css","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\jquery.fancybox.js","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\jquery.fancybox.pack.js","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\fancybox_buttons.png","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-buttons.css","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-buttons.js","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-media.js","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.css","mtime":1406181142000},{"_id":"themes\\landscape\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.js","mtime":1406181142000},{"_id":"source\\_posts\\ci-session-issue-with-xampp-on-osx.md","mtime":1406181142000},{"_id":"source\\_posts\\css-tips-and-tricks.md","mtime":1406181142000},{"_id":"source\\_posts\\enable-third-party-extensions-on-chrome.md","mtime":1406181142000},{"_id":"source\\_posts\\hello-world.md","mtime":1406181142000},{"_id":"source\\_posts\\how-to-setup-hexo.md","mtime":1406181142000},{"_id":"source\\_posts\\jquery-mobile-full-page-reload.md","mtime":1406181142000},{"_id":"source\\_posts\\Use-current_time-function-instead-of-PHPs-time-function-in-WordPress-plugin-development.md","mtime":1406790861000}],"Category":[{"name":"css","_id":"qsvwe1pi8ihssy3s","posts":["jftom9huyl3amii6"]},{"name":"buzz","_id":"17iuzfd4l7vxxksa","posts":["xot3obl2v1ubjx9w","lpjpk69sgh9dtr73"]},{"name":"nodejs","_id":"kxkcgitkn66hw22l","posts":["thjy3vhbs66jx4mx"]},{"name":"js","_id":"5xltbw8b9xydfn1x","posts":["x62ummahpwq2vwii"]},{"name":"PHP","_id":"1keg4t4ka6otwa82","posts":["gpzajaujwucig24x","ny6p2hggw5s1brwx"]}],"Page":[],"Post":[{"title":"CSS小技巧/贴士","date":1400144352000,"tags":["93txz5g4vwnjokd7"],"categories":["qsvwe1pi8ihssy3s"],"content":"<h2 id=\"使用简写\">使用简写</h2>\n<p>比如：<code>margin-top:5px;margin-bottom:5px;margin-left:0;margin-right:0;</code><br>可以简写为：<code>margin:5px 0;</code><br>其他还有很多可以简写的，比如font的定义，具体参考W3C文档。</p>\n<h2 id=\"为选中的文字定义样式\">为选中的文字定义样式</h2>\n<p>比如：<code>::selection {color:#09c;}</code><br>适用于现代浏览器，有时需加厂商前缀，如：<code>::-moz-selection{}</code><br>这个功能在国外一些激进的网页设计博客上，2年前就开始使用了，<a id=\"more\"></a>当然了人家环境好。</p>\n<h2 id=\"定义多个字体\">定义多个字体</h2>\n<p>5年前，还流行着：<code>font-family:arial,&#39;宋体&#39;,sans-serif;</code>，网页上普遍都是‘宋体’<br>如今更多人选择：<code>font-family:arial,Microsoft YaHei&#39;,&#39;SimSun&#39;,sans-serif;</code><br>对于中文字体，先检测电脑上是否有微软雅黑，没有则采用后面一个宋体，这样可以添加多个与设计相近的字体，尽量保持网页在不同平台上字体的统一性。</p>\n<h2 id=\"过渡transition写在默认样式中\">过渡transition写在默认样式中</h2>\n<p>假设要对<code>&lt;a&gt;</code>标签hover时改变文字颜色，并且添加trasition过渡效果，那么应当添加在：<code>a {color:#ccc;transition:color 0.5s ease-in-out;}</code>中<br>而不是这里：<code>a:hover {color:#096;}</code>，这样的话从hover切换回默认样式，也会有过渡效果～</p>\n<h2 id=\"文字在div中垂直居中\">文字在div中垂直居中</h2>\n<p>有一个div：<code>&lt;div&gt;我要垂直居中！&lt;/div&gt;</code><br>对div定义<code>div {height:100px;display:table-cell;vertical-align:middle;}</code><br>原理是使div像td一样表现，这样就可以定义vertical-align了。</p>\n<h2 id=\"任意元素水平垂直居中\">任意元素水平垂直居中</h2>\n<p>以图片为例：<code>&lt;div&gt;&lt;img src=&quot;sample.jpg&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/div&gt;</code><br>div应当有个高度：<code>div {height:600px;position:relative;}</code><br>对图片进行绝对定位：<code>div img {position:absolute;top:50%;left:50%;}</code>，这时只是图片的左上角位于div的正中心，需要添加<code>div img {position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:-100px;}</code><br>其中100px是取自图片的高宽度的一半，所以这个写法要求元素的高宽固定。</p>\n<h2 id=\"清除浮动\">清除浮动</h2>\n<p>老生常谈，假设有：<code>&lt;div&gt;&lt;img src=&quot;a.jpg&quot;&gt;&lt;p&gt;text here&lt;/p&gt;&lt;/div&gt;</code>，其中<img>元素左浮动<br>那么需要为父容器<code>&lt;div&gt;</code>做清除浮动的设置，最最简洁的代码：<code>div:before,div:after{content:&quot;&quot;;display:table;} div:after{clear:both;}</code><br>原理就是通过设置:before和:after伪元素来清除浮动，有些版本还会加上行高、字号之类的，都是对此的增强。需要注意的是:before和:after在IE8及以上才支持。</p>\n<h2 id=\"用CSS做三角形\">用CSS做三角形</h2>\n<p>这个东西最早有一个老外的博客上看到，现在找不到了，找到一个比较早的是<a href=\"http://css-tricks.com/snippets/css/css-triangle/\" target=\"_blank\" rel=\"external\">CSS Tricks</a>上的一篇文章。<br>其实代码很简单：<code>&lt;div&gt;&lt;/div&gt;</code>，先设置样式：<code>div{height:0;width:0;margin-bottom:1em;}</code>，然后如果是向上的：<code>border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:5px solid #09c;</code>，其他方向同理～<br>如果要等边三角形，那么以向上箭头为例，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：<code>border-bottom:9px solid #09c;</code><br>当然了，也可以使用CSS3的transform来旋转角度，但是支持有限，且需要添加各产商前缀。</p>\n<h2 id=\"用box-shadow做纸张层叠效果\">用box-shadow做纸张层叠效果</h2>\n<p><a href=\"http://jsfiddle.net/66beta/ad4HG/\" target=\"_blank\" rel=\"external\">jsFiddle地址</a></p>\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/ad4HG/embedded/html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe>","source":"_posts/css-tips-and-tricks.md","raw":"title: CSS小技巧/贴士\ndate: 2014-05-15 16:59:12\ntags: css\ncategories: css\n---\n##使用简写\n比如：`margin-top:5px;margin-bottom:5px;margin-left:0;margin-right:0;`\n可以简写为：`margin:5px 0;`\n其他还有很多可以简写的，比如font的定义，具体参考W3C文档。\n\n##为选中的文字定义样式\n比如：`::selection {color:#09c;}`\n适用于现代浏览器，有时需加厂商前缀，如：`::-moz-selection{}`\n这个功能在国外一些激进的网页设计博客上，2年前就开始使用了，<!-- more -->当然了人家环境好。\n\n##定义多个字体\n5年前，还流行着：`font-family:arial,'宋体',sans-serif;`，网页上普遍都是‘宋体’\n如今更多人选择：`font-family:arial,Microsoft YaHei','SimSun',sans-serif;`\n对于中文字体，先检测电脑上是否有微软雅黑，没有则采用后面一个宋体，这样可以添加多个与设计相近的字体，尽量保持网页在不同平台上字体的统一性。\n\n##过渡transition写在默认样式中\n假设要对`<a>`标签hover时改变文字颜色，并且添加trasition过渡效果，那么应当添加在：`a {color:#ccc;transition:color 0.5s ease-in-out;}`中\n而不是这里：`a:hover {color:#096;}`，这样的话从hover切换回默认样式，也会有过渡效果～\n\n##文字在div中垂直居中\n有一个div：`<div>我要垂直居中！</div>`\n对div定义`div {height:100px;display:table-cell;vertical-align:middle;}`\n原理是使div像td一样表现，这样就可以定义vertical-align了。\n\n##任意元素水平垂直居中\n以图片为例：`<div><img src=\"sample.jpg\" width=\"200\" height=\"200\"></div>`\ndiv应当有个高度：`div {height:600px;position:relative;}`\n对图片进行绝对定位：`div img {position:absolute;top:50%;left:50%;}`，这时只是图片的左上角位于div的正中心，需要添加`div img {position:absolute;top:50%;left:50%;margin-top:-100px;margin-left:-100px;}`\n其中100px是取自图片的高宽度的一半，所以这个写法要求元素的高宽固定。\n\n##清除浮动\n老生常谈，假设有：`<div><img src=\"a.jpg\"><p>text here</p></div>`，其中<img>元素左浮动\n那么需要为父容器`<div>`做清除浮动的设置，最最简洁的代码：`div:before,div:after{content:\"\";display:table;} div:after{clear:both;}`\n原理就是通过设置:before和:after伪元素来清除浮动，有些版本还会加上行高、字号之类的，都是对此的增强。需要注意的是:before和:after在IE8及以上才支持。\n\n##用CSS做三角形\n这个东西最早有一个老外的博客上看到，现在找不到了，找到一个比较早的是[CSS Tricks](http://css-tricks.com/snippets/css/css-triangle/)上的一篇文章。\n其实代码很简单：`<div></div>`，先设置样式：`div{height:0;width:0;margin-bottom:1em;}`，然后如果是向上的：`border-left:5px solid transparent;border-right:5px solid transparent;border-bottom:5px solid #09c;`，其他方向同理～\n如果要等边三角形，那么以向上箭头为例，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：`border-bottom:9px solid #09c;`\n当然了，也可以使用CSS3的transform来旋转角度，但是支持有限，且需要添加各产商前缀。\n\n##用box-shadow做纸张层叠效果\n[jsFiddle地址](http://jsfiddle.net/66beta/ad4HG/)\n{% jsfiddle ad4HG html,css,result %}","slug":"css-tips-and-tricks","updated":1406181142000,"excerpt":"<h2 id=\"使用简写\">使用简写</h2>\n<p>比如：<code>margin-top:5px;margin-bottom:5px;margin-left:0;margin-right:0;</code><br>可以简写为：<code>margin:5px 0;</code><br>其他还有很多可以简写的，比如font的定义，具体参考W3C文档。</p>\n<h2 id=\"为选中的文字定义样式\">为选中的文字定义样式</h2>\n<p>比如：<code>::selection {color:#09c;}</code><br>适用于现代浏览器，有时需加厂商前缀，如：<code>::-moz-selection{}</code><br>这个功能在国外一些激进的网页设计博客上，2年前就开始使用了，","_id":"jftom9huyl3amii6","comments":true,"layout":"post","photos":[],"link":""},{"title":"Chrome中启用第三方扩展","date":1402393932000,"tags":["9gmyobjtalp4uakf"],"categories":["17iuzfd4l7vxxksa"],"content":"<p>Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。<br>乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。<br>但是类似<strong>Youtube Center</strong>之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？</p>\n<h2 id=\"“Challenge_except”\">“Challenge except”</h2>\n<p>感谢的userscripts.org社区，催生了<a id=\"more\"></a><strong><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" target=\"_blank\" rel=\"external\">Tampermonkey</a></strong>这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！</p>\n<h2 id=\"进入主题\">进入主题</h2>\n<p>到Chrome应用商店安装<strong>Tampermonkey</strong>，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是<code>https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js</code>，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。<br>于是，被Chrome禁用的扩展，又复活了。<br><img src=\"/public/tampermonkey.png\" alt=\"Install Youtube Center on Tampermonkey\"></p>\n<h2 id=\"担心\">担心</h2>\n<p>万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～</p>\n","source":"_posts/enable-third-party-extensions-on-chrome.md","raw":"title: Chrome中启用第三方扩展\ndate: 2014-06-10 17:52:12\ntags:\n- buzz\ncategories:\n- buzz\n---\nGoogle发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。\n乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。\n但是类似**Youtube Center**之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？\n##\"Challenge except\"\n感谢的userscripts.org社区，催生了<!-- more -->**[Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo)**这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！\n##进入主题\n到Chrome应用商店安装**Tampermonkey**，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是`https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js`，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。\n于是，被Chrome禁用的扩展，又复活了。\n![Install Youtube Center on Tampermonkey](/public/tampermonkey.png)\n##担心\n万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～","slug":"enable-third-party-extensions-on-chrome","updated":1406181142000,"excerpt":"<p>Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。<br>乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。<br>但是类似<strong>Youtube Center</strong>之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？</p>\n<h2 id=\"“Challenge_except”\">“Challenge except”</h2>\n<p>感谢的userscripts.org社区，催生了","_id":"xot3obl2v1ubjx9w","comments":true,"layout":"post","photos":[],"link":""},{"title":"Hello World","date":1399212666000,"tags":["bhw7wglf7x56gwif","46y43mbzi3a9jowl"],"categories":["17iuzfd4l7vxxksa"],"content":"<h2 id=\"Octopress不成，Hexo之\">Octopress不成，Hexo之</h2>\n<p>Ruby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。<br>那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～<br>Hexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。<br><a id=\"more\"></a><br>毕竟是js啊，改起来瞬间就顺手了…</p>\n<h2 id=\"好好码字\">好好码字</h2>\n<p>自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！<br>都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～</p>\n<p><strong>现在开始好好码字，积累亦分享。</strong></p>\n","source":"_posts/hello-world.md","raw":"title: Hello World\ndate: 2014-05-04 22:11:06\ntags:\n- hexo\n- nodejs\ncategories:\n- buzz\n---\n\n##Octopress不成，Hexo之\nRuby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。\n那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～\nHexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。\n<!-- more -->\n毕竟是js啊，改起来瞬间就顺手了...\n##好好码字\n自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！\n都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～\n\n**现在开始好好码字，积累亦分享。**","slug":"hello-world","updated":1406181142000,"excerpt":"<h2 id=\"Octopress不成，Hexo之\">Octopress不成，Hexo之</h2>\n<p>Ruby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。<br>那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～<br>Hexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。<br>","_id":"lpjpk69sgh9dtr73","comments":true,"layout":"post","photos":[],"link":""},{"title":"如何安装配置Hexo","date":1399364999000,"tags":["bhw7wglf7x56gwif"],"categories":["kxkcgitkn66hw22l"],"content":"<p><a href=\"http://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a> - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞<a href=\"http://zespia.tw/\" target=\"_blank\" rel=\"external\">tommy351</a>开发的。在<a href=\"https://github.com/tommy351/hexo\" target=\"_blank\" rel=\"external\">Github</a>上搜索”node.js blog”的话，当前是Most stars的。</p>\n<p><strong>Hexo的安装也非常便捷(Git等常用工具就不多说了～)：</strong></p>\n<h2 id=\"搭建环境\">搭建环境</h2>\n<p><a id=\"more\"></a></p>\n<ol>\n<li><p>安装nodejs，可以从<a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"external\">nodejs官网</a>下载到最新稳定版本。<br>OSX/Linux用户建议直接安装<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"external\">nvm (Node Version Manager)</a>，然后用nvm安装指定的nodejs版本；<br>Windows用户没有nvm但是有<a href=\"https://github.com/marcelklehr/nodist\" target=\"_blank\" rel=\"external\">nodist (Natural node version manager for windows)</a>（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。</p>\n</li>\n<li><p>采用taobao的npm镜像，安装cnpm<br>如同gem镜像一样，taobao也有个npm镜像叫做<a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"external\">TAONPM</a>，没10分钟同步一次，杠杠滴。<br>每次指定镜像源太麻烦了，所以有了cnpm：<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code><br>下次再想从taobao镜像安装的时候，直接<br><code>cnpm install -g *</code><br>很方便。</p>\n</li>\n</ol>\n<h2 id=\"安装并初始化Hexo\">安装并初始化Hexo</h2>\n<ol>\n<li><p>安装Hexo<br>搭建好了nodejs环境，安装模块就很简单了：<br><code>npm install -g hexo</code></p>\n</li>\n<li><p>初始化<br>以我的Windows机器（POWERSHELL）为例：<br><code>PS C:\\Users\\66beta&gt; hexo init 66beta.github.io</code><br><strong>注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究</strong><br>来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。<br><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"external\">hexo-generator-feed</a>是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：<br><code>npm install hexo-generator-feed --save</code><br>然后，根据<a href=\"http://hexo.io/docs/configuration.html\" target=\"_blank\" rel=\"external\">Hexo官方文档</a>来对_config.yml做一些配置。</p>\n</li>\n</ol>\n<h2 id=\"写文章并生成HTML\">写文章并生成HTML</h2>\n<ol>\n<li><p>添加一篇文章<br><code>hexo new [layout] &lt;title&gt;</code><br>比如：<br><code>hexo new &quot;Hello Hexo&quot;</code><br>在source\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～</p>\n</li>\n<li><p>生成HTML<br>编写完后，运行生成HTML的命令：<br><code>hexo generate</code></p>\n</li>\n<li><p>预览<br>生成完HTML文件后，可以运行一个web服务来查看效果：<br><code>hexo server</code><br>保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。</p>\n</li>\n</ol>\n<h2 id=\"完毕\">完毕</h2>\n<p>以上只是记录下安装的流程，具体安装与使用请见<a href=\"http://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo官网</a>，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。</p>\n<p>自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～</p>\n","source":"_posts/how-to-setup-hexo.md","raw":"title: '如何安装配置Hexo'\ndate: 2014-05-06 16:29:59\ntags: \n- hexo\ncategories:\n- nodejs\n---\n[Hexo](http://hexo.io/) - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞[tommy351](http://zespia.tw/)开发的。在[Github](https://github.com/tommy351/hexo)上搜索\"node.js blog\"的话，当前是Most stars的。\n\n**Hexo的安装也非常便捷(Git等常用工具就不多说了～)：**\n##搭建环境\n<!-- more -->\n1. 安装nodejs，可以从[nodejs官网](http://nodejs.org/)下载到最新稳定版本。\nOSX/Linux用户建议直接安装[nvm (Node Version Manager)](https://github.com/creationix/nvm)，然后用nvm安装指定的nodejs版本；\nWindows用户没有nvm但是有[nodist (Natural node version manager for windows)](https://github.com/marcelklehr/nodist)（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。\n\n2. 采用taobao的npm镜像，安装cnpm\n如同gem镜像一样，taobao也有个npm镜像叫做[TAONPM](http://npm.taobao.org/)，没10分钟同步一次，杠杠滴。\n每次指定镜像源太麻烦了，所以有了cnpm：\n`npm install -g cnpm --registry=http://registry.npm.taobao.org`\n下次再想从taobao镜像安装的时候，直接\n`cnpm install -g *`\n很方便。\n\n##安装并初始化Hexo\n1. 安装Hexo\n搭建好了nodejs环境，安装模块就很简单了：\n`npm install -g hexo`\n\n2. 初始化\n以我的Windows机器（POWERSHELL）为例：\n`PS C:\\Users\\66beta> hexo init 66beta.github.io`\n**注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究**\n来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。\n[hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：\n`npm install hexo-generator-feed --save`\n然后，根据[Hexo官方文档](http://hexo.io/docs/configuration.html)来对_config.yml做一些配置。\n\n##写文章并生成HTML\n1. 添加一篇文章\n`hexo new [layout] <title>`\n比如：\n`hexo new \"Hello Hexo\"`\n在source\\\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～\n\n2. 生成HTML\n编写完后，运行生成HTML的命令：\n`hexo generate`\n\n3. 预览\n生成完HTML文件后，可以运行一个web服务来查看效果：\n`hexo server`\n保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。\n\n##完毕\n\n以上只是记录下安装的流程，具体安装与使用请见[Hexo官网](http://hexo.io/)，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。\n\n自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～\n\n\n\n","slug":"how-to-setup-hexo","updated":1406181142000,"excerpt":"<p><a href=\"http://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a> - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞<a href=\"http://zespia.tw/\" target=\"_blank\" rel=\"external\">tommy351</a>开发的。在<a href=\"https://github.com/tommy351/hexo\" target=\"_blank\" rel=\"external\">Github</a>上搜索”node.js blog”的话，当前是Most stars的。</p>\n<p><strong>Hexo的安装也非常便捷(Git等常用工具就不多说了～)：</strong></p>\n<h2 id=\"搭建环境\">搭建环境</h2>\n<p>","_id":"thjy3vhbs66jx4mx","comments":true,"layout":"post","photos":[],"link":""},{"title":"jQuery Mobile页面刷新JS失效问题","date":1403598942000,"tags":["xvbrt7t84lplxpf0","nzrh59izjfxvpcai"],"categories":["5xltbw8b9xydfn1x"],"content":"<p>用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<a id=\"more\"></a></p>\n<p>翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：<br><code>&quot;It&#39;s important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=&quot;external&quot; or data-ajax=&quot;false&quot; to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.&quot;</code></p>\n<p>例如：<code>&lt;a href=&quot;multipage.html&quot; rel=&quot;external&quot;&gt;Multi-page link&lt;/a&gt;</code></p>\n<p>哎，看文档不仔细啊～</p>\n","source":"_posts/jquery-mobile-full-page-reload.md","raw":"title: 'jQuery Mobile页面刷新JS失效问题'\ndate: 2014-06-24 16:35:42\ntags:\n- jQuery Mobile\n- js\ncategories:\n- js\n---\n用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<!-- more -->\n\n翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：\n`\"It's important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=\"external\" or data-ajax=\"false\" to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.\"`\n\n例如：`<a href=\"multipage.html\" rel=\"external\">Multi-page link</a>`\n\n哎，看文档不仔细啊～","slug":"jquery-mobile-full-page-reload","updated":1406181142000,"excerpt":"<p>用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。","_id":"x62ummahpwq2vwii","comments":true,"layout":"post","photos":[],"link":""},{"title":"CI Session regenerate Issue with xampp on OSX","date":1405920501000,"tags":["feh5kccod1jj889m"],"categories":["1keg4t4ka6otwa82"],"content":"<p>最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<a id=\"more\"></a><br>问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。<br>经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：<br><code>$config[&#39;sess_encrypt_cookie&#39;] = FALSE;</code><br>居然OK了～<br>也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。<br>记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。</p>\n","source":"_posts/ci-session-issue-with-xampp-on-osx.md","raw":"title: 'CI Session regenerate Issue with xampp on OSX'\ndate: 2014-07-21 13:28:21\ntags:\n- Codeigniter\ncategories:\n- PHP\n---\n最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<!-- more -->\n问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。\n经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：\n`$config['sess_encrypt_cookie'] = FALSE;`\n居然OK了～\n也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。\n记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。","slug":"ci-session-issue-with-xampp-on-osx","updated":1406181142000,"excerpt":"<p>最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。","_id":"gpzajaujwucig24x","comments":true,"layout":"post","photos":[],"link":""},{"title":"开发WordPress插件的时候，用date函数无法获取所在时区的时间","date":1406789951000,"tags":["dra4mqyp2mq75oq2","kipg1nd8r8qnhf1n"],"categories":["1keg4t4ka6otwa82"],"content":"<p>在普通PHP开发中，假定在php.ini中已经设定了timezone为<code>Asia/Shanghai</code>之后，用<code>date(&#39;H:i:s&#39;)</code>即可获得当前时间。<br>但是刚刚在研究开发WordPress插件的时候，发现用<code>date(&#39;H:i:s&#39;)</code>获取的时间是0时区，php.ini中的设置没有起作用，<a id=\"more\"></a>WordPress后台设置的时区也不在此起作用。<br>Google了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。</p>\n<h2 id=\"找到答案\">找到答案</h2>\n<p>吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数<code>current_time(&quot;H:i:s&quot;)</code>才能获取到本时区时间，用<code>date(&#39;H:i:s&#39;)</code>只能得到0时区的时间。<br>文档在这里：<a href=\"http://codex.wordpress.org/Function_Reference/current_time\" target=\"_blank\" rel=\"external\">Function Reference:current_time</a></p>\n","source":"_posts/Use-current_time-function-instead-of-PHPs-time-function-in-WordPress-plugin-development.md","raw":"title: \"开发WordPress插件的时候，用date函数无法获取所在时区的时间\"\ndate: 2014-07-31 14:59:11\ntags:\n- php\n- wordpress\ncategories:\n- PHP\n---\n在普通PHP开发中，假定在php.ini中已经设定了timezone为`Asia/Shanghai`之后，用`date('H:i:s')`即可获得当前时间。\n但是刚刚在研究开发WordPress插件的时候，发现用`date('H:i:s')`获取的时间是0时区，php.ini中的设置没有起作用，<!-- more -->WordPress后台设置的时区也不在此起作用。\nGoogle了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。\n##找到答案\n吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数`current_time(\"H:i:s\")`才能获取到本时区时间，用`date('H:i:s')`只能得到0时区的时间。\n文档在这里：[Function Reference:current_time](http://codex.wordpress.org/Function_Reference/current_time)","slug":"Use-current_time-function-instead-of-PHPs-time-function-in-WordPress-plugin-development","updated":1406790861000,"excerpt":"<p>在普通PHP开发中，假定在php.ini中已经设定了timezone为<code>Asia/Shanghai</code>之后，用<code>date(&#39;H:i:s&#39;)</code>即可获得当前时间。<br>但是刚刚在研究开发WordPress插件的时候，发现用<code>date(&#39;H:i:s&#39;)</code>获取的时间是0时区，php.ini中的设置没有起作用，","_id":"ny6p2hggw5s1brwx","comments":true,"layout":"post","photos":[],"link":""}],"Tag":[{"name":"css","_id":"93txz5g4vwnjokd7","posts":["jftom9huyl3amii6"]},{"name":"buzz","_id":"9gmyobjtalp4uakf","posts":["xot3obl2v1ubjx9w"]},{"name":"hexo","_id":"bhw7wglf7x56gwif","posts":["lpjpk69sgh9dtr73","thjy3vhbs66jx4mx"]},{"name":"nodejs","_id":"46y43mbzi3a9jowl","posts":["lpjpk69sgh9dtr73"]},{"name":"jQuery Mobile","_id":"xvbrt7t84lplxpf0","posts":["x62ummahpwq2vwii"]},{"name":"js","_id":"nzrh59izjfxvpcai","posts":["x62ummahpwq2vwii"]},{"name":"Codeigniter","_id":"feh5kccod1jj889m","posts":["gpzajaujwucig24x"]},{"name":"php","_id":"dra4mqyp2mq75oq2","posts":["ny6p2hggw5s1brwx"]},{"name":"wordpress","_id":"kipg1nd8r8qnhf1n","posts":["ny6p2hggw5s1brwx"]}]}