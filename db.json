{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.png","path":"favicon.png","modified":0,"renderable":0},{"_id":"source/public/tampermonkey.png","path":"public/tampermonkey.png","modified":0,"renderable":0},{"_id":"source/public/katematic.png","path":"public/katematic.png","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"afae8afad73c0e72dbac9a602203465908038b92","modified":1515136953945},{"_id":"source/favicon.png","hash":"78c86a814b9e22dfe5c63a76922981ddaca86939","modified":1515136172101},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1515144840550},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1515144840551},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1515144840550},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1515144840550},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1515144840551},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1515144840551},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1515144840551},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1515144840552},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1515144840552},{"_id":"themes/next/README.md","hash":"44b28d995681a7c48bfe3d0577d6203812d07e59","modified":1515144840553},{"_id":"themes/next/_config.yml","hash":"f1f574608cf63fe85c95811235f04cfcc628317b","modified":1515565771615},{"_id":"themes/next/README.cn.md","hash":"5d8af3d8de8d3926126a738519e97c8442b0effe","modified":1515144840552},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1515144840580},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1515144840580},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1515144840552},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1515144840600},{"_id":"source/_posts/You-Dont-Know-JS-notes-part1.md","hash":"195792b0b14786ee2c4d26ce1b366f31167797b9","modified":1528850671203},{"_id":"source/_posts/brew-upgrade-break-nvm.md","hash":"330c0a449eb00197f7a64da0e4a5af4a949bd6f6","modified":1528850661892},{"_id":"source/_posts/Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy.md","hash":"21a02771e6c359a0a814a39b8b8e50a397f50c6c","modified":1515552296749},{"_id":"source/_posts/ci-session-issue-with-xampp-on-osx.md","hash":"610e10934b4f5bc65308aba3219f4377a603c94c","modified":1515552303586},{"_id":"source/_posts/css-notes.md","hash":"d348d4c6cbd19f3afe1e7dd0115a7f5e483e1b60","modified":1515567532981},{"_id":"source/_posts/delete-a-chinese-foler-from-linux-command-line.md","hash":"10a76febc4127d622360c6f53efac8181d812031","modified":1515552319037},{"_id":"source/_posts/delete-commits-from-github.md","hash":"de4ae61359ab601bc0f95c7fe06456d8fd90da43","modified":1515552332165},{"_id":"source/_posts/enable-third-party-extensions-on-chrome.md","hash":"e156d0b81e096dd327c1b967564d578281ec5558","modified":1515552337931},{"_id":"source/_posts/js-notes.md","hash":"e700e2c9de708499ae3a4d5285d733c16fd88098","modified":1515634956104},{"_id":"source/_posts/hello-world.md","hash":"d8564df46823cb94a07531bfc28d9eba0eebe686","modified":1515552342030},{"_id":"source/_posts/use-current_time-instead-of-time-in-wordpress-plugin-development.md","hash":"4e1dc6552bbee28634cd662ee2921ae5a558048d","modified":1515552260836},{"_id":"source/_posts/meet-docker-again.md","hash":"b514729593b575945eb10cf3b5058d86c2675539","modified":1515374938300},{"_id":"source/_posts/how-to-setup-hexo.md","hash":"fedf77d229951af45d6f69ecc3311b265c6a481c","modified":1515552346159},{"_id":"source/_posts/vps-initial-setup.md","hash":"e93830d07d3635de4a208314ebca83405b0123a2","modified":1515552363272},{"_id":"source/_posts/jquery-mobile-full-page-reload.md","hash":"c29fdeaa80ea2d5b046b8fb689c3ce120fe966ba","modified":1515552265167},{"_id":"source/categories/index.md","hash":"f1f4b5249d939ab1f0918b45a5c6e60388292ea6","modified":1515563113572},{"_id":"source/tags/index.md","hash":"3bbe9aa4db8f5f84b55555bbb8ccb2a702bff2df","modified":1515563076967},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1515144840544},{"_id":"source/public/tampermonkey.png","hash":"e950bed8c93a50dafb4a57222df0a5c646dc3f3f","modified":1515136172101},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1515144840545},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1515144780481},{"_id":"source/public/katematic.png","hash":"1d3d0fae26fbb342b3ace4ec77969f6491cfbef2","modified":1515142813588},{"_id":"themes/next/.git/index","hash":"922267378caf458629032ccaaa652fdcdb33f887","modified":1515144840674},{"_id":"themes/next/.git/packed-refs","hash":"339779e225d913a344c5e6210617badd049c4434","modified":1515144840542},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1515144840550},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1515144840551},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1515144840550},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1515144840551},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1515144840580},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1515144840581},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1515144840581},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1515144840581},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1515144840581},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1515144840582},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1515144840582},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1515144840582},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1515144840582},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1515144840583},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1515144840583},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1515144840582},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1515144840601},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1515144840601},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1515144840580},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1515144840583},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1515144840583},{"_id":"themes/next/source/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1515563344219},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1515144840581},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1515144840673},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1515144840673},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1515144840673},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1515144840584},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1515144840599},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1515144840599},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1515144840599},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1515144840599},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1515144840600},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1515144840600},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1515144840600},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515144840629},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1515144780482},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1515144780482},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1515144780482},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1515144780481},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1515144780482},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1515144780481},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1515144780482},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1515144780481},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1515144780482},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1515144780483},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1515144780480},{"_id":"themes/next/.git/logs/HEAD","hash":"afede2660a7d7b83f37de1fbcf1b5ccedeb55d36","modified":1515144840544},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1515144840601},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1515144840602},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1515144840602},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1515144840602},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1515144840602},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1515144840602},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1515144840603},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1515144840603},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1515144840603},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1515144840628},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1515144840629},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1515144840629},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1515144840629},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1515144840629},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1515144840630},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1515144840630},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1515144840630},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1515144840631},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1515144840630},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1515144840631},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1515144840631},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1515144840631},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515144840632},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1515144840632},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515144840632},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1515144840632},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1515144840632},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1515144840583},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1515144840584},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1515144840632},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1515144840584},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1515144840584},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1515144840585},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1515144840585},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1515144840585},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1515144840584},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1515144840585},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1515144840585},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1515144840585},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1515144840586},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1515144840586},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1515144840586},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1515144840586},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1515144840588},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1515144840588},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1515144840589},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1515144840596},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1515144840596},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1515144840597},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1515144840596},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1515144840597},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1515144840597},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1515144840597},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515144840620},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515144840621},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515144840621},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515144840628},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515144840589},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515144840589},{"_id":"themes/next/.git/refs/heads/master","hash":"f4d9f6f8bc79e9bc071cf29324a74a1d78158ab9","modified":1515144840544},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1515144840620},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1515144840620},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1515144840621},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1515144840621},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1515144840627},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1515144840628},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1515144840628},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1515144840628},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"6cd8db78877007fd877debd79e8a06e634087ed9","modified":1515565191183},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1515144840641},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1515144840643},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1515144840642},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1515144840643},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1515144840639},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1515144840647},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1515144840648},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1515144840648},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1515144840648},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1515144840659},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1515144840660},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1515144840660},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1515144840660},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1515144840661},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1515144840661},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1515144840649},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1515144840661},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1515144840649},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1515144840649},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1515144840650},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1515144840650},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1515144840670},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1515144840670},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1515144840672},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1515144840672},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1515144840673},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1515144840633},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1515144840633},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1515144840634},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1515144840634},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1515144840633},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1515144840634},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1515144840634},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1515144840634},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1515144840635},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1515144840635},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1515144840635},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1515144840662},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1515144840662},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1515144840662},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1515144840663},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1515144840663},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1515144840663},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1515144840663},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1515144840664},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1515144840663},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1515144840663},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1515144840664},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1515144840664},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1515144840664},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1515144840665},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1515144840665},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1515144840665},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1515144840665},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1515144840661},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1515144840661},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1515144840662},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1515144840586},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1515144840586},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1515144840587},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1515144840587},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1515144840587},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1515144840587},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1515144840587},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1515144840588},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1515144840588},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1515144840589},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1515144840589},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1515144840589},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1515144840589},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1515144840590},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1515144840593},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1515144840593},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1515144840593},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1515144840593},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1515144840594},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1515144840593},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1515144840594},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1515144840594},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1515144840594},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1515144840594},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1515144840594},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1515144840595},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1515144840595},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1515144840595},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1515144840595},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1515144840595},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1515144840595},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1515144840596},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1515144840596},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1515144840596},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1515144840598},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1515144840598},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1515144840599},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1515144840598},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1515144840660},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"afede2660a7d7b83f37de1fbcf1b5ccedeb55d36","modified":1515144840544},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1515144840543},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1515144840604},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1515144840604},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1515144840604},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1515144840604},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1515144840604},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1515144840608},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1515144840618},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1515144840618},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1515144840613},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1515144840618},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1515144840619},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1515144840619},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1515144840619},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1515144840620},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1515144840638},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1515144840637},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1515144840638},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1515144840621},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1515144840621},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1515144840622},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1515144840622},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1515144840622},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1515144840622},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1515144840622},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1515144840622},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1515144840623},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1515144840623},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1515144840624},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1515144840625},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1515144840625},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1515144840626},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1515144840626},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1515144840626},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1515144840627},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1515144840627},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1515144840644},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1515144840627},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1515144840643},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1515144840644},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1515144840644},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1515144840644},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1515144840644},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1515144840646},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1515144840647},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1515144840649},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1515144840647},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1515144840648},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1515144840651},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1515144840651},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1515144840670},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1515144840635},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1515144840670},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1515144840650},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1515144840597},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1515144840598},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1515144840638},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1515144840672},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1515144840659},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1515144840659},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"afede2660a7d7b83f37de1fbcf1b5ccedeb55d36","modified":1515144840543},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1515144840605},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1515144840605},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1515144840605},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1515144840605},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1515144840606},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1515144840605},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1515144840606},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1515144840606},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1515144840606},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1515144840607},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1515144840607},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1515144840607},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1515144840607},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1515144840607},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1515144840611},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1515144840611},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1515144840611},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1515144840612},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1515144840612},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1515144840613},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1515144840613},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1515144840613},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1515144840612},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1515144840613},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1515144840608},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1515144840608},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1515144840608},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1515144840609},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1515144840609},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1515144840609},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1515144840610},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1515144840610},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1515144840610},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1515144840610},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1515144840610},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1515144840610},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1515144840610},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1515144840611},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1515144840611},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1515144840614},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1515144840614},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1515144840614},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1515144840614},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1515144840614},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1515144840615},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1515144840615},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1515144840615},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1515144840615},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1515144840616},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1515144840616},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1515144840616},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1515144840616},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1515144840616},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1515144840617},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1515144840617},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1515144840617},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1515144840617},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1515144840617},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1515144840636},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1515144840636},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1515144840636},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1515144840636},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1515144840637},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1515144840622},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1515144840623},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1515144840625},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1515144840645},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1515144840645},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1515144840645},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1515144840646},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1515144840646},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1515144840646},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1515144840654},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1515144840653},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1515144840658},{"_id":"themes/next/.git/objects/pack/pack-6c21c2439692309c5ce16575671cf7a9ba8dd065.idx","hash":"cd0b6ea8cf7743a6f221f7e20bc73d9bd2dddb71","modified":1515144840527},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1515144840641},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1515144840668},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1515144840657},{"_id":"themes/next/.git/objects/pack/pack-6c21c2439692309c5ce16575671cf7a9ba8dd065.pack","hash":"05873950143a8d5c4f95a124f72d6bbb1c8d63df","modified":1515144840523},{"_id":"public/categories/index.html","hash":"881cd25c084fffca385cfbf8553b7462881c4cae","modified":1528948082888},{"_id":"public/tags/index.html","hash":"5a897483065e20bcb762893d2438d7c3f4fb6e66","modified":1528948082899},{"_id":"public/Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy/index.html","hash":"1326e85355a76c68c68ca51d7b4f214e7b106804","modified":1528948083024},{"_id":"public/delete-a-chinese-foler-from-linux-command-line/index.html","hash":"aafb923b045c30fff8829e8e2d932555cdf41e22","modified":1528948083024},{"_id":"public/ci-session-issue-with-xampp-on-osx/index.html","hash":"08bbe3a95c247802958d4429c3efa24a2d908b13","modified":1528948083024},{"_id":"public/jquery-mobile-full-page-reload/index.html","hash":"79471472709761c585bd2e12fc6c7105e53294e2","modified":1528948083024},{"_id":"public/archives/page/2/index.html","hash":"b972e0a5c026416c81ebe6a41f23666ee32be8e6","modified":1528948083024},{"_id":"public/archives/2014/05/index.html","hash":"7755744e8ea9ad2178976ab3b6df2adf08cea65a","modified":1528948083024},{"_id":"public/archives/2014/07/index.html","hash":"fb2f6ef17e6fe4b443e8b0fb32fdaa7887124f38","modified":1528948083025},{"_id":"public/archives/2014/06/index.html","hash":"f901f4c8bf6092850e771215e00e9edefb97ad1a","modified":1528948083024},{"_id":"public/archives/2014/08/index.html","hash":"fe89a1dc6e00a79e439ddd244275be1272c76419","modified":1528948083025},{"_id":"public/archives/2014/12/index.html","hash":"525843aefe91d1162785c5a90cf372acc4ccc79b","modified":1528948083025},{"_id":"public/archives/2015/index.html","hash":"a2380d188257da32fc10e3fb458ebe78f8aa193f","modified":1528948083025},{"_id":"public/archives/2018/index.html","hash":"8ea547a9ef586165ddba4273f7666b81e4d45bb2","modified":1528948190416},{"_id":"public/archives/2015/08/index.html","hash":"17cbe95fd78d5d2e6112ccc69aa8c10848031fc4","modified":1528948083025},{"_id":"public/archives/2018/01/index.html","hash":"56af5c4c005efab66ff354aba869a534ec685ecd","modified":1528948083025},{"_id":"public/categories/其他/index.html","hash":"bbf82c71612debb5814ecef09bcb24624b9cdf5b","modified":1528948083026},{"_id":"public/categories/前端/index.html","hash":"3035c290b44c4031230ae3fb64efc820149665a3","modified":1528948190416},{"_id":"public/categories/后端/index.html","hash":"c7e5d72603744837d4af244260a6c0bf4cdd37bf","modified":1528948083026},{"_id":"public/categories/其他/page/2/index.html","hash":"f0e3273a0b59ce40fe3bcc81d35093cd5b5d159e","modified":1528948083026},{"_id":"public/categories/nodejs/index.html","hash":"1e0222e541484d9b6a137aa4d567044f40bec381","modified":1528948083026},{"_id":"public/tags/js/index.html","hash":"93112990ce5be1d8940c2645a50aaf02630de27f","modified":1528948190416},{"_id":"public/tags/sublime/index.html","hash":"1b3302cc8db7930e4da463ad5ba0b54894f4a077","modified":1528948083025},{"_id":"public/tags/css/index.html","hash":"ca6c2860526660fe54883ffe173e571ccc5b869b","modified":1528948083025},{"_id":"public/tags/linux/index.html","hash":"b8b9b005c25f6b3cbccebbdc1750d5fa8d81b086","modified":1528948083026},{"_id":"public/tags/git/index.html","hash":"262828c141bbea7bed0f0ce6cf06c07d45fce9bf","modified":1528948083026},{"_id":"public/tags/php/index.html","hash":"0204f16953acbeaa5fc4ace3bcfd13daae2fc081","modified":1528948083026},{"_id":"public/tags/chrome/index.html","hash":"b27190b787ef8ba19c914708fe756f02e373f9a9","modified":1528948083026},{"_id":"public/tags/wordpress/index.html","hash":"c26e22e462a3e3f392681b9ad3f4878d8dd00435","modified":1528948083026},{"_id":"public/tags/hexo/index.html","hash":"9283a0f7433f96b145f77ada6b54c797c5c2adca","modified":1528948083026},{"_id":"public/tags/PHP/index.html","hash":"18c76064b92d40cfce99769433b850b0a41d494c","modified":1528948083025},{"_id":"public/tags/nodejs/index.html","hash":"0315ce785ec10f6534760690845855a8d5c89bdb","modified":1528948083026},{"_id":"public/tags/docker/index.html","hash":"adab3a9bb3ee6208e84142b83d9f12958eb79390","modified":1528948083026},{"_id":"public/tags/jQuery-Mobile/index.html","hash":"9ea7b85e913880ec538808ad835e99ae94258b6c","modified":1528948083026},{"_id":"public/meet-docker-again/index.html","hash":"782bd2cf52eca52b42cb04932bba2eaa51e21b54","modified":1528948083026},{"_id":"public/vps-initial-setup/index.html","hash":"62072492cc2995d6add5a530d5e79fe5506ac377","modified":1528948083027},{"_id":"public/use-current_time-instead-of-time-in-wordpress-plugin-development/index.html","hash":"6f453633abba5f88021cab4776761b4952828acf","modified":1528948083027},{"_id":"public/delete-commits-from-github/index.html","hash":"046bb325eaddc5e3a34db7127e15504418075f01","modified":1528948083027},{"_id":"public/enable-third-party-extensions-on-chrome/index.html","hash":"3dfe87b6568be8ce6448149f2168d62129895286","modified":1528948083027},{"_id":"public/css-notes/index.html","hash":"548e837238b08159ea3c3eb737cdf5db16c9058f","modified":1528948083027},{"_id":"public/js-notes/index.html","hash":"355edac58b0fb2afb366e0a731ed503bb3335751","modified":1528948190417},{"_id":"public/hello-world/index.html","hash":"3d65d3584ef9283fa7ced760d2711d177efdcbc0","modified":1528948083027},{"_id":"public/archives/index.html","hash":"500df7d89654d848f806704f1a8707caba954108","modified":1528948190417},{"_id":"public/archives/2014/index.html","hash":"a7f6b2f25839e47032021de7faab11f4379436e6","modified":1528948083027},{"_id":"public/how-to-setup-hexo/index.html","hash":"dbf5b11529d01a56f77af9bd4a01cabb2068d367","modified":1528948083027},{"_id":"public/index.html","hash":"6b2c0fd7ebd11d023d0ace150a0c99df324b1e51","modified":1528948190417},{"_id":"public/page/2/index.html","hash":"b9f59e62f61384b515c401407bff160bfab064c5","modified":1528948083027},{"_id":"public/archives/2018/05/index.html","hash":"f80f614e4fd82b30980686f6d2d611356b7d3641","modified":1528948190416},{"_id":"public/archives/2018/06/index.html","hash":"c39de449bfd8e1db040c66789fc826d4f4a129f5","modified":1528948190416},{"_id":"public/tags/node/index.html","hash":"e951e4f7add4a45ede20933794279dfa12bd7865","modified":1528948083025},{"_id":"public/tags/nvm/index.html","hash":"0b2dcda0459a204c56c9c7dcf99864e76fc366b9","modified":1528948083025},{"_id":"public/tags/homebrew/index.html","hash":"dbefe2f8dc995bdaa3340668563569bb07f65a9b","modified":1528948083025},{"_id":"public/You-Dont-Know-JS-notes-part1/index.html","hash":"4bf58932717b0e40b7bb078b95a0a76bfefcd5d5","modified":1528948190417},{"_id":"public/brew-upgrade-break-nvm/index.html","hash":"b6135557a0caa75e020a0742b4246fdf07da3a2a","modified":1528948190417},{"_id":"public/CNAME","hash":"afae8afad73c0e72dbac9a602203465908038b92","modified":1528850589396},{"_id":"public/favicon.png","hash":"78c86a814b9e22dfe5c63a76922981ddaca86939","modified":1528850589396},{"_id":"public/public/katematic.png","hash":"1d3d0fae26fbb342b3ace4ec77969f6491cfbef2","modified":1528850589398},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1528850589398},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1528850589398},{"_id":"public/public/tampermonkey.png","hash":"e950bed8c93a50dafb4a57222df0a5c646dc3f3f","modified":1528850589398},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1528850589398},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1528850589398},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1528850589398},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1528850589398},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1528850589398},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1528850589398},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1528850589399},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1528850589399},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1528850589399},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1528850589399},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1528850589399},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1528850589399},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1528850589399},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1528850589399},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1528850589399},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1528850589399},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1528850589399},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1528850589399},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1528850589399},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1528850589399},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1528850589399},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1528850589399},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1528850589399},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1528850589399},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1528850589399},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1528850589399},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1528850589399},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1528850589399},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1528850589399},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1528850589399},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1528850589400},{"_id":"public/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1528850589871},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1528850589872},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1528850589879},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1528850589879},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1528850589879},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1528850589879},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1528850589879},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1528850589879},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1528850589879},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1528850589879},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1528850589879},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1528850589879},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1528850589879},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1528850589879},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1528850589879},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1528850589880},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1528850589880},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1528850589880},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1528850589880},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1528850589880},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1528850589880},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1528850589880},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1528850589880},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1528850589880},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1528850589880},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1528850589880},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1528850589880},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1528850589880},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1528850589880},{"_id":"public/css/main.css","hash":"c870e7ef9ef2ac4015430c124ea066f6048bf9e6","modified":1528850589880},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1528850589880},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1528850589880},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1528850589880},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1528850589880},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1528850589885},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1528850589885},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1528850589885},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1528850589885},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1528850589885},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1528850589885},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1528850589886},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1528850589886},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1528850589886},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1528850589886},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1528850589887},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1528850589887},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1528850589887},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1528850589887},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1528850589887},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1528850589887},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1528850589887},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1528850589887},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1528850589887},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1528850589887},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1528850589887},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1528850589887},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1528850589887},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1528850589888},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1528850589888},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1528850589888},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1528850589889},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1528850589889},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1528850589889},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1528850589889},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1528850589889},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1528850589889},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1528850589889},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1528850589889},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1528850589889},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1528850589889},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1528850589889},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1528850589889},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1528850589890},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1528850589890},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1528850589890},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1528850589890},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1528850589902},{"_id":"source/_posts/You-Dont-Know-JS-notes-part2.md","hash":"232e945fb933400e94163e4c21ca2f7b5b713ad6","modified":1528948182442},{"_id":"source/_posts/use-lobal-gulp-instead-of-global.md","hash":"c4dadae84ac63ab7d69fc2b3d4f5919f983c0a17","modified":1528948176355},{"_id":"public/use-lobal-gulp-instead-of-global/index.html","hash":"c766a958df527974dd562124d6f9426515440f1e","modified":1528948190415},{"_id":"public/You-Dont-Know-JS-notes-part2/index.html","hash":"ad7e8e96b34bfcd971672121de5409ad943779de","modified":1528948190417},{"_id":"public/tags/npm/index.html","hash":"b54fe67fa7f83f3e89274350e2fdca35d88f9790","modified":1528948190416},{"_id":"public/tags/gulp/index.html","hash":"7db5bce4aa38f8c4fe3f1a78ee74b5023c964884","modified":1528948190417},{"_id":"public/categories/前端/page/2/index.html","hash":"45b51cb363c25fc850a628705f00a554ae432e2a","modified":1528948083029}],"Category":[{"name":"前端","_id":"cjice5ylb0004wfranl760ge4"},{"name":"其他","_id":"cjice5ylm000ewfrap1yfibdw"},{"name":"后端","_id":"cjice5ylp000lwfrarllxtrnj"},{"name":"nodejs","_id":"cjice5ylx0016wfraqyik3f39"}],"Data":[],"Page":[{"title":"分类","date":"2018-01-10T05:44:47.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-01-10 13:44:47\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-01-10T05:45:13.572Z","path":"categories/index.html","layout":"page","_id":"cjice5yl60001wfrablevxao0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-01-10T05:43:16.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-01-10 13:43:16\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-10T05:44:36.967Z","path":"tags/index.html","layout":"page","_id":"cjice5yl90003wfrabw04xxcv","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"《你不知道的JS(上)》学习笔记 第一部分","date":"2018-05-24T03:08:28.000Z","_content":"\n## 内建类型\n  - string\n  - nubmer\n  - boolean\n  - undefined\n  - object (包括null)\n  - symbol (ES6+)\n\n## 类型转换\n__Truthy&Falsy__\n  - `Boolean(NaN) === false`\n  - `Boolean([]) === true`\n  - `Boolean({}) === true`\n\n__等价__\n```js\nvar a = [1,2,3]\nvar b = [1,2,3]\nvar c = \"1,2,3\"\n\na == c // true\nb == c // true\na == b // false\n\n[1,2,3].toString() // \"1,2,3\"\n```\n__不等价__\n```js\nvar a = 42\nvar b = \"foo\"\n\na < b // false\na > b // false\na == b // false\n\nNumber(\"foo\") // NaN\n```\nNaN既不大于其他值，也不小于其他值\n\n<!-- more -->\n\n## 变量\n标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。\n\n## Strict模式\n使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。\n\n## 立即调用表达式IIFE\n```js\n(function IIFE(){\n  console.log( \"Hello!\" );\n})();\n// \"Hello!\"\n```\n\n## 闭包\n```js\nfunction makeAdder(x) {\n  function add(y) {\n    return y + x;\n  };\n  return add;\n}\nvar plusOne = makeAdder( 1 );\nplusOne( 3 ); // 4 <-- 1 + 3\n```\n\n## 模块\n模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。\n```js\nfunction User() {\n  var username;\n  var password;\n  function doLogin(user,pw) {\n    username = user;\n    password = pw;\n  }\n  var publicAPI = {\n    login: doLogin\n  };\n  return publicAPI;\n}\n// 创建实例\nvar fred = User();\nfred.login('jack', '123');\n```\n\n## this标识符\n```js\nfunction foo() {\n  console.log( this.bar );\n}\nvar bar = \"global\";\nvar obj1 = {\n  bar: \"obj1\",\n  foo: foo\n};\nvar obj2 = {\n  bar: \"obj2\"\n};\n\nfoo();            // \"global\"\nobj1.foo();       // \"obj1\"\nfoo.call( obj2 ); // \"obj2\"\nnew foo();        // undefined\n```\n  - `foo()`最终在*非strict*模式中将*this*设置为全局对象；在*strict*模式中*this*将会是`undefined`\n  - `obj1.foo()`将*this*设置为对象*obj1*\n  - `foo.call(obj2)`将*this*设置为对象*obj2*\n  - `new foo()`将*this*设置为一个新的空对象\n\n## 原型\n```js\nvar foo = {\n  a: 42\n};\n// 创建 `bar` 并将它链接到 `foo`\nvar bar = Object.create( foo );\nbar.b = \"hello world\";\nbar.b; // \"hello world\"\nbar.a; // 42 <-- 委托到 `foo`\n```\n## 作用域\n\nLHS查询 `var a`\nRHS查询 `a = 2`\n\n### 欺骗\n\n1. `eval`\n```js\nfunction foo(str, a) {\n  eval( str );\n  console.log( a, b );\n}\nvar b = 2;\nfoo( \"var b = 3;\", 1 ); // 1 3\n```\n2. `with`\n```js\nfunction foo(obj) {\n  with (obj) {\n    a = 2; // o2时，隐式 var a\n  }\n}\nvar o1 = { a: 3 };\nvar o2 = { b: 3 };\n\nfoo( o1 );\nconsole.log( o1.a ); // 2\nfoo( o2 );\nconsole.log( o2.a ); // undefined\nconsole.log( a ); // 2 泄漏到了全局作用域\n```\n\n### 性能\n`eval` 和 `with`都不建议使用，且受严格模式限制。\b引擎不会优化`eval` 和 `with`，使用多会卡。\n\n## 函数与块级作用域\n```js\nfunction doSomething(a) {\n  function doSomethingElse(a) {\n    return a - 1;\n  }\n  var b;\n  b = a + doSomethingElse( a * 2 );\n  console.log( b * 3 );\n}\ndoSomething( 2 ); // 15\n```\n`b` 和 `doSomethingElse(..)` 对任何外界影响都是不可访问的，而是仅仅由 `doSomething(..)` 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。\n\n### 命名空间\n```js\nvar MyReallyCoolLibrary = {\n  awesome: \"stuff\",\n  doSomething: function() {},\n  doAnotherThing: function() {}\n};\n```\n\n### 匿名函数命名\n```js\nsetTimeout( function timeoutHandler(){\n  console.log( \"I waited 1 second!\" );\n}, 1000 );\n// ES6 箭头函数\nvar timeoutHandler = () => console.log( \"I waited 1 second!\" );\n```\n\n### IIFE\n```js\nvar a = 2;\n(function IIFE( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n})( window );\nconsole.log( a ); // 2\n```\nUMD模块\n```js\nvar a = 2;\n(function IIFE( def ){\n  def( window );\n})(function def( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n});\n```\n`def` 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 `def`）被传递给在代码段前半部分定义的 `IIFE` 函数。最后，参数 `def` （函数）被调用，并将 `window` 作为 `global` 参数传入。\n\n### 块级作用域\n- `With`\n- `try/catch`\n  ```js\n  try { throw 2 } catch(a) {\n    console.log( a ); // 2\n  }\n  console.log( a ); // ReferenceError\n  ```\n- `let`\n- `const`\n\n### 垃圾回收\n```js\n// bad\nfunction process(data) { .. }\nvar someReallyBigData = { .. };\nprocess( someReallyBigData );\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n\n// 优化\nfunction process(data) { ..}\n// 运行过后，任何定义在这个块中的东西都可以消失了\n{\n  let someReallyBigData = { .. };\n  process( someReallyBigData );\n}\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n```\n\n## 提升\n\n```js\n// 函数优先\nfoo(); // 1\nvar foo; // var 被抛弃\nfunction foo() {\n  console.log( 1 );\n}\nfoo = function() {\n  console.log( 2 );\n};\n\n// 函数声明覆盖\nfoo(); // 3\nfunction foo() {\n  console.log( 1 );\n}\nvar foo = function() {\n  console.log( 2 );\n};\nfunction foo() {\n  console.log( 3 );\n}\n```\n\n## 闭包\n```js\n// 错误 1\nfor (var i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i ); // 打印6个6\n  }, i*1000 );\n}\n// 错误 2\nfor (var i=1; i<=5; i++) {\n  (function(){\n    setTimeout( function timer(){\n      console.log( i );\n    }, i*1000 );\n  })();\n}\n// 正确\nfor (var i=1; i<=5; i++) {\n  (function(){\n    var j = i; // \b\bIIFE作用域内部变量\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })();\n}\n// 优雅\nfor (var i=1; i<=5; i++) {\n  (function(j){\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })( i ); // 传参方式\n}\n// ES6\nfor (let i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i );\n  }, i*1000 );\n}\n```\n\n### 基于闭包的模块\n```js\nfunction CoolModule() {\n  var something = \"cool\";\n  var another = [1, 2, 3];\n  function doSomething() {\n    console.log( something );\n  }\n  function doAnother() {\n    console.log( another.join( \" ! \" ) );\n  }\n  return {\n    doSomething: doSomething,\n    doAnother: doAnother\n  };\n}\nvar foo = CoolModule();\nfoo.doSomething(); // cool\nfoo.doAnother(); // 1 ! 2 ! 3\n```","source":"_posts/You-Dont-Know-JS-notes-part1.md","raw":"---\ntitle: 《你不知道的JS(上)》学习笔记 第一部分\ndate: 2018-05-24 11:08:28\ntags:\n  - js\ncategories:\n  - 前端\n---\n\n## 内建类型\n  - string\n  - nubmer\n  - boolean\n  - undefined\n  - object (包括null)\n  - symbol (ES6+)\n\n## 类型转换\n__Truthy&Falsy__\n  - `Boolean(NaN) === false`\n  - `Boolean([]) === true`\n  - `Boolean({}) === true`\n\n__等价__\n```js\nvar a = [1,2,3]\nvar b = [1,2,3]\nvar c = \"1,2,3\"\n\na == c // true\nb == c // true\na == b // false\n\n[1,2,3].toString() // \"1,2,3\"\n```\n__不等价__\n```js\nvar a = 42\nvar b = \"foo\"\n\na < b // false\na > b // false\na == b // false\n\nNumber(\"foo\") // NaN\n```\nNaN既不大于其他值，也不小于其他值\n\n<!-- more -->\n\n## 变量\n标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。\n\n## Strict模式\n使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。\n\n## 立即调用表达式IIFE\n```js\n(function IIFE(){\n  console.log( \"Hello!\" );\n})();\n// \"Hello!\"\n```\n\n## 闭包\n```js\nfunction makeAdder(x) {\n  function add(y) {\n    return y + x;\n  };\n  return add;\n}\nvar plusOne = makeAdder( 1 );\nplusOne( 3 ); // 4 <-- 1 + 3\n```\n\n## 模块\n模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。\n```js\nfunction User() {\n  var username;\n  var password;\n  function doLogin(user,pw) {\n    username = user;\n    password = pw;\n  }\n  var publicAPI = {\n    login: doLogin\n  };\n  return publicAPI;\n}\n// 创建实例\nvar fred = User();\nfred.login('jack', '123');\n```\n\n## this标识符\n```js\nfunction foo() {\n  console.log( this.bar );\n}\nvar bar = \"global\";\nvar obj1 = {\n  bar: \"obj1\",\n  foo: foo\n};\nvar obj2 = {\n  bar: \"obj2\"\n};\n\nfoo();            // \"global\"\nobj1.foo();       // \"obj1\"\nfoo.call( obj2 ); // \"obj2\"\nnew foo();        // undefined\n```\n  - `foo()`最终在*非strict*模式中将*this*设置为全局对象；在*strict*模式中*this*将会是`undefined`\n  - `obj1.foo()`将*this*设置为对象*obj1*\n  - `foo.call(obj2)`将*this*设置为对象*obj2*\n  - `new foo()`将*this*设置为一个新的空对象\n\n## 原型\n```js\nvar foo = {\n  a: 42\n};\n// 创建 `bar` 并将它链接到 `foo`\nvar bar = Object.create( foo );\nbar.b = \"hello world\";\nbar.b; // \"hello world\"\nbar.a; // 42 <-- 委托到 `foo`\n```\n## 作用域\n\nLHS查询 `var a`\nRHS查询 `a = 2`\n\n### 欺骗\n\n1. `eval`\n```js\nfunction foo(str, a) {\n  eval( str );\n  console.log( a, b );\n}\nvar b = 2;\nfoo( \"var b = 3;\", 1 ); // 1 3\n```\n2. `with`\n```js\nfunction foo(obj) {\n  with (obj) {\n    a = 2; // o2时，隐式 var a\n  }\n}\nvar o1 = { a: 3 };\nvar o2 = { b: 3 };\n\nfoo( o1 );\nconsole.log( o1.a ); // 2\nfoo( o2 );\nconsole.log( o2.a ); // undefined\nconsole.log( a ); // 2 泄漏到了全局作用域\n```\n\n### 性能\n`eval` 和 `with`都不建议使用，且受严格模式限制。\b引擎不会优化`eval` 和 `with`，使用多会卡。\n\n## 函数与块级作用域\n```js\nfunction doSomething(a) {\n  function doSomethingElse(a) {\n    return a - 1;\n  }\n  var b;\n  b = a + doSomethingElse( a * 2 );\n  console.log( b * 3 );\n}\ndoSomething( 2 ); // 15\n```\n`b` 和 `doSomethingElse(..)` 对任何外界影响都是不可访问的，而是仅仅由 `doSomething(..)` 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。\n\n### 命名空间\n```js\nvar MyReallyCoolLibrary = {\n  awesome: \"stuff\",\n  doSomething: function() {},\n  doAnotherThing: function() {}\n};\n```\n\n### 匿名函数命名\n```js\nsetTimeout( function timeoutHandler(){\n  console.log( \"I waited 1 second!\" );\n}, 1000 );\n// ES6 箭头函数\nvar timeoutHandler = () => console.log( \"I waited 1 second!\" );\n```\n\n### IIFE\n```js\nvar a = 2;\n(function IIFE( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n})( window );\nconsole.log( a ); // 2\n```\nUMD模块\n```js\nvar a = 2;\n(function IIFE( def ){\n  def( window );\n})(function def( global ){\n  var a = 3;\n  console.log( a ); // 3\n  console.log( global.a ); // 2\n});\n```\n`def` 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 `def`）被传递给在代码段前半部分定义的 `IIFE` 函数。最后，参数 `def` （函数）被调用，并将 `window` 作为 `global` 参数传入。\n\n### 块级作用域\n- `With`\n- `try/catch`\n  ```js\n  try { throw 2 } catch(a) {\n    console.log( a ); // 2\n  }\n  console.log( a ); // ReferenceError\n  ```\n- `let`\n- `const`\n\n### 垃圾回收\n```js\n// bad\nfunction process(data) { .. }\nvar someReallyBigData = { .. };\nprocess( someReallyBigData );\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n\n// 优化\nfunction process(data) { ..}\n// 运行过后，任何定义在这个块中的东西都可以消失了\n{\n  let someReallyBigData = { .. };\n  process( someReallyBigData );\n}\nvar btn = document.getElementById( \"my_button\" );\nbtn.addEventListener( \"click\", function click(evt){\n  console.log(\"button clicked\");\n}, /*capturingPhase=*/false );\n```\n\n## 提升\n\n```js\n// 函数优先\nfoo(); // 1\nvar foo; // var 被抛弃\nfunction foo() {\n  console.log( 1 );\n}\nfoo = function() {\n  console.log( 2 );\n};\n\n// 函数声明覆盖\nfoo(); // 3\nfunction foo() {\n  console.log( 1 );\n}\nvar foo = function() {\n  console.log( 2 );\n};\nfunction foo() {\n  console.log( 3 );\n}\n```\n\n## 闭包\n```js\n// 错误 1\nfor (var i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i ); // 打印6个6\n  }, i*1000 );\n}\n// 错误 2\nfor (var i=1; i<=5; i++) {\n  (function(){\n    setTimeout( function timer(){\n      console.log( i );\n    }, i*1000 );\n  })();\n}\n// 正确\nfor (var i=1; i<=5; i++) {\n  (function(){\n    var j = i; // \b\bIIFE作用域内部变量\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })();\n}\n// 优雅\nfor (var i=1; i<=5; i++) {\n  (function(j){\n    setTimeout( function timer(){\n      console.log( j );\n    }, j*1000 );\n  })( i ); // 传参方式\n}\n// ES6\nfor (let i=1; i<=5; i++) {\n  setTimeout( function timer(){\n    console.log( i );\n  }, i*1000 );\n}\n```\n\n### 基于闭包的模块\n```js\nfunction CoolModule() {\n  var something = \"cool\";\n  var another = [1, 2, 3];\n  function doSomething() {\n    console.log( something );\n  }\n  function doAnother() {\n    console.log( another.join( \" ! \" ) );\n  }\n  return {\n    doSomething: doSomething,\n    doAnother: doAnother\n  };\n}\nvar foo = CoolModule();\nfoo.doSomething(); // cool\nfoo.doAnother(); // 1 ! 2 ! 3\n```","slug":"You-Dont-Know-JS-notes-part1","published":1,"updated":"2018-06-13T00:44:31.203Z","_id":"cjice5yl30000wfra38p847jg","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"内建类型\"><a href=\"#内建类型\" class=\"headerlink\" title=\"内建类型\"></a>内建类型</h2><ul>\n<li>string</li>\n<li>nubmer</li>\n<li>boolean</li>\n<li>undefined</li>\n<li>object (包括null)</li>\n<li>symbol (ES6+)</li>\n</ul>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p><strong>Truthy&amp;Falsy</strong></p>\n<ul>\n<li><code>Boolean(NaN) === false</code></li>\n<li><code>Boolean([]) === true</code></li>\n<li><code>Boolean({}) === true</code></li>\n</ul>\n<p><strong>等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">\"1,2,3\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a == c <span class=\"comment\">// true</span></span><br><span class=\"line\">b == c <span class=\"comment\">// true</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].toString() <span class=\"comment\">// \"1,2,3\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>不等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">42</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">\"foo\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a &lt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a &gt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>(<span class=\"string\">\"foo\"</span>) <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure></p>\n<p>NaN既不大于其他值，也不小于其他值</p>\n<a id=\"more\"></a>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。</p>\n<h2 id=\"Strict模式\"><a href=\"#Strict模式\" class=\"headerlink\" title=\"Strict模式\"></a>Strict模式</h2><p>使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。</p>\n<h2 id=\"立即调用表达式IIFE\"><a href=\"#立即调用表达式IIFE\" class=\"headerlink\" title=\"立即调用表达式IIFE\"></a>立即调用表达式IIFE</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"Hello!\"</span> );</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"><span class=\"comment\">// \"Hello!\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAdder</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y + x;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> plusOne = makeAdder( <span class=\"number\">1</span> );</span><br><span class=\"line\">plusOne( <span class=\"number\">3</span> ); <span class=\"comment\">// 4 &lt;-- 1 + 3</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><p>模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">User</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> username;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> password;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doLogin</span>(<span class=\"params\">user,pw</span>) </span>&#123;</span><br><span class=\"line\">    username = user;</span><br><span class=\"line\">    password = pw;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> publicAPI = &#123;</span><br><span class=\"line\">    login: doLogin</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> publicAPI;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fred = User();</span><br><span class=\"line\">fred.login(<span class=\"string\">'jack'</span>, <span class=\"string\">'123'</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"this标识符\"><a href=\"#this标识符\" class=\"headerlink\" title=\"this标识符\"></a>this标识符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.bar );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"string\">\"global\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj1\"</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj2\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo();            <span class=\"comment\">// \"global\"</span></span><br><span class=\"line\">obj1.foo();       <span class=\"comment\">// \"obj1\"</span></span><br><span class=\"line\">foo.call( obj2 ); <span class=\"comment\">// \"obj2\"</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> foo();        <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>foo()</code>最终在<em>非strict</em>模式中将<em>this</em>设置为全局对象；在<em>strict</em>模式中<em>this</em>将会是<code>undefined</code></li>\n<li><code>obj1.foo()</code>将<em>this</em>设置为对象<em>obj1</em></li>\n<li><code>foo.call(obj2)</code>将<em>this</em>设置为对象<em>obj2</em></li>\n<li><code>new foo()</code>将<em>this</em>设置为一个新的空对象</li>\n</ul>\n<h2 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 创建 `bar` 并将它链接到 `foo`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"built_in\">Object</span>.create( foo );</span><br><span class=\"line\">bar.b = <span class=\"string\">\"hello world\"</span>;</span><br><span class=\"line\">bar.b; <span class=\"comment\">// \"hello world\"</span></span><br><span class=\"line\">bar.a; <span class=\"comment\">// 42 &lt;-- 委托到 `foo`</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>LHS查询 <code>var a</code><br>RHS查询 <code>a = 2</code></p>\n<h3 id=\"欺骗\"><a href=\"#欺骗\" class=\"headerlink\" title=\"欺骗\"></a>欺骗</h3><ol>\n<li><p><code>eval</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">str, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">eval</span>( str );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a, b );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo( <span class=\"string\">\"var b = 3;\"</span>, <span class=\"number\">1</span> ); <span class=\"comment\">// 1 3</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>with</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">with</span> (obj) &#123;</span><br><span class=\"line\">    a = <span class=\"number\">2</span>; <span class=\"comment\">// o2时，隐式 var a</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o1 = &#123; <span class=\"attr\">a</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2 = &#123; <span class=\"attr\">b</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo( o1 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o1.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">foo( o2 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o2.a ); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2 泄漏到了全局作用域</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h3><p><code>eval</code> 和 <code>with</code>都不建议使用，且受严格模式限制。\b引擎不会优化<code>eval</code> 和 <code>with</code>，使用多会卡。</p>\n<h2 id=\"函数与块级作用域\"><a href=\"#函数与块级作用域\" class=\"headerlink\" title=\"函数与块级作用域\"></a>函数与块级作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b;</span><br><span class=\"line\">  b = a + doSomethingElse( a * <span class=\"number\">2</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( b * <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">doSomething( <span class=\"number\">2</span> ); <span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<p><code>b</code> 和 <code>doSomethingElse(..)</code> 对任何外界影响都是不可访问的，而是仅仅由 <code>doSomething(..)</code> 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。</p>\n<h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyReallyCoolLibrary = &#123;</span><br><span class=\"line\">  awesome: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">  doSomething: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;,</span><br><span class=\"line\">  doAnotherThing: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"匿名函数命名\"><a href=\"#匿名函数命名\" class=\"headerlink\" title=\"匿名函数命名\"></a>匿名函数命名</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeoutHandler</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span> );</span><br><span class=\"line\"><span class=\"comment\">// ES6 箭头函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeoutHandler = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br></pre></td></tr></table></figure>\n<h3 id=\"IIFE\"><a href=\"#IIFE\" class=\"headerlink\" title=\"IIFE\"></a>IIFE</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)( <span class=\"built_in\">window</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>UMD模块<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> def </span>)</span>&#123;</span><br><span class=\"line\">  def( <span class=\"built_in\">window</span> );</span><br><span class=\"line\">&#125;)(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">def</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p><code>def</code> 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 <code>def</code>）被传递给在代码段前半部分定义的 <code>IIFE</code> 函数。最后，参数 <code>def</code> （函数）被调用，并将 <code>window</code> 作为 <code>global</code> 参数传入。</p>\n<h3 id=\"块级作用域\"><a href=\"#块级作用域\" class=\"headerlink\" title=\"块级作用域\"></a>块级作用域</h3><ul>\n<li><code>With</code></li>\n<li><p><code>try/catch</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123; <span class=\"keyword\">throw</span> <span class=\"number\">2</span> &#125; <span class=\"keyword\">catch</span>(a) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// ReferenceError</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>let</code></p>\n</li>\n<li><code>const</code></li>\n</ul>\n<h3 id=\"垃圾回收\"><a href=\"#垃圾回收\" class=\"headerlink\" title=\"垃圾回收\"></a>垃圾回收</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; .. &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">process( someReallyBigData );</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; ..&#125;</span><br><span class=\"line\"><span class=\"comment\">// 运行过后，任何定义在这个块中的东西都可以消失了</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">  process( someReallyBigData );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br></pre></td></tr></table></figure>\n<h2 id=\"提升\"><a href=\"#提升\" class=\"headerlink\" title=\"提升\"></a>提升</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数优先</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// var 被抛弃</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数声明覆盖</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包-1\"><a href=\"#闭包-1\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误 1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i ); <span class=\"comment\">// 打印6个6</span></span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 错误 2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">    &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> j = i; <span class=\"comment\">// \b\bIIFE作用域内部变量</span></span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 优雅</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">j</span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)( i ); <span class=\"comment\">// 传参方式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"基于闭包的模块\"><a href=\"#基于闭包的模块\" class=\"headerlink\" title=\"基于闭包的模块\"></a>基于闭包的模块</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CoolModule</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> something = <span class=\"string\">\"cool\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> another = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( something );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnother</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( another.join( <span class=\"string\">\" ! \"</span> ) );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    doSomething: doSomething,</span><br><span class=\"line\">    doAnother: doAnother</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = CoolModule();</span><br><span class=\"line\">foo.doSomething(); <span class=\"comment\">// cool</span></span><br><span class=\"line\">foo.doAnother(); <span class=\"comment\">// 1 ! 2 ! 3</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"内建类型\"><a href=\"#内建类型\" class=\"headerlink\" title=\"内建类型\"></a>内建类型</h2><ul>\n<li>string</li>\n<li>nubmer</li>\n<li>boolean</li>\n<li>undefined</li>\n<li>object (包括null)</li>\n<li>symbol (ES6+)</li>\n</ul>\n<h2 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h2><p><strong>Truthy&amp;Falsy</strong></p>\n<ul>\n<li><code>Boolean(NaN) === false</code></li>\n<li><code>Boolean([]) === true</code></li>\n<li><code>Boolean({}) === true</code></li>\n</ul>\n<p><strong>等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"string\">\"1,2,3\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a == c <span class=\"comment\">// true</span></span><br><span class=\"line\">b == c <span class=\"comment\">// true</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].toString() <span class=\"comment\">// \"1,2,3\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>不等价</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">42</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"string\">\"foo\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">a &lt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a &gt; b <span class=\"comment\">// false</span></span><br><span class=\"line\">a == b <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Number</span>(<span class=\"string\">\"foo\"</span>) <span class=\"comment\">// NaN</span></span><br></pre></td></tr></table></figure></p>\n<p>NaN既不大于其他值，也不小于其他值</p>","more":"<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>标识符必须以a-z，A-Z，$，或_开头。它可以包含任意这些字符外加数字0-9。</p>\n<h2 id=\"Strict模式\"><a href=\"#Strict模式\" class=\"headerlink\" title=\"Strict模式\"></a>Strict模式</h2><p>使代码符合一组更安全和更合理的指导方针，代码对引擎有更强的可优化性。</p>\n<h2 id=\"立即调用表达式IIFE\"><a href=\"#立即调用表达式IIFE\" class=\"headerlink\" title=\"立即调用表达式IIFE\"></a>立即调用表达式IIFE</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"Hello!\"</span> );</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"><span class=\"comment\">// \"Hello!\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包\"><a href=\"#闭包\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">makeAdder</span>(<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">y</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> y + x;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> add;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> plusOne = makeAdder( <span class=\"number\">1</span> );</span><br><span class=\"line\">plusOne( <span class=\"number\">3</span> ); <span class=\"comment\">// 4 &lt;-- 1 + 3</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"模块\"><a href=\"#模块\" class=\"headerlink\" title=\"模块\"></a>模块</h2><p>模块让你定义对外面世界不可见的私有实现细节（变量，函数），和对外面可访问的公有API。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">User</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> username;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> password;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doLogin</span>(<span class=\"params\">user,pw</span>) </span>&#123;</span><br><span class=\"line\">    username = user;</span><br><span class=\"line\">    password = pw;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> publicAPI = &#123;</span><br><span class=\"line\">    login: doLogin</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> publicAPI;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> fred = User();</span><br><span class=\"line\">fred.login(<span class=\"string\">'jack'</span>, <span class=\"string\">'123'</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"this标识符\"><a href=\"#this标识符\" class=\"headerlink\" title=\"this标识符\"></a>this标识符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.bar );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"string\">\"global\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj1\"</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  bar: <span class=\"string\">\"obj2\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo();            <span class=\"comment\">// \"global\"</span></span><br><span class=\"line\">obj1.foo();       <span class=\"comment\">// \"obj1\"</span></span><br><span class=\"line\">foo.call( obj2 ); <span class=\"comment\">// \"obj2\"</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> foo();        <span class=\"comment\">// undefined</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>foo()</code>最终在<em>非strict</em>模式中将<em>this</em>设置为全局对象；在<em>strict</em>模式中<em>this</em>将会是<code>undefined</code></li>\n<li><code>obj1.foo()</code>将<em>this</em>设置为对象<em>obj1</em></li>\n<li><code>foo.call(obj2)</code>将<em>this</em>设置为对象<em>obj2</em></li>\n<li><code>new foo()</code>将<em>this</em>设置为一个新的空对象</li>\n</ul>\n<h2 id=\"原型\"><a href=\"#原型\" class=\"headerlink\" title=\"原型\"></a>原型</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 创建 `bar` 并将它链接到 `foo`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"built_in\">Object</span>.create( foo );</span><br><span class=\"line\">bar.b = <span class=\"string\">\"hello world\"</span>;</span><br><span class=\"line\">bar.b; <span class=\"comment\">// \"hello world\"</span></span><br><span class=\"line\">bar.a; <span class=\"comment\">// 42 &lt;-- 委托到 `foo`</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"作用域\"><a href=\"#作用域\" class=\"headerlink\" title=\"作用域\"></a>作用域</h2><p>LHS查询 <code>var a</code><br>RHS查询 <code>a = 2</code></p>\n<h3 id=\"欺骗\"><a href=\"#欺骗\" class=\"headerlink\" title=\"欺骗\"></a>欺骗</h3><ol>\n<li><p><code>eval</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">str, a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">eval</span>( str );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a, b );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo( <span class=\"string\">\"var b = 3;\"</span>, <span class=\"number\">1</span> ); <span class=\"comment\">// 1 3</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>with</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">with</span> (obj) &#123;</span><br><span class=\"line\">    a = <span class=\"number\">2</span>; <span class=\"comment\">// o2时，隐式 var a</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o1 = &#123; <span class=\"attr\">a</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2 = &#123; <span class=\"attr\">b</span>: <span class=\"number\">3</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo( o1 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o1.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">foo( o2 );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( o2.a ); <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2 泄漏到了全局作用域</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h3><p><code>eval</code> 和 <code>with</code>都不建议使用，且受严格模式限制。\b引擎不会优化<code>eval</code> 和 <code>with</code>，使用多会卡。</p>\n<h2 id=\"函数与块级作用域\"><a href=\"#函数与块级作用域\" class=\"headerlink\" title=\"函数与块级作用域\"></a>函数与块级作用域</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomethingElse</span>(<span class=\"params\">a</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b;</span><br><span class=\"line\">  b = a + doSomethingElse( a * <span class=\"number\">2</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( b * <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">doSomething( <span class=\"number\">2</span> ); <span class=\"comment\">// 15</span></span><br></pre></td></tr></table></figure>\n<p><code>b</code> 和 <code>doSomethingElse(..)</code> 对任何外界影响都是不可访问的，而是仅仅由 <code>doSomething(..)</code> 控制。它的功能和最终结果不受影响，但是这种设计将私有细节保持为私有的，这通常被认为是好的软件。</p>\n<h3 id=\"命名空间\"><a href=\"#命名空间\" class=\"headerlink\" title=\"命名空间\"></a>命名空间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyReallyCoolLibrary = &#123;</span><br><span class=\"line\">  awesome: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">  doSomething: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;,</span><br><span class=\"line\">  doAnotherThing: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"匿名函数命名\"><a href=\"#匿名函数命名\" class=\"headerlink\" title=\"匿名函数命名\"></a>匿名函数命名</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timeoutHandler</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br><span class=\"line\">&#125;, <span class=\"number\">1000</span> );</span><br><span class=\"line\"><span class=\"comment\">// ES6 箭头函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeoutHandler = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.log( <span class=\"string\">\"I waited 1 second!\"</span> );</span><br></pre></td></tr></table></figure>\n<h3 id=\"IIFE\"><a href=\"#IIFE\" class=\"headerlink\" title=\"IIFE\"></a>IIFE</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)( <span class=\"built_in\">window</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>UMD模块<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"> def </span>)</span>&#123;</span><br><span class=\"line\">  def( <span class=\"built_in\">window</span> );</span><br><span class=\"line\">&#125;)(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">def</span>(<span class=\"params\"> global </span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 3</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( global.a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p><code>def</code> 函数表达式在这个代码段的后半部分被定义，然后作为一个参数（也叫 <code>def</code>）被传递给在代码段前半部分定义的 <code>IIFE</code> 函数。最后，参数 <code>def</code> （函数）被调用，并将 <code>window</code> 作为 <code>global</code> 参数传入。</p>\n<h3 id=\"块级作用域\"><a href=\"#块级作用域\" class=\"headerlink\" title=\"块级作用域\"></a>块级作用域</h3><ul>\n<li><code>With</code></li>\n<li><p><code>try/catch</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123; <span class=\"keyword\">throw</span> <span class=\"number\">2</span> &#125; <span class=\"keyword\">catch</span>(a) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( a ); <span class=\"comment\">// ReferenceError</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>let</code></p>\n</li>\n<li><code>const</code></li>\n</ul>\n<h3 id=\"垃圾回收\"><a href=\"#垃圾回收\" class=\"headerlink\" title=\"垃圾回收\"></a>垃圾回收</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; .. &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">process( someReallyBigData );</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 优化</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">process</span>(<span class=\"params\">data</span>) </span>&#123; ..&#125;</span><br><span class=\"line\"><span class=\"comment\">// 运行过后，任何定义在这个块中的东西都可以消失了</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> someReallyBigData = &#123; .. &#125;;</span><br><span class=\"line\">  process( someReallyBigData );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById( <span class=\"string\">\"my_button\"</span> );</span><br><span class=\"line\">btn.addEventListener( <span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">click</span>(<span class=\"params\">evt</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">\"button clicked\"</span>);</span><br><span class=\"line\">&#125;, <span class=\"comment\">/*capturingPhase=*/</span><span class=\"literal\">false</span> );</span><br></pre></td></tr></table></figure>\n<h2 id=\"提升\"><a href=\"#提升\" class=\"headerlink\" title=\"提升\"></a>提升</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 函数优先</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// var 被抛弃</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数声明覆盖</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">1</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">2</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"number\">3</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"闭包-1\"><a href=\"#闭包-1\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 错误 1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i ); <span class=\"comment\">// 打印6个6</span></span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 错误 2</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">    &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 正确</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> j = i; <span class=\"comment\">// \b\bIIFE作用域内部变量</span></span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 优雅</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">j</span>)</span>&#123;</span><br><span class=\"line\">    setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log( j );</span><br><span class=\"line\">    &#125;, j*<span class=\"number\">1000</span> );</span><br><span class=\"line\">  &#125;)( i ); <span class=\"comment\">// 传参方式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout( <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i );</span><br><span class=\"line\">  &#125;, i*<span class=\"number\">1000</span> );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"基于闭包的模块\"><a href=\"#基于闭包的模块\" class=\"headerlink\" title=\"基于闭包的模块\"></a>基于闭包的模块</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CoolModule</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> something = <span class=\"string\">\"cool\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> another = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSomething</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( something );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnother</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( another.join( <span class=\"string\">\" ! \"</span> ) );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    doSomething: doSomething,</span><br><span class=\"line\">    doAnother: doAnother</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = CoolModule();</span><br><span class=\"line\">foo.doSomething(); <span class=\"comment\">// cool</span></span><br><span class=\"line\">foo.doAnother(); <span class=\"comment\">// 1 ! 2 ! 3</span></span><br></pre></td></tr></table></figure>"},{"title":"brew upgrade 升级把我的node环境给搞坏了","date":"2018-06-07T07:33:21.000Z","_content":"起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是`brew update`，哦哟！确实好多可以升级的。随即开上代理并`brew upgrade`，一阵升级好痛快！\n\n升级完毕，愉快得打开vscode并`yarn dev`，报错了...\n\nvscode 终端每次加载都会提示`nvm is not compatible with the npm config \"prefix\" option: currently set to \"/usr/local\"`\n\n<!-- more -->\n\n`nvm ls`指向`system`即最新稳定版10.4.0（brew刚升级的）`nvm use 8.11.2`，重启vscode，还是指向`system`\n\n排查，各种google、stackoverflow查，各种改`.bash_profile`、`.zshrc`配置，还是没用。\n\n后来一想，一定是brew导致的！\n\n> 修复过程\n- brew 卸载新版 yarn、node\n- 重新无依赖安装yarn `brew install yarn --without-node`\n- nvm重新指向 `nvm use 8.11.2`\n- 重启vscode\n\n>扩展阅读\n`brew update` 屏蔽指定软件 `brew pin <formula>`\n取消屏蔽 `brew unpin <formula>`\n","source":"_posts/brew-upgrade-break-nvm.md","raw":"---\ntitle: brew upgrade 升级把我的node环境给搞坏了\ndate: 2018-06-07 15:33:21\ntags:\n  - node\n  - nvm\n  - homebrew\ncategories:\n  - 前端\n---\n起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是`brew update`，哦哟！确实好多可以升级的。随即开上代理并`brew upgrade`，一阵升级好痛快！\n\n升级完毕，愉快得打开vscode并`yarn dev`，报错了...\n\nvscode 终端每次加载都会提示`nvm is not compatible with the npm config \"prefix\" option: currently set to \"/usr/local\"`\n\n<!-- more -->\n\n`nvm ls`指向`system`即最新稳定版10.4.0（brew刚升级的）`nvm use 8.11.2`，重启vscode，还是指向`system`\n\n排查，各种google、stackoverflow查，各种改`.bash_profile`、`.zshrc`配置，还是没用。\n\n后来一想，一定是brew导致的！\n\n> 修复过程\n- brew 卸载新版 yarn、node\n- 重新无依赖安装yarn `brew install yarn --without-node`\n- nvm重新指向 `nvm use 8.11.2`\n- 重启vscode\n\n>扩展阅读\n`brew update` 屏蔽指定软件 `brew pin <formula>`\n取消屏蔽 `brew unpin <formula>`\n","slug":"brew-upgrade-break-nvm","published":1,"updated":"2018-06-13T00:44:21.892Z","_id":"cjice5yl70002wfrad5weky8b","comments":1,"layout":"post","photos":[],"link":"","content":"<p>起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是<code>brew update</code>，哦哟！确实好多可以升级的。随即开上代理并<code>brew upgrade</code>，一阵升级好痛快！</p>\n<p>升级完毕，愉快得打开vscode并<code>yarn dev</code>，报错了…</p>\n<p>vscode 终端每次加载都会提示<code>nvm is not compatible with the npm config &quot;prefix&quot; option: currently set to &quot;/usr/local&quot;</code></p>\n<a id=\"more\"></a>\n<p><code>nvm ls</code>指向<code>system</code>即最新稳定版10.4.0（brew刚升级的）<code>nvm use 8.11.2</code>，重启vscode，还是指向<code>system</code></p>\n<p>排查，各种google、stackoverflow查，各种改<code>.bash_profile</code>、<code>.zshrc</code>配置，还是没用。</p>\n<p>后来一想，一定是brew导致的！</p>\n<blockquote>\n<p>修复过程</p>\n<ul>\n<li>brew 卸载新版 yarn、node</li>\n<li>重新无依赖安装yarn <code>brew install yarn --without-node</code></li>\n<li>nvm重新指向 <code>nvm use 8.11.2</code></li>\n<li>重启vscode</li>\n</ul>\n<p>扩展阅读<br><code>brew update</code> 屏蔽指定软件 <code>brew pin &lt;formula&gt;</code><br>取消屏蔽 <code>brew unpin &lt;formula&gt;</code></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>起因：sourcetree 提示升级，点了 update，可惜公司网络太挫升级不了。脑抽想到brew好久没更新了，于是<code>brew update</code>，哦哟！确实好多可以升级的。随即开上代理并<code>brew upgrade</code>，一阵升级好痛快！</p>\n<p>升级完毕，愉快得打开vscode并<code>yarn dev</code>，报错了…</p>\n<p>vscode 终端每次加载都会提示<code>nvm is not compatible with the npm config &quot;prefix&quot; option: currently set to &quot;/usr/local&quot;</code></p>","more":"<p><code>nvm ls</code>指向<code>system</code>即最新稳定版10.4.0（brew刚升级的）<code>nvm use 8.11.2</code>，重启vscode，还是指向<code>system</code></p>\n<p>排查，各种google、stackoverflow查，各种改<code>.bash_profile</code>、<code>.zshrc</code>配置，还是没用。</p>\n<p>后来一想，一定是brew导致的！</p>\n<blockquote>\n<p>修复过程</p>\n<ul>\n<li>brew 卸载新版 yarn、node</li>\n<li>重新无依赖安装yarn <code>brew install yarn --without-node</code></li>\n<li>nvm重新指向 <code>nvm use 8.11.2</code></li>\n<li>重启vscode</li>\n</ul>\n<p>扩展阅读<br><code>brew update</code> 屏蔽指定软件 <code>brew pin &lt;formula&gt;</code><br>取消屏蔽 <code>brew unpin &lt;formula&gt;</code></p>\n</blockquote>"},{"title":"为Bootstrap忽略sublimelinter htmltidy的空标签提示","date":"2015-08-03T02:46:05.000Z","_content":"找到Sublimelinter的对应配置（Windows），`Preferences > Package Settings > SublimeLinter > Settings User`，针对htmltidy添加设置：\n\n```json\n\"htmltidy\": {\n  \"ignore_match\": [\"trimming empty <span>\"]\n}\n```\n\n添加以上设置后，用Bootstrap的时候就不会提示空`<span>`了\n","source":"_posts/Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy.md","raw":"---\ntitle: '为Bootstrap忽略sublimelinter htmltidy的空标签提示'\ndate: 2015-08-03 10:46:05\ntags:\n  - sublime\ncategories:\n  - 其他\n---\n找到Sublimelinter的对应配置（Windows），`Preferences > Package Settings > SublimeLinter > Settings User`，针对htmltidy添加设置：\n\n```json\n\"htmltidy\": {\n  \"ignore_match\": [\"trimming empty <span>\"]\n}\n```\n\n添加以上设置后，用Bootstrap的时候就不会提示空`<span>`了\n","slug":"Ignore-empty-tag-waring-for-Bootstrap-from-sublimelinter-and-htmltidy","published":1,"updated":"2018-01-10T02:44:56.749Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5yld0006wfranby03oi0","content":"<p>找到Sublimelinter的对应配置（Windows），<code>Preferences &gt; Package Settings &gt; SublimeLinter &gt; Settings User</code>，针对htmltidy添加设置：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"htmltidy\": &#123;</span><br><span class=\"line\">  \"ignore_match\": [\"trimming empty &lt;span&gt;\"]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>添加以上设置后，用Bootstrap的时候就不会提示空<code>&lt;span&gt;</code>了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>找到Sublimelinter的对应配置（Windows），<code>Preferences &gt; Package Settings &gt; SublimeLinter &gt; Settings User</code>，针对htmltidy添加设置：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"htmltidy\": &#123;</span><br><span class=\"line\">  \"ignore_match\": [\"trimming empty &lt;span&gt;\"]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>添加以上设置后，用Bootstrap的时候就不会提示空<code>&lt;span&gt;</code>了</p>\n"},{"title":"CI Session regenerate Issue with xampp on OSX","date":"2014-07-21T05:28:21.000Z","_content":"最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<!-- more -->\n问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。\n经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：\n`$config['sess_encrypt_cookie'] = FALSE;`\n居然OK了～\n也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。\n记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。\n","source":"_posts/ci-session-issue-with-xampp-on-osx.md","raw":"---\ntitle: 'CI Session regenerate Issue with xampp on OSX'\ndate: 2014-07-21 13:28:21\ntags:\n  - PHP\ncategories:\n  - 后端\n---\n最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<!-- more -->\n问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。\n经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：\n`$config['sess_encrypt_cookie'] = FALSE;`\n居然OK了～\n也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。\n记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。\n","slug":"ci-session-issue-with-xampp-on-osx","published":1,"updated":"2018-01-10T02:45:03.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylf0007wfragf2sb1r1","content":"<p>最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。<a id=\"more\"></a><br>问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。<br>经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：<br><code>$config[&#39;sess_encrypt_cookie&#39;] = FALSE;</code><br>居然OK了～<br>也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。<br>记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。</p>\n","site":{"data":{}},"excerpt":"<p>最近赶一个项目，前后端都包了，还久没写PHP了，再一次扮演全栈码农。由于项目冲突了，时间很急，所以加班到半夜，回去还继续写。由于家里是macbook，平时有用xampp，但是一直都没有涉及到Session，所以都没有碰到此问题。Session的设置参考的官网文档的，存在db中。","more":"<br>问题就是每次刷新页面，session就是会新生成一个，所以永远都拿不到之前一步保存的数据。<br>经过Google再Google之后，碰到一个有类似问题的老外，就照着改了下配置：<br><code>$config[&#39;sess_encrypt_cookie&#39;] = FALSE;</code><br>居然OK了～<br>也不知道是啥原理导致的，记得之前玩Laravel的时候没碰到过这个问题的。<br>记录下，有空回头看看到底是CI的bug，还是xampp的配置bug。</p>"},{"title":"CSS 笔记","date":"2014-05-15T08:59:12.000Z","_content":"> last update: 2018-01-10\n\n主要记录一些平时很少用到，但可能会忘记的点。\n\n## fastclick导致单选按钮需要点击两次\n\n```css\nlabel > * {\n  pointer-events: none;\n}\n```\n\n## 定义选中样式\n\n如：\n\n```css\n::selection {color:#09c;}\n```\n\n<!-- more -->\n\n## 移动端开发字体设置\n\n```css\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n```\n\n## div文字垂直居中\n\n```html\n<div>我要垂直居中！</div>\n```\n\n```css\ndiv { height: 100px; display: table-cell; vertical-align: middle; }\n```\n\n\n## 用CSS做三角形\n\n```html\n<div></div>\n```\n\n```css\ndiv { height: 0; width: 0; margin-bottom: 1em; }\n```\n\n向上的：\n\n```css\nborder-left: 5px solid transparent;\nborder-right: 5px solid transparent;å\nborder-bottom: 5px solid #09c;\n```\n\n等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：\n\n```css\nborder-bottom: 9px solid #09c;\n```\n\n## 用box-shadow做纸张层叠效果\n\n[jsFiddle地址](http://jsfiddle.net/66beta/ad4HG/)\n{% jsfiddle ad4HG html,css,result %}\n\n## 清除ios原生控件样式与点击时闪现的透明层\n\n```css\n* {\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n```","source":"_posts/css-notes.md","raw":"---\ntitle: CSS 笔记\ndate: 2014-05-15 16:59:12\ntags:\n  - css\ncategories:\n  - 前端\n---\n> last update: 2018-01-10\n\n主要记录一些平时很少用到，但可能会忘记的点。\n\n## fastclick导致单选按钮需要点击两次\n\n```css\nlabel > * {\n  pointer-events: none;\n}\n```\n\n## 定义选中样式\n\n如：\n\n```css\n::selection {color:#09c;}\n```\n\n<!-- more -->\n\n## 移动端开发字体设置\n\n```css\nfont-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n```\n\n## div文字垂直居中\n\n```html\n<div>我要垂直居中！</div>\n```\n\n```css\ndiv { height: 100px; display: table-cell; vertical-align: middle; }\n```\n\n\n## 用CSS做三角形\n\n```html\n<div></div>\n```\n\n```css\ndiv { height: 0; width: 0; margin-bottom: 1em; }\n```\n\n向上的：\n\n```css\nborder-left: 5px solid transparent;\nborder-right: 5px solid transparent;å\nborder-bottom: 5px solid #09c;\n```\n\n等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：\n\n```css\nborder-bottom: 9px solid #09c;\n```\n\n## 用box-shadow做纸张层叠效果\n\n[jsFiddle地址](http://jsfiddle.net/66beta/ad4HG/)\n{% jsfiddle ad4HG html,css,result %}\n\n## 清除ios原生控件样式与点击时闪现的透明层\n\n```css\n* {\n  -webkit-appearance: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n```","slug":"css-notes","published":1,"updated":"2018-01-10T06:58:52.981Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylg0008wfra1k5sq622","content":"<blockquote>\n<p>last update: 2018-01-10</p>\n</blockquote>\n<p>主要记录一些平时很少用到，但可能会忘记的点。</p>\n<h2 id=\"fastclick导致单选按钮需要点击两次\"><a href=\"#fastclick导致单选按钮需要点击两次\" class=\"headerlink\" title=\"fastclick导致单选按钮需要点击两次\"></a>fastclick导致单选按钮需要点击两次</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">label</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">pointer-events</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"定义选中样式\"><a href=\"#定义选中样式\" class=\"headerlink\" title=\"定义选中样式\"></a>定义选中样式</h2><p>如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">::selection</span> &#123;<span class=\"attribute\">color</span>:<span class=\"number\">#09c</span>;&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"移动端开发字体设置\"><a href=\"#移动端开发字体设置\" class=\"headerlink\" title=\"移动端开发字体设置\"></a>移动端开发字体设置</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';</span><br></pre></td></tr></table></figure>\n<h2 id=\"div文字垂直居中\"><a href=\"#div文字垂直居中\" class=\"headerlink\" title=\"div文字垂直居中\"></a>div文字垂直居中</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我要垂直居中！<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">display</span>: table-cell; <span class=\"attribute\">vertical-align</span>: middle; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用CSS做三角形\"><a href=\"#用CSS做三角形\" class=\"headerlink\" title=\"用CSS做三角形\"></a>用CSS做三角形</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">1em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>向上的：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-left</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">border-right</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;å</span><br><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<p>等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 9<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用box-shadow做纸张层叠效果\"><a href=\"#用box-shadow做纸张层叠效果\" class=\"headerlink\" title=\"用box-shadow做纸张层叠效果\"></a>用box-shadow做纸张层叠效果</h2><p><a href=\"http://jsfiddle.net/66beta/ad4HG/\" target=\"_blank\" rel=\"noopener\">jsFiddle地址</a><br><iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ad4HG/embedded/html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe></p>\n<h2 id=\"清除ios原生控件样式与点击时闪现的透明层\"><a href=\"#清除ios原生控件样式与点击时闪现的透明层\" class=\"headerlink\" title=\"清除ios原生控件样式与点击时闪现的透明层\"></a>清除ios原生控件样式与点击时闪现的透明层</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-appearance</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-tap-highlight-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote>\n<p>last update: 2018-01-10</p>\n</blockquote>\n<p>主要记录一些平时很少用到，但可能会忘记的点。</p>\n<h2 id=\"fastclick导致单选按钮需要点击两次\"><a href=\"#fastclick导致单选按钮需要点击两次\" class=\"headerlink\" title=\"fastclick导致单选按钮需要点击两次\"></a>fastclick导致单选按钮需要点击两次</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">label</span> &gt; * &#123;</span><br><span class=\"line\">  <span class=\"attribute\">pointer-events</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"定义选中样式\"><a href=\"#定义选中样式\" class=\"headerlink\" title=\"定义选中样式\"></a>定义选中样式</h2><p>如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">::selection</span> &#123;<span class=\"attribute\">color</span>:<span class=\"number\">#09c</span>;&#125;</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"移动端开发字体设置\"><a href=\"#移动端开发字体设置\" class=\"headerlink\" title=\"移动端开发字体设置\"></a>移动端开发字体设置</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';</span><br></pre></td></tr></table></figure>\n<h2 id=\"div文字垂直居中\"><a href=\"#div文字垂直居中\" class=\"headerlink\" title=\"div文字垂直居中\"></a>div文字垂直居中</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>我要垂直居中！<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">display</span>: table-cell; <span class=\"attribute\">vertical-align</span>: middle; &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用CSS做三角形\"><a href=\"#用CSS做三角形\" class=\"headerlink\" title=\"用CSS做三角形\"></a>用CSS做三角形</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">height</span>: <span class=\"number\">0</span>; <span class=\"attribute\">width</span>: <span class=\"number\">0</span>; <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">1em</span>; &#125;</span><br></pre></td></tr></table></figure>\n<p>向上的：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-left</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">border-right</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-tag\">transparent</span>;å</span><br><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 5<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<p>等边三角形，需要计算底边宽度（左边宽+右边宽*0.866=8.66）：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">border-bottom</span>: 9<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#09c</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"用box-shadow做纸张层叠效果\"><a href=\"#用box-shadow做纸张层叠效果\" class=\"headerlink\" title=\"用box-shadow做纸张层叠效果\"></a>用box-shadow做纸张层叠效果</h2><p><a href=\"http://jsfiddle.net/66beta/ad4HG/\" target=\"_blank\" rel=\"noopener\">jsFiddle地址</a><br><iframe scrolling=\"no\" width=\"100%\" height=\"300\" src=\"//jsfiddle.net/ad4HG/embedded/html,css,result/light\" frameborder=\"0\" allowfullscreen></iframe></p>\n<h2 id=\"清除ios原生控件样式与点击时闪现的透明层\"><a href=\"#清除ios原生控件样式与点击时闪现的透明层\" class=\"headerlink\" title=\"清除ios原生控件样式与点击时闪现的透明层\"></a>清除ios原生控件样式与点击时闪现的透明层</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-appearance</span>: none;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-tap-highlight-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"如何在Linux终端中删除中文文件夹","date":"2014-08-11T07:42:02.000Z","_content":"为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。<!-- more -->\n后来Google了下，找到了解决办法，记录下，有备无患～\n\n1. 列出当前目录下文件(夹)的节点号。\n\n    `ls -i`\n\n1. 看到要删除的文件夹的节点号，比如123456，利用节点号删除\n\n`find ./ -inum 123456 -print -exec rm {} -rf \\;`\n\n其实不只是中文文件夹，乱码的也是同理。\n","source":"_posts/delete-a-chinese-foler-from-linux-command-line.md","raw":"---\ntitle: 如何在Linux终端中删除中文文件夹\ndate: 2014-08-11 15:42:02\ntags:\n  - linux\ncategories:\n  - 其他\n---\n为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。<!-- more -->\n后来Google了下，找到了解决办法，记录下，有备无患～\n\n1. 列出当前目录下文件(夹)的节点号。\n\n    `ls -i`\n\n1. 看到要删除的文件夹的节点号，比如123456，利用节点号删除\n\n`find ./ -inum 123456 -print -exec rm {} -rf \\;`\n\n其实不只是中文文件夹，乱码的也是同理。\n","slug":"delete-a-chinese-foler-from-linux-command-line","published":1,"updated":"2018-01-10T02:45:19.037Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylj000cwfraujcunjnx","content":"<p>为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。<a id=\"more\"></a><br>后来Google了下，找到了解决办法，记录下，有备无患～</p>\n<ol>\n<li><p>列出当前目录下文件(夹)的节点号。</p>\n<p> <code>ls -i</code></p>\n</li>\n<li><p>看到要删除的文件夹的节点号，比如123456，利用节点号删除</p>\n</li>\n</ol>\n<p><code>find ./ -inum 123456 -print -exec rm {} -rf \\;</code></p>\n<p>其实不只是中文文件夹，乱码的也是同理。</p>\n","site":{"data":{}},"excerpt":"<p>为了方便，在Windows下直接复制了一个文件夹，系统默认为“ABC - 副本”。没太在意，给就丢到Linux服务器上去了。结果在终端里，连名字都是显示不了，更不要说用rm删除了。","more":"<br>后来Google了下，找到了解决办法，记录下，有备无患～</p>\n<ol>\n<li><p>列出当前目录下文件(夹)的节点号。</p>\n<p> <code>ls -i</code></p>\n</li>\n<li><p>看到要删除的文件夹的节点号，比如123456，利用节点号删除</p>\n</li>\n</ol>\n<p><code>find ./ -inum 123456 -print -exec rm {} -rf \\;</code></p>\n<p>其实不只是中文文件夹，乱码的也是同理。</p>"},{"title":"如何在Github上删除commit","date":"2014-08-11T07:30:08.000Z","_content":"自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。<!-- more -->\n想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。\n\n## 在git/Github中删除commit的命令\n\n```bash\ngit reset --hard <commit_id>\ngit push origin HEAD --force\n```\n\n**git reset –hard** 彻底回退到某个版本\n**<commit_id>** 长长的SHA1值\n**HEAD** 最近一个提交\n需要在命令行中执行，Github客户端没有这个功能。\n","source":"_posts/delete-commits-from-github.md","raw":"---\ntitle: 如何在Github上删除commit\ndate: 2014-08-11 15:30:08\ntags:\n  - git\ncategories:\n  - 其他\n---\n自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。<!-- more -->\n想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。\n\n## 在git/Github中删除commit的命令\n\n```bash\ngit reset --hard <commit_id>\ngit push origin HEAD --force\n```\n\n**git reset –hard** 彻底回退到某个版本\n**<commit_id>** 长长的SHA1值\n**HEAD** 最近一个提交\n需要在命令行中执行，Github客户端没有这个功能。\n","slug":"delete-commits-from-github","published":1,"updated":"2018-01-10T02:45:32.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5yll000dwfraef6jcjk9","content":"<p>自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。<a id=\"more\"></a><br>想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。</p>\n<h2 id=\"在git-Github中删除commit的命令\"><a href=\"#在git-Github中删除commit的命令\" class=\"headerlink\" title=\"在git/Github中删除commit的命令\"></a>在git/Github中删除commit的命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit_id&gt;</span><br><span class=\"line\">git push origin HEAD --force</span><br></pre></td></tr></table></figure>\n<p><strong>git reset –hard</strong> 彻底回退到某个版本<br><strong><commit_id></commit_id></strong> 长长的SHA1值<br><strong>HEAD</strong> 最近一个提交<br>需要在命令行中执行，Github客户端没有这个功能。</p>\n","site":{"data":{}},"excerpt":"<p>自己写项目，放在Github上，在PC和MAC间同步，可是在MAC上同步一不小心就会出问题，这个应该是Github的MAC客户端有问题。昨天就不小心给同步坏了，本来就感冒了，身心一下了疲惫了。试过Revert到之前一个commit，但是删掉的依然没有找回。","more":"<br>想来也只能删掉这两个commit（原commit及其Revert）了。正好记录下，下次可能还用得上。</p>\n<h2 id=\"在git-Github中删除commit的命令\"><a href=\"#在git-Github中删除commit的命令\" class=\"headerlink\" title=\"在git/Github中删除commit的命令\"></a>在git/Github中删除commit的命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;commit_id&gt;</span><br><span class=\"line\">git push origin HEAD --force</span><br></pre></td></tr></table></figure>\n<p><strong>git reset –hard</strong> 彻底回退到某个版本<br><strong><commit_id></commit_id></strong> 长长的SHA1值<br><strong>HEAD</strong> 最近一个提交<br>需要在命令行中执行，Github客户端没有这个功能。</p>"},{"title":"Chrome中启用第三方扩展","date":"2014-06-10T09:52:12.000Z","_content":"Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。\n乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。\n但是类似**Youtube Center**之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？\n\n## \"Challenge except\"\n\n感谢的userscripts.org社区，催生了<!-- more -->**[Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo)**这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！\n\n## 进入主题\n\n到Chrome应用商店安装**Tampermonkey**，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是`https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js`，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。\n于是，被Chrome禁用的扩展，又复活了。\n![Install Youtube Center on Tampermonkey](/public/tampermonkey.png)\n\n## 担心\n\n万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～\n","source":"_posts/enable-third-party-extensions-on-chrome.md","raw":"---\ntitle: Chrome中启用第三方扩展\ndate: 2014-06-10 17:52:12\ntags:\n  - chrome\ncategories:\n  - 其他\n---\nGoogle发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。\n乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。\n但是类似**Youtube Center**之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？\n\n## \"Challenge except\"\n\n感谢的userscripts.org社区，催生了<!-- more -->**[Tampermonkey](https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo)**这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！\n\n## 进入主题\n\n到Chrome应用商店安装**Tampermonkey**，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是`https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js`，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。\n于是，被Chrome禁用的扩展，又复活了。\n![Install Youtube Center on Tampermonkey](/public/tampermonkey.png)\n\n## 担心\n\n万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～\n","slug":"enable-third-party-extensions-on-chrome","published":1,"updated":"2018-01-10T02:45:37.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5yln000hwfracqjfgm82","content":"<p>Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。<br>乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。<br>但是类似<strong>Youtube Center</strong>之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？</p>\n<h2 id=\"“Challenge-except”\"><a href=\"#“Challenge-except”\" class=\"headerlink\" title=\"“Challenge except”\"></a>“Challenge except”</h2><p>感谢的userscripts.org社区，催生了<a id=\"more\"></a><strong><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" target=\"_blank\" rel=\"noopener\">Tampermonkey</a></strong>这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！</p>\n<h2 id=\"进入主题\"><a href=\"#进入主题\" class=\"headerlink\" title=\"进入主题\"></a>进入主题</h2><p>到Chrome应用商店安装<strong>Tampermonkey</strong>，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是<code>https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js</code>，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。<br>于是，被Chrome禁用的扩展，又复活了。<br><img src=\"/public/tampermonkey.png\" alt=\"Install Youtube Center on Tampermonkey\"></p>\n<h2 id=\"担心\"><a href=\"#担心\" class=\"headerlink\" title=\"担心\"></a>担心</h2><p>万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～</p>\n","site":{"data":{}},"excerpt":"<p>Google发布了Chrome扩展的最新政策，不是Chrome商店的扩展一律停用。<br>乍一看，出路只有两条了，一是将扩展发布到Chrome应用商店；二是将扩展解压至一个文件夹，然后以“开发者模式”直接导入。<br>但是类似<strong>Youtube Center</strong>之类的插件是肯定没有机会进Chrome应用商店的，谁会把房子租给一个小偷，方便他来偷自家东西？</p>\n<h2 id=\"“Challenge-except”\"><a href=\"#“Challenge-except”\" class=\"headerlink\" title=\"“Challenge except”\"></a>“Challenge except”</h2><p>感谢的userscripts.org社区，催生了","more":"<strong><a href=\"https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo\" target=\"_blank\" rel=\"noopener\">Tampermonkey</a></strong>这样一款伟大的插件，关键居然还通过了Chrome应用商店的审核！</p>\n<h2 id=\"进入主题\"><a href=\"#进入主题\" class=\"headerlink\" title=\"进入主题\"></a>进入主题</h2><p>到Chrome应用商店安装<strong>Tampermonkey</strong>，默认配置情况下Tampermonkey会自动嗅探插件脚本，比如Youtube Center在Github上的地址是<code>https://github.com/YePpHa/YouTubeCenter/raw/master/dist/YouTubeCenter.user.js</code>，来到这个页面后，Tampermonkey会提示自动添加这个脚本。当然也可以手动添加。<br>于是，被Chrome禁用的扩展，又复活了。<br><img src=\"/public/tampermonkey.png\" alt=\"Install Youtube Center on Tampermonkey\"></p>\n<h2 id=\"担心\"><a href=\"#担心\" class=\"headerlink\" title=\"担心\"></a>担心</h2><p>万一哪天Google看Tampermonkey不爽，把它下架了，那就悲剧了～</p>"},{"title":"JS 笔记","date":"2018-01-10T02:46:45.000Z","_content":"记录js的知识点、跳坑指南。\n\n## 声明提升（Hosing）\n\n```js\na();\nvar a = 2;\nfunction a(){\n  console.log(1);\n}\na();\n/* 结果\n1\nUncaught TypeError: foo is not a function\n*/\n\n// 实际执行时的代码\nvar foo; // 声明提升\nfunction foo(){ // 声明提升\n  console.log(1);\n}\nfoo();\nfoo = 0; // 初始化赋值不提升\nfoo(); // 出错，此时 foo 是 0\n```\n\n<!-- more -->\n\n## 闭包陷阱\n\n典型案例，循环绑定事件\n\n```html\n<button>0</button>\n<button>1</button>\n<button>2</button>\n<button>3</button>\n<button>4</button>\n```\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  console.log(who + ' clicked')\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', function () { // 匿名函数才可以传参\n    onClickButton(i)\n  }, false)\n}\n\n/* 结果\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n*/\n```\n\n想要达到预期效果，改成如下即可：\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  return function () { // 返回一个函数\n    console.log(who + ' clicked')\n  }\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', onClickButton(i), false) // 返回了函数，所以不需要匿名函数包裹了\n}\n\n/* 结果\n0 clicked\n1 clicked\n2 clicked\n3 clicked\n4 clicked\n*/\n```\n\n## ES6 解构\n\n```js\n// 获取元素\nconst array = [1, 2, 3, 4];\nconst [first, ,third] = array;\nconsole.log(first, third); // 1 3\n\n// 值交换\nlet a = 1;\nlet b = 2;\n[a, b] = [b, a];\nconsole.log(a, b); // 2 1\n\n// 返回解构简写\nfunction margin() {\n  const left = 1, right = 2, top = 3, bottom = 4;\n  return { left, right, top, bottom };\n}\nconst { left, bottom } = margin();\nconsole.log(left, bottom); // 1 4\n\n// 参数匹配\nconst user = {firstName: '111', lastName: '222'};\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\nconsole.log(getFullName(user)); // 111 222\n\n// 深度匹配\nfunction settings() {\n  return { display: { color: 'red' }, keyboard: { layout: 'querty'} };\n}\nconst { display: { color: displayColor }, keyboard: { layout: keyboardLayout }} = settings();\nconsole.log(displayColor, keyboardLayout); // red querty\n```\n\n## ES6 展开操作符\n\n```js\n// ES5\nMath.max.apply(Math, [2,100,1,6,43]) // 100\n\n// ES6\nMath.max(...[2,100,1,6,43]) // 100\n```","source":"_posts/js-notes.md","raw":"---\ntitle: JS 笔记\ndate: 2018-01-10 10:46:45\ntags:\n  - js\ncategories:\n  - 前端\n---\n记录js的知识点、跳坑指南。\n\n## 声明提升（Hosing）\n\n```js\na();\nvar a = 2;\nfunction a(){\n  console.log(1);\n}\na();\n/* 结果\n1\nUncaught TypeError: foo is not a function\n*/\n\n// 实际执行时的代码\nvar foo; // 声明提升\nfunction foo(){ // 声明提升\n  console.log(1);\n}\nfoo();\nfoo = 0; // 初始化赋值不提升\nfoo(); // 出错，此时 foo 是 0\n```\n\n<!-- more -->\n\n## 闭包陷阱\n\n典型案例，循环绑定事件\n\n```html\n<button>0</button>\n<button>1</button>\n<button>2</button>\n<button>3</button>\n<button>4</button>\n```\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  console.log(who + ' clicked')\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', function () { // 匿名函数才可以传参\n    onClickButton(i)\n  }, false)\n}\n\n/* 结果\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n4 clicked\n*/\n```\n\n想要达到预期效果，改成如下即可：\n\n```js\nlet btns = document.querySelectorAll('button')\nfunction onClickButton (who) {\n  return function () { // 返回一个函数\n    console.log(who + ' clicked')\n  }\n}\nfor (var i = 0; i < btns.length; i++) {\n  btns[i].addEventListener('click', onClickButton(i), false) // 返回了函数，所以不需要匿名函数包裹了\n}\n\n/* 结果\n0 clicked\n1 clicked\n2 clicked\n3 clicked\n4 clicked\n*/\n```\n\n## ES6 解构\n\n```js\n// 获取元素\nconst array = [1, 2, 3, 4];\nconst [first, ,third] = array;\nconsole.log(first, third); // 1 3\n\n// 值交换\nlet a = 1;\nlet b = 2;\n[a, b] = [b, a];\nconsole.log(a, b); // 2 1\n\n// 返回解构简写\nfunction margin() {\n  const left = 1, right = 2, top = 3, bottom = 4;\n  return { left, right, top, bottom };\n}\nconst { left, bottom } = margin();\nconsole.log(left, bottom); // 1 4\n\n// 参数匹配\nconst user = {firstName: '111', lastName: '222'};\nfunction getFullName({ firstName, lastName }) {\n  return `${firstName} ${lastName}`;\n}\nconsole.log(getFullName(user)); // 111 222\n\n// 深度匹配\nfunction settings() {\n  return { display: { color: 'red' }, keyboard: { layout: 'querty'} };\n}\nconst { display: { color: displayColor }, keyboard: { layout: keyboardLayout }} = settings();\nconsole.log(displayColor, keyboardLayout); // red querty\n```\n\n## ES6 展开操作符\n\n```js\n// ES5\nMath.max.apply(Math, [2,100,1,6,43]) // 100\n\n// ES6\nMath.max(...[2,100,1,6,43]) // 100\n```","slug":"js-notes","published":1,"updated":"2018-01-11T01:42:36.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylo000jwfrag0dpj88s","content":"<p>记录js的知识点、跳坑指南。</p>\n<h2 id=\"声明提升（Hosing）\"><a href=\"#声明提升（Hosing）\" class=\"headerlink\" title=\"声明提升（Hosing）\"></a>声明提升（Hosing）</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">1</span></span><br><span class=\"line\"><span class=\"comment\">Uncaught TypeError: foo is not a function</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实际执行时的代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo();</span><br><span class=\"line\">foo = <span class=\"number\">0</span>; <span class=\"comment\">// 初始化赋值不提升</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 出错，此时 foo 是 0</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"闭包陷阱\"><a href=\"#闭包陷阱\" class=\"headerlink\" title=\"闭包陷阱\"></a>闭包陷阱</h2><p>典型案例，循环绑定事件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 匿名函数才可以传参</span></span><br><span class=\"line\">    onClickButton(i)</span><br><span class=\"line\">  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<p>想要达到预期效果，改成如下即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 返回一个函数</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, onClickButton(i), <span class=\"literal\">false</span>) <span class=\"comment\">// 返回了函数，所以不需要匿名函数包裹了</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">0 clicked</span></span><br><span class=\"line\"><span class=\"comment\">1 clicked</span></span><br><span class=\"line\"><span class=\"comment\">2 clicked</span></span><br><span class=\"line\"><span class=\"comment\">3 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-解构\"><a href=\"#ES6-解构\" class=\"headerlink\" title=\"ES6 解构\"></a>ES6 解构</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取元素</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, ,third] = array;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(first, third); <span class=\"comment\">// 1 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 值交换</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">[a, b] = [b, a];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b); <span class=\"comment\">// 2 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回解构简写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">margin</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> left = <span class=\"number\">1</span>, right = <span class=\"number\">2</span>, top = <span class=\"number\">3</span>, bottom = <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; left, right, top, bottom &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; left, bottom &#125; = margin();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(left, bottom); <span class=\"comment\">// 1 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数匹配</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">'111'</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">'222'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123; firstName, lastName &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;firstName&#125;</span> <span class=\"subst\">$&#123;lastName&#125;</span>`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getFullName(user)); <span class=\"comment\">// 111 222</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 深度匹配</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">settings</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: <span class=\"string\">'red'</span> &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: <span class=\"string\">'querty'</span>&#125; &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: displayColor &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: keyboardLayout &#125;&#125; = settings();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(displayColor, keyboardLayout); <span class=\"comment\">// red querty</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-展开操作符\"><a href=\"#ES6-展开操作符\" class=\"headerlink\" title=\"ES6 展开操作符\"></a>ES6 展开操作符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max.apply(<span class=\"built_in\">Math</span>, [<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max(...[<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>记录js的知识点、跳坑指南。</p>\n<h2 id=\"声明提升（Hosing）\"><a href=\"#声明提升（Hosing）\" class=\"headerlink\" title=\"声明提升（Hosing）\"></a>声明提升（Hosing）</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a();</span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">1</span></span><br><span class=\"line\"><span class=\"comment\">Uncaught TypeError: foo is not a function</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实际执行时的代码</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> foo; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123; <span class=\"comment\">// 声明提升</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo();</span><br><span class=\"line\">foo = <span class=\"number\">0</span>; <span class=\"comment\">// 初始化赋值不提升</span></span><br><span class=\"line\">foo(); <span class=\"comment\">// 出错，此时 foo 是 0</span></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"闭包陷阱\"><a href=\"#闭包陷阱\" class=\"headerlink\" title=\"闭包陷阱\"></a>闭包陷阱</h2><p>典型案例，循环绑定事件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 匿名函数才可以传参</span></span><br><span class=\"line\">    onClickButton(i)</span><br><span class=\"line\">  &#125;, <span class=\"literal\">false</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<p>想要达到预期效果，改成如下即可：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> btns = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'button'</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onClickButton</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 返回一个函数</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(who + <span class=\"string\">' clicked'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btns.length; i++) &#123;</span><br><span class=\"line\">  btns[i].addEventListener(<span class=\"string\">'click'</span>, onClickButton(i), <span class=\"literal\">false</span>) <span class=\"comment\">// 返回了函数，所以不需要匿名函数包裹了</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结果</span></span><br><span class=\"line\"><span class=\"comment\">0 clicked</span></span><br><span class=\"line\"><span class=\"comment\">1 clicked</span></span><br><span class=\"line\"><span class=\"comment\">2 clicked</span></span><br><span class=\"line\"><span class=\"comment\">3 clicked</span></span><br><span class=\"line\"><span class=\"comment\">4 clicked</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-解构\"><a href=\"#ES6-解构\" class=\"headerlink\" title=\"ES6 解构\"></a>ES6 解构</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取元素</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, ,third] = array;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(first, third); <span class=\"comment\">// 1 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 值交换</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">[a, b] = [b, a];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b); <span class=\"comment\">// 2 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 返回解构简写</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">margin</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> left = <span class=\"number\">1</span>, right = <span class=\"number\">2</span>, top = <span class=\"number\">3</span>, bottom = <span class=\"number\">4</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; left, right, top, bottom &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; left, bottom &#125; = margin();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(left, bottom); <span class=\"comment\">// 1 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 参数匹配</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">'111'</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">'222'</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFullName</span>(<span class=\"params\">&#123; firstName, lastName &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">`<span class=\"subst\">$&#123;firstName&#125;</span> <span class=\"subst\">$&#123;lastName&#125;</span>`</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getFullName(user)); <span class=\"comment\">// 111 222</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 深度匹配</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">settings</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: <span class=\"string\">'red'</span> &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: <span class=\"string\">'querty'</span>&#125; &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"attr\">display</span>: &#123; <span class=\"attr\">color</span>: displayColor &#125;, <span class=\"attr\">keyboard</span>: &#123; <span class=\"attr\">layout</span>: keyboardLayout &#125;&#125; = settings();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(displayColor, keyboardLayout); <span class=\"comment\">// red querty</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES6-展开操作符\"><a href=\"#ES6-展开操作符\" class=\"headerlink\" title=\"ES6 展开操作符\"></a>ES6 展开操作符</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ES5</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max.apply(<span class=\"built_in\">Math</span>, [<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ES6</span></span><br><span class=\"line\"><span class=\"built_in\">Math</span>.max(...[<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">1</span>,<span class=\"number\">6</span>,<span class=\"number\">43</span>]) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>"},{"title":"开发WordPress插件的时候，用date函数无法获取所在时区的时间","date":"2014-07-31T06:59:11.000Z","_content":"在普通PHP开发中，假定在php.ini中已经设定了timezone为`Asia/Shanghai`之后，用`date('H:i:s')`即可获得当前时间。\n但是刚刚在研究开发WordPress插件的时候，发现用`date('H:i:s')`获取的时间是0时区，php.ini中的设置没有起作用，<!-- more -->WordPress后台设置的时区也不在此起作用。\nGoogle了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。\n\n## 找到答案\n\n吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数`current_time(\"H:i:s\")`才能获取到本时区时间，用`date('H:i:s')`只能得到0时区的时间。\n文档在这里：[Function Reference:current_time](http://codex.wordpress.org/Function_Reference/current_time)\n","source":"_posts/use-current_time-instead-of-time-in-wordpress-plugin-development.md","raw":"---\ntitle: \"开发WordPress插件的时候，用date函数无法获取所在时区的时间\"\ndate: 2014-07-31 14:59:11\ntags:\n  - php\n  - wordpress\ncategories:\n  - 后端\n---\n在普通PHP开发中，假定在php.ini中已经设定了timezone为`Asia/Shanghai`之后，用`date('H:i:s')`即可获得当前时间。\n但是刚刚在研究开发WordPress插件的时候，发现用`date('H:i:s')`获取的时间是0时区，php.ini中的设置没有起作用，<!-- more -->WordPress后台设置的时区也不在此起作用。\nGoogle了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。\n\n## 找到答案\n\n吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数`current_time(\"H:i:s\")`才能获取到本时区时间，用`date('H:i:s')`只能得到0时区的时间。\n文档在这里：[Function Reference:current_time](http://codex.wordpress.org/Function_Reference/current_time)\n","slug":"use-current_time-instead-of-time-in-wordpress-plugin-development","published":1,"updated":"2018-01-10T02:44:20.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylq000nwfrartmam8g3","content":"<p>在普通PHP开发中，假定在php.ini中已经设定了timezone为<code>Asia/Shanghai</code>之后，用<code>date(&#39;H:i:s&#39;)</code>即可获得当前时间。<br>但是刚刚在研究开发WordPress插件的时候，发现用<code>date(&#39;H:i:s&#39;)</code>获取的时间是0时区，php.ini中的设置没有起作用，<a id=\"more\"></a>WordPress后台设置的时区也不在此起作用。<br>Google了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。</p>\n<h2 id=\"找到答案\"><a href=\"#找到答案\" class=\"headerlink\" title=\"找到答案\"></a>找到答案</h2><p>吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数<code>current_time(&quot;H:i:s&quot;)</code>才能获取到本时区时间，用<code>date(&#39;H:i:s&#39;)</code>只能得到0时区的时间。<br>文档在这里：<a href=\"http://codex.wordpress.org/Function_Reference/current_time\" target=\"_blank\" rel=\"noopener\">Function Reference:current_time</a></p>\n","site":{"data":{}},"excerpt":"<p>在普通PHP开发中，假定在php.ini中已经设定了timezone为<code>Asia/Shanghai</code>之后，用<code>date(&#39;H:i:s&#39;)</code>即可获得当前时间。<br>但是刚刚在研究开发WordPress插件的时候，发现用<code>date(&#39;H:i:s&#39;)</code>获取的时间是0时区，php.ini中的设置没有起作用，","more":"WordPress后台设置的时区也不在此起作用。<br>Google了许久也没有找到问题，还去stackoverflow上开了“处女“问。只能暂时搁置了。</p>\n<h2 id=\"找到答案\"><a href=\"#找到答案\" class=\"headerlink\" title=\"找到答案\"></a>找到答案</h2><p>吃完午饭又开始折腾，突然脑洞大开，会不会是搜索关键词不好？于是又换了几个关键词Google了下，果然找到了答案：在WP中，需要用其自己的函数<code>current_time(&quot;H:i:s&quot;)</code>才能获取到本时区时间，用<code>date(&#39;H:i:s&#39;)</code>只能得到0时区的时间。<br>文档在这里：<a href=\"http://codex.wordpress.org/Function_Reference/current_time\" target=\"_blank\" rel=\"noopener\">Function Reference:current_time</a></p>"},{"title":"Hello World","date":"2014-05-04T14:11:06.000Z","_content":"## Octopress不成，Hexo之\n\nRuby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。\n那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～\nHexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。\n<!-- more -->\n毕竟是js啊，改起来瞬间就顺手了...\n\n## 好好码字\n\n自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！\n都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2014-05-04 22:11:06\ntags:\n  - hexo\n  - nodejs\ncategories:\n  - 其他\n---\n## Octopress不成，Hexo之\n\nRuby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。\n那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～\nHexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。\n<!-- more -->\n毕竟是js啊，改起来瞬间就顺手了...\n\n## 好好码字\n\n自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！\n都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～\n","slug":"hello-world","published":1,"updated":"2018-01-10T02:45:42.030Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylr000pwfrae1rhyx6l","content":"<h2 id=\"Octopress不成，Hexo之\"><a href=\"#Octopress不成，Hexo之\" class=\"headerlink\" title=\"Octopress不成，Hexo之\"></a>Octopress不成，Hexo之</h2><p>Ruby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。<br>那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～<br>Hexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。<br><a id=\"more\"></a><br>毕竟是js啊，改起来瞬间就顺手了…</p>\n<h2 id=\"好好码字\"><a href=\"#好好码字\" class=\"headerlink\" title=\"好好码字\"></a>好好码字</h2><p>自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！<br>都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Octopress不成，Hexo之\"><a href=\"#Octopress不成，Hexo之\" class=\"headerlink\" title=\"Octopress不成，Hexo之\"></a>Octopress不成，Hexo之</h2><p>Ruby在Windows上面实在悲剧，无法直视啊，咱也不懂Ruby，近阶段也不想懂。<br>那个Nodejs在襁褓中的年代，Jekyll横行；现如今已是Nodejs的天下啦～<br>Hexo - 来自台湾同胞的作品，Github上star最多的基于Nodejs的blog系统，功能、插件、主题相对都比较丰富。<br>","more":"<br>毕竟是js啊，改起来瞬间就顺手了…</p>\n<h2 id=\"好好码字\"><a href=\"#好好码字\" class=\"headerlink\" title=\"好好码字\"></a>好好码字</h2><p>自从用了Jekyll，半年都憋不出一篇，一是懒，二是确实没时间，少壮不努力～老大徒伤悲，一言难尽啊！<br>都说用静态blog是作(no zuo no die)，但其实Wordpress之类的反而背离了码字本来的意义吧～</p>"},{"title":"重拾 Docker","date":"2018-01-05T07:26:24.000Z","_content":"> Nice to meet U, I'm Docker\n\nDocker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。\n\n一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。\n<!-- more -->\n\n## 一、安装\n\n当前，docker分商业版和社区版，个人当然是安装社区版：[docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)\n> 不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具\n\n### 镜像加速\n\n\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 `Preferences - Daemon - Registry mirrors` 下增加DaoCloud的免费镜像地址 `http://ebccc999.m.daocloud.io`，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启`Apply & Restart`。\n\n安装完，命令行输入`docker info` 查看详细信息。\n\n## 二、试一试\n\n起一个nginx的容器试试 `docker container run --publish 80:80 nginx` ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。\n\n```bash\n$ docker container run --publish 80:80 nginx\nUnable to find image 'nginx:latest' locally\nlatest: Pulling from library/nginx\ne7bb522d92ff: Pull complete\n6edc05228666: Pull complete\ncd866a17e81f: Pull complete\nDigest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e\nStatus: Downloaded newer image for nginx:latest\n```\n\n下载完成后就可以看到 [http://localhost](http://localhost) Nginx 启动成功的页面。\n\n如果是后台运行的话，加上 `--detach` 参数：`docker container run --publish 80:80 --detach nginx`，会返回一个容器ID，比如：_0077235b8a9d*************************************_\n\n### 列出运行中的容器\n\n`docker container ls`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   About a minute ago   Up About a minute   0.0.0.0:80->80/tcp   inspiring_saha\n```\n\n### 停止容器\n\n`docker container stop 0077235b8a9d`\n\n### 列出所有容器，包括已经停止的\n\n`docker container ls -a`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   4 minutes ago       Up 4 minutes               0.0.0.0:80->80/tcp   inspiring_saha\nc4a05b8e8200        nginx               \"nginx -g 'daemon ...\"   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce\n```\n\n每个容器的名字 _NAMES_ 是唯一的，可以指定 `docker container run --publish 80:80 --detach --name nginx4node nginx` ，不指定就随机分配一个。\n\n### 重启已停止的容器\n\n`docker container start 0077235b8a9d`\n\n### 查看容器日志\n\n`docker container logs nginx4node`\n\n\n### 删除一个容器\n\n`docker container rm 0077235b8a9d`\n\n## 参数自定义\n\n`docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node`\n\n+ `8080:80`，前面是宿主机端口，后面是容器的端口\n+ `nginx:*.*`，Nginx指定版本号，如果不指定，就是取最新版`nginx:latest`\n\n## 老朋友 Katematic\n\n有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。\n\n![katematic](/public/katematic.png)\n","source":"_posts/meet-docker-again.md","raw":"---\ntitle: 重拾 Docker\ndate: 2018-01-05 15:26:24\ntags:\n  - docker\n  - nodejs\ncategories:\n  - nodejs\n---\n> Nice to meet U, I'm Docker\n\nDocker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。\n\n一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。\n<!-- more -->\n\n## 一、安装\n\n当前，docker分商业版和社区版，个人当然是安装社区版：[docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)\n> 不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具\n\n### 镜像加速\n\n\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 `Preferences - Daemon - Registry mirrors` 下增加DaoCloud的免费镜像地址 `http://ebccc999.m.daocloud.io`，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启`Apply & Restart`。\n\n安装完，命令行输入`docker info` 查看详细信息。\n\n## 二、试一试\n\n起一个nginx的容器试试 `docker container run --publish 80:80 nginx` ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。\n\n```bash\n$ docker container run --publish 80:80 nginx\nUnable to find image 'nginx:latest' locally\nlatest: Pulling from library/nginx\ne7bb522d92ff: Pull complete\n6edc05228666: Pull complete\ncd866a17e81f: Pull complete\nDigest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e\nStatus: Downloaded newer image for nginx:latest\n```\n\n下载完成后就可以看到 [http://localhost](http://localhost) Nginx 启动成功的页面。\n\n如果是后台运行的话，加上 `--detach` 参数：`docker container run --publish 80:80 --detach nginx`，会返回一个容器ID，比如：_0077235b8a9d*************************************_\n\n### 列出运行中的容器\n\n`docker container ls`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   About a minute ago   Up About a minute   0.0.0.0:80->80/tcp   inspiring_saha\n```\n\n### 停止容器\n\n`docker container stop 0077235b8a9d`\n\n### 列出所有容器，包括已经停止的\n\n`docker container ls -a`\n\n```bash\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES\n0077235b8a9d        nginx               \"nginx -g 'daemon ...\"   4 minutes ago       Up 4 minutes               0.0.0.0:80->80/tcp   inspiring_saha\nc4a05b8e8200        nginx               \"nginx -g 'daemon ...\"   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce\n```\n\n每个容器的名字 _NAMES_ 是唯一的，可以指定 `docker container run --publish 80:80 --detach --name nginx4node nginx` ，不指定就随机分配一个。\n\n### 重启已停止的容器\n\n`docker container start 0077235b8a9d`\n\n### 查看容器日志\n\n`docker container logs nginx4node`\n\n\n### 删除一个容器\n\n`docker container rm 0077235b8a9d`\n\n## 参数自定义\n\n`docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node`\n\n+ `8080:80`，前面是宿主机端口，后面是容器的端口\n+ `nginx:*.*`，Nginx指定版本号，如果不指定，就是取最新版`nginx:latest`\n\n## 老朋友 Katematic\n\n有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。\n\n![katematic](/public/katematic.png)\n","slug":"meet-docker-again","published":1,"updated":"2018-01-08T01:28:58.300Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5yls000twfraz5mdt6y3","content":"<blockquote>\n<p>Nice to meet U, I’m Docker</p>\n</blockquote>\n<p>Docker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。</p>\n<p>一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。<br><a id=\"more\"></a></p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><p>当前，docker分商业版和社区版，个人当然是安装社区版：<a href=\"https://store.docker.com/editions/community/docker-ce-desktop-mac\" target=\"_blank\" rel=\"noopener\">docker-ce-desktop-mac</a></p>\n<blockquote>\n<p>不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具</p>\n</blockquote>\n<h3 id=\"镜像加速\"><a href=\"#镜像加速\" class=\"headerlink\" title=\"镜像加速\"></a>镜像加速</h3><p>\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 <code>Preferences - Daemon - Registry mirrors</code> 下增加DaoCloud的免费镜像地址 <code>http://ebccc999.m.daocloud.io</code>，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启<code>Apply &amp; Restart</code>。</p>\n<p>安装完，命令行输入<code>docker info</code> 查看详细信息。</p>\n<h2 id=\"二、试一试\"><a href=\"#二、试一试\" class=\"headerlink\" title=\"二、试一试\"></a>二、试一试</h2><p>起一个nginx的容器试试 <code>docker container run --publish 80:80 nginx</code> ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker container run --publish 80:80 nginx</span><br><span class=\"line\">Unable to find image <span class=\"string\">'nginx:latest'</span> locally</span><br><span class=\"line\">latest: Pulling from library/nginx</span><br><span class=\"line\">e7bb522d92ff: Pull complete</span><br><span class=\"line\">6edc05228666: Pull complete</span><br><span class=\"line\">cd866a17e81f: Pull complete</span><br><span class=\"line\">Digest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> nginx:latest</span><br></pre></td></tr></table></figure>\n<p>下载完成后就可以看到 <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">http://localhost</a> Nginx 启动成功的页面。</p>\n<p>如果是后台运行的话，加上 <code>--detach</code> 参数：<code>docker container run --publish 80:80 --detach nginx</code>，会返回一个容器ID，比如：<em>0077235b8a9d<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></em></p>\n<h3 id=\"列出运行中的容器\"><a href=\"#列出运行中的容器\" class=\"headerlink\" title=\"列出运行中的容器\"></a>列出运行中的容器</h3><p><code>docker container ls</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   About a minute ago   Up About a minute   0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br></pre></td></tr></table></figure>\n<h3 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h3><p><code>docker container stop 0077235b8a9d</code></p>\n<h3 id=\"列出所有容器，包括已经停止的\"><a href=\"#列出所有容器，包括已经停止的\" class=\"headerlink\" title=\"列出所有容器，包括已经停止的\"></a>列出所有容器，包括已经停止的</h3><p><code>docker container ls -a</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   4 minutes ago       Up 4 minutes               0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br><span class=\"line\">c4a05b8e8200        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce</span><br></pre></td></tr></table></figure>\n<p>每个容器的名字 <em>NAMES</em> 是唯一的，可以指定 <code>docker container run --publish 80:80 --detach --name nginx4node nginx</code> ，不指定就随机分配一个。</p>\n<h3 id=\"重启已停止的容器\"><a href=\"#重启已停止的容器\" class=\"headerlink\" title=\"重启已停止的容器\"></a>重启已停止的容器</h3><p><code>docker container start 0077235b8a9d</code></p>\n<h3 id=\"查看容器日志\"><a href=\"#查看容器日志\" class=\"headerlink\" title=\"查看容器日志\"></a>查看容器日志</h3><p><code>docker container logs nginx4node</code></p>\n<h3 id=\"删除一个容器\"><a href=\"#删除一个容器\" class=\"headerlink\" title=\"删除一个容器\"></a>删除一个容器</h3><p><code>docker container rm 0077235b8a9d</code></p>\n<h2 id=\"参数自定义\"><a href=\"#参数自定义\" class=\"headerlink\" title=\"参数自定义\"></a>参数自定义</h2><p><code>docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node</code></p>\n<ul>\n<li><code>8080:80</code>，前面是宿主机端口，后面是容器的端口</li>\n<li><code>nginx:*.*</code>，Nginx指定版本号，如果不指定，就是取最新版<code>nginx:latest</code></li>\n</ul>\n<h2 id=\"老朋友-Katematic\"><a href=\"#老朋友-Katematic\" class=\"headerlink\" title=\"老朋友 Katematic\"></a>老朋友 Katematic</h2><p>有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。</p>\n<p><img src=\"/public/katematic.png\" alt=\"katematic\"></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Nice to meet U, I’m Docker</p>\n</blockquote>\n<p>Docker刚出来那会儿，还是粗暴地一个virtualbox+系统镜像的分发方式，后来有了katematic，再后来有了docker-tools。</p>\n<p>一年不见，docker变化真大，最近有项目上nodejs，正好重新认识一下docker。<br>","more":"</p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><p>当前，docker分商业版和社区版，个人当然是安装社区版：<a href=\"https://store.docker.com/editions/community/docker-ce-desktop-mac\" target=\"_blank\" rel=\"noopener\">docker-ce-desktop-mac</a></p>\n<blockquote>\n<p>不推荐使用Homebrew，安装的只是一个docker-cli 命令行工具</p>\n</blockquote>\n<h3 id=\"镜像加速\"><a href=\"#镜像加速\" class=\"headerlink\" title=\"镜像加速\"></a>镜像加速</h3><p>\bDocker再国内访问很慢，有些地区是直接墙掉的，所以一定要用镜像加速 <code>Preferences - Daemon - Registry mirrors</code> 下增加DaoCloud的免费镜像地址 <code>http://ebccc999.m.daocloud.io</code>，选DaoCloud是google出来的结果，速度也不错（宣称永久免费），就选了它。阿里云的还要进控制台看，太麻烦了。填写完保存重启<code>Apply &amp; Restart</code>。</p>\n<p>安装完，命令行输入<code>docker info</code> 查看详细信息。</p>\n<h2 id=\"二、试一试\"><a href=\"#二、试一试\" class=\"headerlink\" title=\"二、试一试\"></a>二、试一试</h2><p>起一个nginx的容器试试 <code>docker container run --publish 80:80 nginx</code> ，由于新安装，本地并没有Nginx镜像，所以会从仓库拉一个过来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker container run --publish 80:80 nginx</span><br><span class=\"line\">Unable to find image <span class=\"string\">'nginx:latest'</span> locally</span><br><span class=\"line\">latest: Pulling from library/nginx</span><br><span class=\"line\">e7bb522d92ff: Pull complete</span><br><span class=\"line\">6edc05228666: Pull complete</span><br><span class=\"line\">cd866a17e81f: Pull complete</span><br><span class=\"line\">Digest: sha256:8374bf37a36a58cbbc9a3b8c6f5b838b750a610986d90f5b2437411b38e5e93e</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> nginx:latest</span><br></pre></td></tr></table></figure>\n<p>下载完成后就可以看到 <a href=\"http://localhost\" target=\"_blank\" rel=\"noopener\">http://localhost</a> Nginx 启动成功的页面。</p>\n<p>如果是后台运行的话，加上 <code>--detach</code> 参数：<code>docker container run --publish 80:80 --detach nginx</code>，会返回一个容器ID，比如：<em>0077235b8a9d<strong><strong><strong><strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong></strong></strong></strong></em></p>\n<h3 id=\"列出运行中的容器\"><a href=\"#列出运行中的容器\" class=\"headerlink\" title=\"列出运行中的容器\"></a>列出运行中的容器</h3><p><code>docker container ls</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   About a minute ago   Up About a minute   0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br></pre></td></tr></table></figure>\n<h3 id=\"停止容器\"><a href=\"#停止容器\" class=\"headerlink\" title=\"停止容器\"></a>停止容器</h3><p><code>docker container stop 0077235b8a9d</code></p>\n<h3 id=\"列出所有容器，包括已经停止的\"><a href=\"#列出所有容器，包括已经停止的\" class=\"headerlink\" title=\"列出所有容器，包括已经停止的\"></a>列出所有容器，包括已经停止的</h3><p><code>docker container ls -a</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS                NAMES</span><br><span class=\"line\">0077235b8a9d        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   4 minutes ago       Up 4 minutes               0.0.0.0:80-&gt;80/tcp   inspiring_saha</span><br><span class=\"line\">c4a05b8e8200        nginx               <span class=\"string\">\"nginx -g 'daemon ...\"</span>   8 minutes ago       Exited (0) 4 minutes ago                        amazing_noyce</span><br></pre></td></tr></table></figure>\n<p>每个容器的名字 <em>NAMES</em> 是唯一的，可以指定 <code>docker container run --publish 80:80 --detach --name nginx4node nginx</code> ，不指定就随机分配一个。</p>\n<h3 id=\"重启已停止的容器\"><a href=\"#重启已停止的容器\" class=\"headerlink\" title=\"重启已停止的容器\"></a>重启已停止的容器</h3><p><code>docker container start 0077235b8a9d</code></p>\n<h3 id=\"查看容器日志\"><a href=\"#查看容器日志\" class=\"headerlink\" title=\"查看容器日志\"></a>查看容器日志</h3><p><code>docker container logs nginx4node</code></p>\n<h3 id=\"删除一个容器\"><a href=\"#删除一个容器\" class=\"headerlink\" title=\"删除一个容器\"></a>删除一个容器</h3><p><code>docker container rm 0077235b8a9d</code></p>\n<h2 id=\"参数自定义\"><a href=\"#参数自定义\" class=\"headerlink\" title=\"参数自定义\"></a>参数自定义</h2><p><code>docker container run --publish 8080:80 --detach nginx:*.* --name nginx4node</code></p>\n<ul>\n<li><code>8080:80</code>，前面是宿主机端口，后面是容器的端口</li>\n<li><code>nginx:*.*</code>，Nginx指定版本号，如果不指定，就是取最新版<code>nginx:latest</code></li>\n</ul>\n<h2 id=\"老朋友-Katematic\"><a href=\"#老朋友-Katematic\" class=\"headerlink\" title=\"老朋友 Katematic\"></a>老朋友 Katematic</h2><p>有时候GUI可以提高生产力，\b为何一定要在CLI装B呢？通过 Katematic 可以很直观，也很方便的配置镜像。</p>\n<p><img src=\"/public/katematic.png\" alt=\"katematic\"></p>"},{"title":"如何安装配置Hexo","date":"2014-05-06T08:29:59.000Z","_content":"[Hexo](http://hexo.io/) - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞[tommy351](http://zespia.tw/)开发的。在[Github](https://github.com/tommy351/hexo)上搜索\"node.js blog\"的话，当前是Most stars的。\n**Hexo的安装也非常便捷(Git等常用工具就不多说了～)：**\n\n## 搭建环境\n\n<!-- more -->\n\n1. 安装nodejs，可以从[nodejs官网](http://nodejs.org/)下载到最新稳定版本。\n\n  OSX/Linux用户建议直接安装[nvm (Node Version Manager)](https://github.com/creationix/nvm)，然后用nvm安装指定的nodejs版本；\n  Windows用户没有nvm但是有[nodist (Natural node version manager for windows)](https://github.com/marcelklehr/nodist)（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。\n\n1. 采用taobao的npm镜像，安装cnpm\n\n  如同gem镜像一样，taobao也有个npm镜像叫做[TAONPM](http://npm.taobao.org/)，没10分钟同步一次，杠杠滴。\n  每次指定镜像源太麻烦了，所以有了cnpm：\n  `npm install -g cnpm --registry=http://registry.npm.taobao.org`\n  下次再想从taobao镜像安装的时候，直接\n  `cnpm install -g *`\n  很方便。\n\n## 安装并初始化Hexo\n\n1. 安装Hexo\n\n  搭建好了nodejs环境，安装模块就很简单了：\n  `npm install -g hexo`\n\n1. 初始化\n\n  以我的Windows机器（POWERSHELL）为例：\n  `PS C:\\Users\\66beta> hexo init 66beta.github.io`\n  **注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究**\n  来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。\n  [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：\n  `npm install hexo-generator-feed --save`\n  然后，根据[Hexo官方文档](http://hexo.io/docs/configuration.html)来对_config.yml做一些配置。\n\n## 写文章并生成HTML\n\n1. 添加一篇文章\n\n  `hexo new [layout] <title>`\n  比如：\n  `hexo new \"Hello Hexo\"`\n  在source\\\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～\n\n1. 生成HTML\n\n  编写完后，运行生成HTML的命令：`hexo generate`\n\n1. 预览\n\n  生成完HTML文件后，可以运行一个web服务来查看效果：`hexo server`\n  保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。\n\n## 完毕\n\n以上只是记录下安装的流程，具体安装与使用请见[Hexo官网](http://hexo.io/)，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。\n\n自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～\n","source":"_posts/how-to-setup-hexo.md","raw":"---\ntitle: '如何安装配置Hexo'\ndate: 2014-05-06 16:29:59\ntags:\n  - hexo\ncategories:\n  - 其他\n---\n[Hexo](http://hexo.io/) - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞[tommy351](http://zespia.tw/)开发的。在[Github](https://github.com/tommy351/hexo)上搜索\"node.js blog\"的话，当前是Most stars的。\n**Hexo的安装也非常便捷(Git等常用工具就不多说了～)：**\n\n## 搭建环境\n\n<!-- more -->\n\n1. 安装nodejs，可以从[nodejs官网](http://nodejs.org/)下载到最新稳定版本。\n\n  OSX/Linux用户建议直接安装[nvm (Node Version Manager)](https://github.com/creationix/nvm)，然后用nvm安装指定的nodejs版本；\n  Windows用户没有nvm但是有[nodist (Natural node version manager for windows)](https://github.com/marcelklehr/nodist)（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。\n\n1. 采用taobao的npm镜像，安装cnpm\n\n  如同gem镜像一样，taobao也有个npm镜像叫做[TAONPM](http://npm.taobao.org/)，没10分钟同步一次，杠杠滴。\n  每次指定镜像源太麻烦了，所以有了cnpm：\n  `npm install -g cnpm --registry=http://registry.npm.taobao.org`\n  下次再想从taobao镜像安装的时候，直接\n  `cnpm install -g *`\n  很方便。\n\n## 安装并初始化Hexo\n\n1. 安装Hexo\n\n  搭建好了nodejs环境，安装模块就很简单了：\n  `npm install -g hexo`\n\n1. 初始化\n\n  以我的Windows机器（POWERSHELL）为例：\n  `PS C:\\Users\\66beta> hexo init 66beta.github.io`\n  **注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究**\n  来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。\n  [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：\n  `npm install hexo-generator-feed --save`\n  然后，根据[Hexo官方文档](http://hexo.io/docs/configuration.html)来对_config.yml做一些配置。\n\n## 写文章并生成HTML\n\n1. 添加一篇文章\n\n  `hexo new [layout] <title>`\n  比如：\n  `hexo new \"Hello Hexo\"`\n  在source\\\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～\n\n1. 生成HTML\n\n  编写完后，运行生成HTML的命令：`hexo generate`\n\n1. 预览\n\n  生成完HTML文件后，可以运行一个web服务来查看效果：`hexo server`\n  保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。\n\n## 完毕\n\n以上只是记录下安装的流程，具体安装与使用请见[Hexo官网](http://hexo.io/)，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。\n\n自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～\n","slug":"how-to-setup-hexo","published":1,"updated":"2018-01-10T02:45:46.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylt000wwfra0ltibl4o","content":"<p><a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a> - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞<a href=\"http://zespia.tw/\" target=\"_blank\" rel=\"noopener\">tommy351</a>开发的。在<a href=\"https://github.com/tommy351/hexo\" target=\"_blank\" rel=\"noopener\">Github</a>上搜索”node.js blog”的话，当前是Most stars的。<br><strong>Hexo的安装也非常便捷(Git等常用工具就不多说了～)：</strong></p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2><a id=\"more\"></a>\n<ol>\n<li><p>安装nodejs，可以从<a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">nodejs官网</a>下载到最新稳定版本。</p>\n<p>OSX/Linux用户建议直接安装<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm (Node Version Manager)</a>，然后用nvm安装指定的nodejs版本；<br>Windows用户没有nvm但是有<a href=\"https://github.com/marcelklehr/nodist\" target=\"_blank\" rel=\"noopener\">nodist (Natural node version manager for windows)</a>（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。</p>\n</li>\n<li><p>采用taobao的npm镜像，安装cnpm</p>\n<p>如同gem镜像一样，taobao也有个npm镜像叫做<a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"noopener\">TAONPM</a>，没10分钟同步一次，杠杠滴。<br>每次指定镜像源太麻烦了，所以有了cnpm：<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code><br>下次再想从taobao镜像安装的时候，直接<br><code>cnpm install -g *</code><br>很方便。</p>\n</li>\n</ol>\n<h2 id=\"安装并初始化Hexo\"><a href=\"#安装并初始化Hexo\" class=\"headerlink\" title=\"安装并初始化Hexo\"></a>安装并初始化Hexo</h2><ol>\n<li><p>安装Hexo</p>\n<p>搭建好了nodejs环境，安装模块就很简单了：<br><code>npm install -g hexo</code></p>\n</li>\n<li><p>初始化</p>\n<p>以我的Windows机器（POWERSHELL）为例：<br><code>PS C:\\Users\\66beta&gt; hexo init 66beta.github.io</code><br><strong>注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究</strong><br>来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。<br><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a>是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：<br><code>npm install hexo-generator-feed --save</code><br>然后，根据<a href=\"http://hexo.io/docs/configuration.html\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a>来对_config.yml做一些配置。</p>\n</li>\n</ol>\n<h2 id=\"写文章并生成HTML\"><a href=\"#写文章并生成HTML\" class=\"headerlink\" title=\"写文章并生成HTML\"></a>写文章并生成HTML</h2><ol>\n<li><p>添加一篇文章</p>\n<p><code>hexo new [layout] &lt;title&gt;</code><br>比如：<br><code>hexo new &quot;Hello Hexo&quot;</code><br>在source\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～</p>\n</li>\n<li><p>生成HTML</p>\n<p>编写完后，运行生成HTML的命令：<code>hexo generate</code></p>\n</li>\n<li><p>预览</p>\n<p>生成完HTML文件后，可以运行一个web服务来查看效果：<code>hexo server</code><br>保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。</p>\n</li>\n</ol>\n<h2 id=\"完毕\"><a href=\"#完毕\" class=\"headerlink\" title=\"完毕\"></a>完毕</h2><p>以上只是记录下安装的流程，具体安装与使用请见<a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官网</a>，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。</p>\n<p>自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a> - 是一个基于Nodejs开发的静态blog系统，类似于基于Ruby的Jekyll。由一个台湾同胞<a href=\"http://zespia.tw/\" target=\"_blank\" rel=\"noopener\">tommy351</a>开发的。在<a href=\"https://github.com/tommy351/hexo\" target=\"_blank\" rel=\"noopener\">Github</a>上搜索”node.js blog”的话，当前是Most stars的。<br><strong>Hexo的安装也非常便捷(Git等常用工具就不多说了～)：</strong></p>\n<h2 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h2>","more":"<ol>\n<li><p>安装nodejs，可以从<a href=\"http://nodejs.org/\" target=\"_blank\" rel=\"noopener\">nodejs官网</a>下载到最新稳定版本。</p>\n<p>OSX/Linux用户建议直接安装<a href=\"https://github.com/creationix/nvm\" target=\"_blank\" rel=\"noopener\">nvm (Node Version Manager)</a>，然后用nvm安装指定的nodejs版本；<br>Windows用户没有nvm但是有<a href=\"https://github.com/marcelklehr/nodist\" target=\"_blank\" rel=\"noopener\">nodist (Natural node version manager for windows)</a>（记得添加bin目录到系统PATH中），然后跟nvm差不多的操作来安装nodejs。另外，Windows用户推荐在Powershell中操作。</p>\n</li>\n<li><p>采用taobao的npm镜像，安装cnpm</p>\n<p>如同gem镜像一样，taobao也有个npm镜像叫做<a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"noopener\">TAONPM</a>，没10分钟同步一次，杠杠滴。<br>每次指定镜像源太麻烦了，所以有了cnpm：<br><code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code><br>下次再想从taobao镜像安装的时候，直接<br><code>cnpm install -g *</code><br>很方便。</p>\n</li>\n</ol>\n<h2 id=\"安装并初始化Hexo\"><a href=\"#安装并初始化Hexo\" class=\"headerlink\" title=\"安装并初始化Hexo\"></a>安装并初始化Hexo</h2><ol>\n<li><p>安装Hexo</p>\n<p>搭建好了nodejs环境，安装模块就很简单了：<br><code>npm install -g hexo</code></p>\n</li>\n<li><p>初始化</p>\n<p>以我的Windows机器（POWERSHELL）为例：<br><code>PS C:\\Users\\66beta&gt; hexo init 66beta.github.io</code><br><strong>注意：这里就在C:\\Users\\66beta目录下运行init，不然会出错，具体不知道为什么，以后再研究</strong><br>来到C:\\Users\\66beta\\66beta.github.io目录下，就可以看到Hexo的初始化的文件了。<br><a href=\"https://github.com/hexojs/hexo-generator-feed\" target=\"_blank\" rel=\"noopener\">hexo-generator-feed</a>是一个hexo的插件，有了它才可以生成RSS，建议安装，在C:\\Users\\66beta\\66beta.github.io目录下运行：<br><code>npm install hexo-generator-feed --save</code><br>然后，根据<a href=\"http://hexo.io/docs/configuration.html\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a>来对_config.yml做一些配置。</p>\n</li>\n</ol>\n<h2 id=\"写文章并生成HTML\"><a href=\"#写文章并生成HTML\" class=\"headerlink\" title=\"写文章并生成HTML\"></a>写文章并生成HTML</h2><ol>\n<li><p>添加一篇文章</p>\n<p><code>hexo new [layout] &lt;title&gt;</code><br>比如：<br><code>hexo new &quot;Hello Hexo&quot;</code><br>在source\\_posts目录下就会有一个hello-hexo.md文件，用编辑器打开这个文件，编写markdown～</p>\n</li>\n<li><p>生成HTML</p>\n<p>编写完后，运行生成HTML的命令：<code>hexo generate</code></p>\n</li>\n<li><p>预览</p>\n<p>生成完HTML文件后，可以运行一个web服务来查看效果：<code>hexo server</code><br>保持开启状态，然后回去修改hello-hexo.md文件，刷新浏览器，修改即时呈现。</p>\n</li>\n</ol>\n<h2 id=\"完毕\"><a href=\"#完毕\" class=\"headerlink\" title=\"完毕\"></a>完毕</h2><p>以上只是记录下安装的流程，具体安装与使用请见<a href=\"http://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官网</a>，下次有空研究下用traviCI和prose.io在线自动发布到Github看看。</p>\n<p>自从换掉了Jekyll用上了Hexo，妈妈再也不同担心我不写博客了，So easy～</p>"},{"title":"VPS极简初始化配置","date":"2014-12-11T08:55:45.000Z","_content":"最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。\n<!-- more -->\n\n## 换OS为Ubuntu\n\n对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。\n\n## 更改root密码\n\n默认密码太难记，换成自己的比较方便，然后就SSH走起\n\n```bash\nsudo passwd root\n```\n\n## 更新软件源\n\n不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是\n\n```bash\nsudo apt-get update\n```\n\n## 安装Shadowsocks\n\n[Shadowsocks on Github](https://github.com/clowwindy/shadowsocks)\nAcross the Great Firewall, we can reach every corner in the world.\n祝病魔早日战胜方校长。\n\n## 安装LAMP，开启必备组件\n\n某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：\n\n```bash\nsudo apt-get install lamp-server^\n```\n\n以上默认不开mod_rewrite，要自己开启：\n\n```bash\nsudo a2enmod rewrite\n```\n\n另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：\n\n```bash\nsudo apt-get install php5-mcrypt\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 设置apache虚拟主机\n\n1. 复制一个站点配置文件\n\n    ```bash\n    sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf\n    ```\n\n1. 编辑新站点配置文件\n\n```bash\nsudo vi /etc/apache2/sites-available/example.com.conf\n```\n\n修改配置信息：\n\n```bash\n<VirtualHost *:80>\n    ServerAdmin webmaster@localhost\n    ServerName example.com\n    ServerAlias www.example.com\n    DocumentRoot /var/www/html/example\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```\n\n启用新站点：\n\n```bash\nsudo a2ensite example.com.conf\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 屏蔽根目录\n\n有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：\n\n```bash\nsudo vi /etc/apache2/sites-available/000-default.conf\n```\n\n添加一行：\n\n```bash\nServerName 服务器的IP地址\n```\n\n配置完毕，够用就行。\n","source":"_posts/vps-initial-setup.md","raw":"---\ntitle: VPS极简初始化配置\ndate: 2014-12-11 16:55:45\ntags:\n  - linux\ncategories:\n  - 其他\n---\n最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。\n<!-- more -->\n\n## 换OS为Ubuntu\n\n对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。\n\n## 更改root密码\n\n默认密码太难记，换成自己的比较方便，然后就SSH走起\n\n```bash\nsudo passwd root\n```\n\n## 更新软件源\n\n不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是\n\n```bash\nsudo apt-get update\n```\n\n## 安装Shadowsocks\n\n[Shadowsocks on Github](https://github.com/clowwindy/shadowsocks)\nAcross the Great Firewall, we can reach every corner in the world.\n祝病魔早日战胜方校长。\n\n## 安装LAMP，开启必备组件\n\n某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：\n\n```bash\nsudo apt-get install lamp-server^\n```\n\n以上默认不开mod_rewrite，要自己开启：\n\n```bash\nsudo a2enmod rewrite\n```\n\n另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：\n\n```bash\nsudo apt-get install php5-mcrypt\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 设置apache虚拟主机\n\n1. 复制一个站点配置文件\n\n    ```bash\n    sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf\n    ```\n\n1. 编辑新站点配置文件\n\n```bash\nsudo vi /etc/apache2/sites-available/example.com.conf\n```\n\n修改配置信息：\n\n```bash\n<VirtualHost *:80>\n    ServerAdmin webmaster@localhost\n    ServerName example.com\n    ServerAlias www.example.com\n    DocumentRoot /var/www/html/example\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n```\n\n启用新站点：\n\n```bash\nsudo a2ensite example.com.conf\n```\n\n重启apache生效：\n\n```bash\nsudo service apache2 restart\n```\n\n## 屏蔽根目录\n\n有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：\n\n```bash\nsudo vi /etc/apache2/sites-available/000-default.conf\n```\n\n添加一行：\n\n```bash\nServerName 服务器的IP地址\n```\n\n配置完毕，够用就行。\n","slug":"vps-initial-setup","published":1,"updated":"2018-01-10T02:46:03.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylv0010wfrarkyh4vul","content":"<p>最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。<br><a id=\"more\"></a></p>\n<h2 id=\"换OS为Ubuntu\"><a href=\"#换OS为Ubuntu\" class=\"headerlink\" title=\"换OS为Ubuntu\"></a>换OS为Ubuntu</h2><p>对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。</p>\n<h2 id=\"更改root密码\"><a href=\"#更改root密码\" class=\"headerlink\" title=\"更改root密码\"></a>更改root密码</h2><p>默认密码太难记，换成自己的比较方便，然后就SSH走起</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新软件源\"><a href=\"#更新软件源\" class=\"headerlink\" title=\"更新软件源\"></a>更新软件源</h2><p>不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><p><a href=\"https://github.com/clowwindy/shadowsocks\" target=\"_blank\" rel=\"noopener\">Shadowsocks on Github</a><br>Across the Great Firewall, we can reach every corner in the world.<br>祝病魔早日战胜方校长。</p>\n<h2 id=\"安装LAMP，开启必备组件\"><a href=\"#安装LAMP，开启必备组件\" class=\"headerlink\" title=\"安装LAMP，开启必备组件\"></a>安装LAMP，开启必备组件</h2><p>某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lamp-server^</span><br></pre></td></tr></table></figure>\n<p>以上默认不开mod_rewrite，要自己开启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod rewrite</span><br></pre></td></tr></table></figure>\n<p>另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php5-mcrypt</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置apache虚拟主机\"><a href=\"#设置apache虚拟主机\" class=\"headerlink\" title=\"设置apache虚拟主机\"></a>设置apache虚拟主机</h2><ol>\n<li><p>复制一个站点配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑新站点配置文件</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n<p>修改配置信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">    ServerAdmin webmaster@localhost</span><br><span class=\"line\">    ServerName example.com</span><br><span class=\"line\">    ServerAlias www.example.com</span><br><span class=\"line\">    DocumentRoot /var/www/html/example</span><br><span class=\"line\">    ErrorLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/error.log</span><br><span class=\"line\">    CustomLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n<p>启用新站点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2ensite example.com.conf</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"屏蔽根目录\"><a href=\"#屏蔽根目录\" class=\"headerlink\" title=\"屏蔽根目录\"></a>屏蔽根目录</h2><p>有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/000-default.conf</span><br></pre></td></tr></table></figure>\n<p>添加一行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ServerName 服务器的IP地址</span><br></pre></td></tr></table></figure>\n<p>配置完毕，够用就行。</p>\n","site":{"data":{}},"excerpt":"<p>最近电信网络半瘫，一直在寻觅网速过得去的VPS。之前的DigitalOcean无论哪个节点都卡成翔了，刚换搬瓦工，一次性买了一年。好久不弄，基本的设置都忘了，有些一时没想到，有些忘记了还要问Google。记录下来，以防下回再“搬家”。<br>","more":"</p>\n<h2 id=\"换OS为Ubuntu\"><a href=\"#换OS为Ubuntu\" class=\"headerlink\" title=\"换OS为Ubuntu\"></a>换OS为Ubuntu</h2><p>对，有些服务器商默认会给你一个CentOS，对我这种初级用户来说用啥都差不多，用Ubuntu纯碎是情怀。</p>\n<h2 id=\"更改root密码\"><a href=\"#更改root密码\" class=\"headerlink\" title=\"更改root密码\"></a>更改root密码</h2><p>默认密码太难记，换成自己的比较方便，然后就SSH走起</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<h2 id=\"更新软件源\"><a href=\"#更新软件源\" class=\"headerlink\" title=\"更新软件源\"></a>更新软件源</h2><p>不是所有的服务器商都会保证一个up-to-date的镜像的，搬瓦工就是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Shadowsocks\"><a href=\"#安装Shadowsocks\" class=\"headerlink\" title=\"安装Shadowsocks\"></a>安装Shadowsocks</h2><p><a href=\"https://github.com/clowwindy/shadowsocks\" target=\"_blank\" rel=\"noopener\">Shadowsocks on Github</a><br>Across the Great Firewall, we can reach every corner in the world.<br>祝病魔早日战胜方校长。</p>\n<h2 id=\"安装LAMP，开启必备组件\"><a href=\"#安装LAMP，开启必备组件\" class=\"headerlink\" title=\"安装LAMP，开启必备组件\"></a>安装LAMP，开启必备组件</h2><p>某些服务商会在新建的时候提供组件选择，比如DigitalOcean。没有的话，就要自己安装了：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lamp-server^</span><br></pre></td></tr></table></figure>\n<p>以上默认不开mod_rewrite，要自己开启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2enmod rewrite</span><br></pre></td></tr></table></figure>\n<p>另外还要安装下Mcrypt，比如要连接微信公众平台就是需要此组件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install php5-mcrypt</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"设置apache虚拟主机\"><a href=\"#设置apache虚拟主机\" class=\"headerlink\" title=\"设置apache虚拟主机\"></a>设置apache虚拟主机</h2><ol>\n<li><p>复制一个站点配置文件</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑新站点配置文件</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/example.com.conf</span><br></pre></td></tr></table></figure>\n<p>修改配置信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;VirtualHost *:80&gt;</span><br><span class=\"line\">    ServerAdmin webmaster@localhost</span><br><span class=\"line\">    ServerName example.com</span><br><span class=\"line\">    ServerAlias www.example.com</span><br><span class=\"line\">    DocumentRoot /var/www/html/example</span><br><span class=\"line\">    ErrorLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/error.log</span><br><span class=\"line\">    CustomLog <span class=\"variable\">$&#123;APACHE_LOG_DIR&#125;</span>/access.log combined</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n<p>启用新站点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo a2ensite example.com.conf</span><br></pre></td></tr></table></figure>\n<p>重启apache生效：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service apache2 restart</span><br></pre></td></tr></table></figure>\n<h2 id=\"屏蔽根目录\"><a href=\"#屏蔽根目录\" class=\"headerlink\" title=\"屏蔽根目录\"></a>屏蔽根目录</h2><p>有时候只是放了个二级域名而已，根目录不喜欢被访问，只想放条信息，修改000-default.conf：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vi /etc/apache2/sites-available/000-default.conf</span><br></pre></td></tr></table></figure>\n<p>添加一行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ServerName 服务器的IP地址</span><br></pre></td></tr></table></figure>\n<p>配置完毕，够用就行。</p>"},{"title":"jQuery Mobile页面刷新JS失效问题","date":"2014-06-24T08:35:42.000Z","_content":"用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<!-- more -->\n\n翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：\n`\"It's important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=\"external\" or data-ajax=\"false\" to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.\"`\n\n例如：`<a href=\"multipage.html\" rel=\"external\">Multi-page link</a>`\n\n哎，看文档不仔细啊～\n","source":"_posts/jquery-mobile-full-page-reload.md","raw":"---\ntitle: 'jQuery Mobile页面刷新JS失效问题'\ndate: 2014-06-24 16:35:42\ntags:\n  - jQuery Mobile\n  - js\ncategories:\n  - 前端\n---\n用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<!-- more -->\n\n翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：\n`\"It's important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=\"external\" or data-ajax=\"false\" to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.\"`\n\n例如：`<a href=\"multipage.html\" rel=\"external\">Multi-page link</a>`\n\n哎，看文档不仔细啊～\n","slug":"jquery-mobile-full-page-reload","published":1,"updated":"2018-01-10T02:44:25.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjice5ylw0014wfraxjh4wvuv","content":"<p>用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。<a id=\"more\"></a></p>\n<p>翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：<br><code>&quot;It&#39;s important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=&quot;external&quot; or data-ajax=&quot;false&quot; to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.&quot;</code></p>\n<p>例如：<code>&lt;a href=&quot;multipage.html&quot; rel=&quot;external&quot;&gt;Multi-page link&lt;/a&gt;</code></p>\n<p>哎，看文档不仔细啊～</p>\n","site":{"data":{}},"excerpt":"<p>用jQuery Mobile做了几个简单的演示页面，单个页面开发的时候都很顺利，最后汇总在一个测试的时候，发现切换页面的时候，CSS和JS会失效，一开始一直都以为是自己js代码哪里写错了，导致不能执行。","more":"</p>\n<p>翻来覆去得调试，都没有发现问题。最后回去看了下jQurey Mobile的文档，发现这是一项机制：<br><code>&quot;It&#39;s important to note that if you are linking from a mobile page that was loaded via Ajax to a page that contains multiple internal pages, you need to add a rel=&quot;external&quot; or data-ajax=&quot;false&quot; to the link. This tells the framework to do a full page reload to clear out the Ajax hash in the URL. This is critical because Ajax pages use the hash (#) to track the Ajax history, while multiple internal pages use the hash to indicate internal pages so there will be conflicts in the hash between these two modes.&quot;</code></p>\n<p>例如：<code>&lt;a href=&quot;multipage.html&quot; rel=&quot;external&quot;&gt;Multi-page link&lt;/a&gt;</code></p>\n<p>哎，看文档不仔细啊～</p>"},{"title":"《你不知道的JS(上)》学习笔记 第二部分","date":"2018-06-24T03:08:28.000Z","_content":"\n## 关于this\n\n在函数被调用时建立的一个绑定，它指向 __什么__ 是完全由函数被调用的调用位置来决定的。\n\n### call绑定\n```js\nfunction identify() {\n  return this.name.toUpperCase();\n}\nfunction speak() {\n  var greeting = \"Hello, I'm \" + identify.call( this );\n  console.log( greeting );\n}\nvar me = { name: \"Kyle\" };\nvar you = { name: \"Reader\" };\n\nidentify.call( me ); // KYLE\nidentify.call( you ); // READER\n\nspeak.call( me ); // Hello, I'm KYLE\nspeak.call( you ); // Hello, I'm READER\n```\n\n<!-- more -->\n\n## this解析\n\n调用位置：函数在代码中被调用的位置（__不是被声明的位置__）。\n\n### 默认绑定\n```js\n// 严格模式下不允许默认绑定this到全局\nfunction foo() {\n  \"use strict\";\n  console.log( this.a );\n}\nvar a = 2;\nfoo(); // TypeError: `this` is `undefined`\n\n// 下面严格模式与foo()调用位置无关\nfunction foo() {\n  console.log( this.a );\n}\nvar a = 2;\n(function(){\n  \"use strict\";\n  foo(); // 2\n})();\n```\n\n### 隐式绑定\n\n引用链的最后一层是影响调用位置的：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\n\nvar obj2 = {\n  a: 42,\n  foo: foo\n};\n\nvar obj1 = {\n  a: 2,\n  obj2: obj2\n};\n\nobj1.obj2.foo(); // 42\n```\n\n隐式丢失，绑定到默认全局，或严格模式下的`undefined`\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar bar = obj.foo; // 函数引用！\nvar a = \"oops, global\"; // `a` 也是一个全局对象的属性\n\nbar(); // \"oops, global\"\n```\n\n传入回调函数：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nfunction doFoo(fn) {\n  // fn引用foo\n  fn(); // <-- 调用位置!\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar a = \"oops, global\"; // a 是全局对象的属性\n\ndoFoo( obj.foo ); // \"oops, global\"\n```\n\n### 显式绑定\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\n\nfoo.call( obj ); // 2\n```\n通过 `foo.call(..)` 强制把 `this` 绑定到 `obj`\n\n如果传递一个简单基本类型值（`string boolean number`）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 `new String(..)`，`new Boolean(..)`，或 `new Number(..)`）。称为“装箱（boxing）”。\n\n1. 硬绑定\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\nvar bar = function() {\n  foo.call( obj ); // 硬绑定\n};\n\nbar(); // 2\nsetTimeout( bar, 100 ); // 2\n// 不可以被覆盖\nbar.call( window ); // 2\n```\n\n__硬绑定的应用：__\n\n- 包裹函数，负责接收参数并返回值\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  var obj = { a: 2 };\n  var bar = function() {\n    return foo.apply( obj, arguments );\n  };\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n- 辅助函数\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  // 简单的 `bind` 帮助函数\n  function bind(fn, obj) {\n    return function() {\n      return fn.apply( obj, arguments );\n    };\n  }\n  var obj = { a: 2 };\n  var bar = bind( foo, obj );\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 `Function.prototype.bind`\n```js\nfunction foo(something) {\n  console.log( this.a, something );\n  return this.a + something;\n}\nvar obj = {\n  a: 2\n};\nvar bar = foo.bind( obj );\n\nvar b = bar( 3 ); // 2 3\nconsole.log( b ); // 5\n```\n\n2. api调用的上下文(context)\n\n```js\nfunction foo(el) {\n  console.log( el, this.id );\n}\nvar obj = {\n  id: \"awesome\"\n};\n// 使用 `obj` 作为 `this` 来调用 `foo(..)`\n[1, 2, 3].forEach( foo, obj ); // 1 awesome  2 awesome  3 awesome\n```\n\n待续...","source":"_posts/You-Dont-Know-JS-notes-part2.md","raw":"---\ntitle: 《你不知道的JS(上)》学习笔记 第二部分\ndate: 2018-06-24 11:08:28\ntags:\n  - js\ncategories:\n  - 前端\n---\n\n## 关于this\n\n在函数被调用时建立的一个绑定，它指向 __什么__ 是完全由函数被调用的调用位置来决定的。\n\n### call绑定\n```js\nfunction identify() {\n  return this.name.toUpperCase();\n}\nfunction speak() {\n  var greeting = \"Hello, I'm \" + identify.call( this );\n  console.log( greeting );\n}\nvar me = { name: \"Kyle\" };\nvar you = { name: \"Reader\" };\n\nidentify.call( me ); // KYLE\nidentify.call( you ); // READER\n\nspeak.call( me ); // Hello, I'm KYLE\nspeak.call( you ); // Hello, I'm READER\n```\n\n<!-- more -->\n\n## this解析\n\n调用位置：函数在代码中被调用的位置（__不是被声明的位置__）。\n\n### 默认绑定\n```js\n// 严格模式下不允许默认绑定this到全局\nfunction foo() {\n  \"use strict\";\n  console.log( this.a );\n}\nvar a = 2;\nfoo(); // TypeError: `this` is `undefined`\n\n// 下面严格模式与foo()调用位置无关\nfunction foo() {\n  console.log( this.a );\n}\nvar a = 2;\n(function(){\n  \"use strict\";\n  foo(); // 2\n})();\n```\n\n### 隐式绑定\n\n引用链的最后一层是影响调用位置的：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\n\nvar obj2 = {\n  a: 42,\n  foo: foo\n};\n\nvar obj1 = {\n  a: 2,\n  obj2: obj2\n};\n\nobj1.obj2.foo(); // 42\n```\n\n隐式丢失，绑定到默认全局，或严格模式下的`undefined`\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar bar = obj.foo; // 函数引用！\nvar a = \"oops, global\"; // `a` 也是一个全局对象的属性\n\nbar(); // \"oops, global\"\n```\n\n传入回调函数：\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nfunction doFoo(fn) {\n  // fn引用foo\n  fn(); // <-- 调用位置!\n}\nvar obj = {\n  a: 2,\n  foo: foo\n};\nvar a = \"oops, global\"; // a 是全局对象的属性\n\ndoFoo( obj.foo ); // \"oops, global\"\n```\n\n### 显式绑定\n\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\n\nfoo.call( obj ); // 2\n```\n通过 `foo.call(..)` 强制把 `this` 绑定到 `obj`\n\n如果传递一个简单基本类型值（`string boolean number`）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 `new String(..)`，`new Boolean(..)`，或 `new Number(..)`）。称为“装箱（boxing）”。\n\n1. 硬绑定\n```js\nfunction foo() {\n  console.log( this.a );\n}\nvar obj = {\n  a: 2\n};\nvar bar = function() {\n  foo.call( obj ); // 硬绑定\n};\n\nbar(); // 2\nsetTimeout( bar, 100 ); // 2\n// 不可以被覆盖\nbar.call( window ); // 2\n```\n\n__硬绑定的应用：__\n\n- 包裹函数，负责接收参数并返回值\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  var obj = { a: 2 };\n  var bar = function() {\n    return foo.apply( obj, arguments );\n  };\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n- 辅助函数\n  ```js\n  function foo(something) {\n    console.log( this.a, something );\n    return this.a + something;\n  }\n  // 简单的 `bind` 帮助函数\n  function bind(fn, obj) {\n    return function() {\n      return fn.apply( obj, arguments );\n    };\n  }\n  var obj = { a: 2 };\n  var bar = bind( foo, obj );\n\n  var b = bar( 3 ); // 2 3\n  console.log( b ); // 5\n  ```\n\n硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 `Function.prototype.bind`\n```js\nfunction foo(something) {\n  console.log( this.a, something );\n  return this.a + something;\n}\nvar obj = {\n  a: 2\n};\nvar bar = foo.bind( obj );\n\nvar b = bar( 3 ); // 2 3\nconsole.log( b ); // 5\n```\n\n2. api调用的上下文(context)\n\n```js\nfunction foo(el) {\n  console.log( el, this.id );\n}\nvar obj = {\n  id: \"awesome\"\n};\n// 使用 `obj` 作为 `this` 来调用 `foo(..)`\n[1, 2, 3].forEach( foo, obj ); // 1 awesome  2 awesome  3 awesome\n```\n\n待续...","slug":"You-Dont-Know-JS-notes-part2","published":1,"updated":"2018-06-14T03:49:42.442Z","_id":"cjie07l250000vcrau0n27gfw","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"关于this\"><a href=\"#关于this\" class=\"headerlink\" title=\"关于this\"></a>关于this</h2><p>在函数被调用时建立的一个绑定，它指向 <strong>什么</strong> 是完全由函数被调用的调用位置来决定的。</p>\n<h3 id=\"call绑定\"><a href=\"#call绑定\" class=\"headerlink\" title=\"call绑定\"></a>call绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name.toUpperCase();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> greeting = <span class=\"string\">\"Hello, I'm \"</span> + identify.call( <span class=\"keyword\">this</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( greeting );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> me = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Kyle\"</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> you = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Reader\"</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">identify.call( me ); <span class=\"comment\">// KYLE</span></span><br><span class=\"line\">identify.call( you ); <span class=\"comment\">// READER</span></span><br><span class=\"line\"></span><br><span class=\"line\">speak.call( me ); <span class=\"comment\">// Hello, I'm KYLE</span></span><br><span class=\"line\">speak.call( you ); <span class=\"comment\">// Hello, I'm READER</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"this解析\"><a href=\"#this解析\" class=\"headerlink\" title=\"this解析\"></a>this解析</h2><p>调用位置：函数在代码中被调用的位置（<strong>不是被声明的位置</strong>）。</p>\n<h3 id=\"默认绑定\"><a href=\"#默认绑定\" class=\"headerlink\" title=\"默认绑定\"></a>默认绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 严格模式下不允许默认绑定this到全局</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo(); <span class=\"comment\">// TypeError: `this` is `undefined`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面严格模式与foo()调用位置无关</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h3 id=\"隐式绑定\"><a href=\"#隐式绑定\" class=\"headerlink\" title=\"隐式绑定\"></a>隐式绑定</h3><p>引用链的最后一层是影响调用位置的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  obj2: obj2</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.obj2.foo(); <span class=\"comment\">// 42</span></span><br></pre></td></tr></table></figure>\n<p>隐式丢失，绑定到默认全局，或严格模式下的<code>undefined</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = obj.foo; <span class=\"comment\">// 函数引用！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// `a` 也是一个全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<p>传入回调函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doFoo</span>(<span class=\"params\">fn</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// fn引用foo</span></span><br><span class=\"line\">  fn(); <span class=\"comment\">// &lt;-- 调用位置!</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// a 是全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">doFoo( obj.foo ); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"显式绑定\"><a href=\"#显式绑定\" class=\"headerlink\" title=\"显式绑定\"></a>显式绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo.call( obj ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>通过 <code>foo.call(..)</code> 强制把 <code>this</code> 绑定到 <code>obj</code></p>\n<p>如果传递一个简单基本类型值（<code>string boolean number</code>）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 <code>new String(..)</code>，<code>new Boolean(..)</code>，或 <code>new Number(..)</code>）。称为“装箱（boxing）”。</p>\n<ol>\n<li>硬绑定<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo.call( obj ); <span class=\"comment\">// 硬绑定</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">setTimeout( bar, <span class=\"number\">100</span> ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"comment\">// 不可以被覆盖</span></span><br><span class=\"line\">bar.call( <span class=\"built_in\">window</span> ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>硬绑定的应用：</strong></p>\n<ul>\n<li><p>包裹函数，负责接收参数并返回值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>辅助函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 简单的 `bind` 帮助函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bind</span>(<span class=\"params\">fn, obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = bind( foo, obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 <code>Function.prototype.bind</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo.bind( obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>api调用的上下文(context)</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( el, <span class=\"keyword\">this</span>.id );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  id: <span class=\"string\">\"awesome\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 使用 `obj` 作为 `this` 来调用 `foo(..)`</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach( foo, obj ); <span class=\"comment\">// 1 awesome  2 awesome  3 awesome</span></span><br></pre></td></tr></table></figure>\n<p>待续…</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"关于this\"><a href=\"#关于this\" class=\"headerlink\" title=\"关于this\"></a>关于this</h2><p>在函数被调用时建立的一个绑定，它指向 <strong>什么</strong> 是完全由函数被调用的调用位置来决定的。</p>\n<h3 id=\"call绑定\"><a href=\"#call绑定\" class=\"headerlink\" title=\"call绑定\"></a>call绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name.toUpperCase();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">speak</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> greeting = <span class=\"string\">\"Hello, I'm \"</span> + identify.call( <span class=\"keyword\">this</span> );</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( greeting );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> me = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Kyle\"</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> you = &#123; <span class=\"attr\">name</span>: <span class=\"string\">\"Reader\"</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">identify.call( me ); <span class=\"comment\">// KYLE</span></span><br><span class=\"line\">identify.call( you ); <span class=\"comment\">// READER</span></span><br><span class=\"line\"></span><br><span class=\"line\">speak.call( me ); <span class=\"comment\">// Hello, I'm KYLE</span></span><br><span class=\"line\">speak.call( you ); <span class=\"comment\">// Hello, I'm READER</span></span><br></pre></td></tr></table></figure>","more":"<h2 id=\"this解析\"><a href=\"#this解析\" class=\"headerlink\" title=\"this解析\"></a>this解析</h2><p>调用位置：函数在代码中被调用的位置（<strong>不是被声明的位置</strong>）。</p>\n<h3 id=\"默认绑定\"><a href=\"#默认绑定\" class=\"headerlink\" title=\"默认绑定\"></a>默认绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 严格模式下不允许默认绑定this到全局</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">foo(); <span class=\"comment\">// TypeError: `this` is `undefined`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 下面严格模式与foo()调用位置无关</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"meta\">  \"use strict\"</span>;</span><br><span class=\"line\">  foo(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h3 id=\"隐式绑定\"><a href=\"#隐式绑定\" class=\"headerlink\" title=\"隐式绑定\"></a>隐式绑定</h3><p>引用链的最后一层是影响调用位置的：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">42</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  obj2: obj2</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj1.obj2.foo(); <span class=\"comment\">// 42</span></span><br></pre></td></tr></table></figure>\n<p>隐式丢失，绑定到默认全局，或严格模式下的<code>undefined</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = obj.foo; <span class=\"comment\">// 函数引用！</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// `a` 也是一个全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<p>传入回调函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doFoo</span>(<span class=\"params\">fn</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// fn引用foo</span></span><br><span class=\"line\">  fn(); <span class=\"comment\">// &lt;-- 调用位置!</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span>,</span><br><span class=\"line\">  foo: foo</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"oops, global\"</span>; <span class=\"comment\">// a 是全局对象的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">doFoo( obj.foo ); <span class=\"comment\">// \"oops, global\"</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"显式绑定\"><a href=\"#显式绑定\" class=\"headerlink\" title=\"显式绑定\"></a>显式绑定</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">foo.call( obj ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n<p>通过 <code>foo.call(..)</code> 强制把 <code>this</code> 绑定到 <code>obj</code></p>\n<p>如果传递一个简单基本类型值（<code>string boolean number</code>）作为 this 绑定，那么这个基本类型值会被包装在它的对象类型中（分别是 <code>new String(..)</code>，<code>new Boolean(..)</code>，或 <code>new Number(..)</code>）。称为“装箱（boxing）”。</p>\n<ol>\n<li>硬绑定<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  foo.call( obj ); <span class=\"comment\">// 硬绑定</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">bar(); <span class=\"comment\">// 2</span></span><br><span class=\"line\">setTimeout( bar, <span class=\"number\">100</span> ); <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"comment\">// 不可以被覆盖</span></span><br><span class=\"line\">bar.call( <span class=\"built_in\">window</span> ); <span class=\"comment\">// 2</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>硬绑定的应用：</strong></p>\n<ul>\n<li><p>包裹函数，负责接收参数并返回值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> foo.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>辅助函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 简单的 `bind` 帮助函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bind</span>(<span class=\"params\">fn, obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn.apply( obj, <span class=\"built_in\">arguments</span> );</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = bind( foo, obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>硬绑定是一个如此常用的模式，它已作为 ES5 的内建工具 <code>Function.prototype.bind</code><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">something</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( <span class=\"keyword\">this</span>.a, something );</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.a + something;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  a: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = foo.bind( obj );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = bar( <span class=\"number\">3</span> ); <span class=\"comment\">// 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( b ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure></p>\n<ol>\n<li>api调用的上下文(context)</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log( el, <span class=\"keyword\">this</span>.id );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  id: <span class=\"string\">\"awesome\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 使用 `obj` 作为 `this` 来调用 `foo(..)`</span></span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].forEach( foo, obj ); <span class=\"comment\">// 1 awesome  2 awesome  3 awesome</span></span><br></pre></td></tr></table></figure>\n<p>待续…</p>"},{"title":"使用项目本地gulp代替全局的","date":"2018-06-24T03:08:28.000Z","_content":"\nJenkins上全局安装了`3.9.1`版本的`gulp/gulp-cli`，但是其他项目已经迁移到了`4.0.0`，于是Jenkins编译直接运行`gulp`命令会调用全局的，本项目就报错编译失败了。\n\n解决办法：编译命令最前加一个`npm link gulp`，指明`gulp`使用本地`node_modules`内的版本。","source":"_posts/use-lobal-gulp-instead-of-global.md","raw":"---\ntitle: 使用项目本地gulp代替全局的\ndate: 2018-06-24 11:08:28\ntags:\n  - npm\n  - gulp\ncategories:\n  - 前端\n---\n\nJenkins上全局安装了`3.9.1`版本的`gulp/gulp-cli`，但是其他项目已经迁移到了`4.0.0`，于是Jenkins编译直接运行`gulp`命令会调用全局的，本项目就报错编译失败了。\n\n解决办法：编译命令最前加一个`npm link gulp`，指明`gulp`使用本地`node_modules`内的版本。","slug":"use-lobal-gulp-instead-of-global","published":1,"updated":"2018-06-14T03:49:36.355Z","_id":"cjie07l290001vcrasct217tg","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Jenkins上全局安装了<code>3.9.1</code>版本的<code>gulp/gulp-cli</code>，但是其他项目已经迁移到了<code>4.0.0</code>，于是Jenkins编译直接运行<code>gulp</code>命令会调用全局的，本项目就报错编译失败了。</p>\n<p>解决办法：编译命令最前加一个<code>npm link gulp</code>，指明<code>gulp</code>使用本地<code>node_modules</code>内的版本。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Jenkins上全局安装了<code>3.9.1</code>版本的<code>gulp/gulp-cli</code>，但是其他项目已经迁移到了<code>4.0.0</code>，于是Jenkins编译直接运行<code>gulp</code>命令会调用全局的，本项目就报错编译失败了。</p>\n<p>解决办法：编译命令最前加一个<code>npm link gulp</code>，指明<code>gulp</code>使用本地<code>node_modules</code>内的版本。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjice5yl30000wfra38p847jg","category_id":"cjice5ylb0004wfranl760ge4","_id":"cjice5yln000fwfra416fh9za"},{"post_id":"cjice5ylg0008wfra1k5sq622","category_id":"cjice5ylb0004wfranl760ge4","_id":"cjice5ylo000iwfrajfp7ca72"},{"post_id":"cjice5yl70002wfrad5weky8b","category_id":"cjice5ylb0004wfranl760ge4","_id":"cjice5ylp000kwfraye39sqkp"},{"post_id":"cjice5yln000hwfracqjfgm82","category_id":"cjice5ylm000ewfrap1yfibdw","_id":"cjice5ylr000qwfrayr6ei0o6"},{"post_id":"cjice5yld0006wfranby03oi0","category_id":"cjice5ylm000ewfrap1yfibdw","_id":"cjice5ylt000uwfraje7nj375"},{"post_id":"cjice5ylo000jwfrag0dpj88s","category_id":"cjice5ylb0004wfranl760ge4","_id":"cjice5ylu000xwfrall3f3gyx"},{"post_id":"cjice5ylq000nwfrartmam8g3","category_id":"cjice5ylp000lwfrarllxtrnj","_id":"cjice5ylv0011wfra2iwy760q"},{"post_id":"cjice5ylf0007wfragf2sb1r1","category_id":"cjice5ylp000lwfrarllxtrnj","_id":"cjice5ylx0015wfra8km6zups"},{"post_id":"cjice5ylr000pwfrae1rhyx6l","category_id":"cjice5ylm000ewfrap1yfibdw","_id":"cjice5ylx0018wfrapu0hdisp"},{"post_id":"cjice5ylj000cwfraujcunjnx","category_id":"cjice5ylm000ewfrap1yfibdw","_id":"cjice5yly001awfrakdejp8zb"},{"post_id":"cjice5ylt000wwfra0ltibl4o","category_id":"cjice5ylm000ewfrap1yfibdw","_id":"cjice5yly001cwfra138xcwf1"},{"post_id":"cjice5ylv0010wfrarkyh4vul","category_id":"cjice5ylm000ewfrap1yfibdw","_id":"cjice5ylz001ewfrac9gfyhfz"},{"post_id":"cjice5yll000dwfraef6jcjk9","category_id":"cjice5ylm000ewfrap1yfibdw","_id":"cjice5ylz001gwfra7f2udw97"},{"post_id":"cjice5ylw0014wfraxjh4wvuv","category_id":"cjice5ylb0004wfranl760ge4","_id":"cjice5ylz001iwfrazkuiczyt"},{"post_id":"cjice5yls000twfraz5mdt6y3","category_id":"cjice5ylx0016wfraqyik3f39","_id":"cjice5ylz001kwfra6vzcrf64"},{"post_id":"cjie07l250000vcrau0n27gfw","category_id":"cjice5ylb0004wfranl760ge4","_id":"cjie07l2f0004vcraxnofqf39"},{"post_id":"cjie07l290001vcrasct217tg","category_id":"cjice5ylb0004wfranl760ge4","_id":"cjie07l2f0005vcrahowx9g9n"}],"PostTag":[{"post_id":"cjice5yl30000wfra38p847jg","tag_id":"cjice5ylc0005wfrasp14t0cj","_id":"cjice5ylj000bwfrab48ogbj9"},{"post_id":"cjice5ylo000jwfrag0dpj88s","tag_id":"cjice5ylc0005wfrasp14t0cj","_id":"cjice5ylq000owfra5l7t8wwl"},{"post_id":"cjice5yl70002wfrad5weky8b","tag_id":"cjice5ylh000awfraojqmbhw8","_id":"cjice5ylt000vwfrazswg8u8l"},{"post_id":"cjice5yl70002wfrad5weky8b","tag_id":"cjice5yln000gwfrae38hp11m","_id":"cjice5ylu000zwfrak9xnshcx"},{"post_id":"cjice5yl70002wfrad5weky8b","tag_id":"cjice5ylp000mwfracu8rgjsw","_id":"cjice5ylw0013wfra91tdjpz2"},{"post_id":"cjice5yld0006wfranby03oi0","tag_id":"cjice5yls000swfra444ordpi","_id":"cjice5ylx0017wfra75lwtmnj"},{"post_id":"cjice5ylf0007wfragf2sb1r1","tag_id":"cjice5ylv0012wfral1a45dtq","_id":"cjice5yly001bwfraisd8vjhv"},{"post_id":"cjice5ylg0008wfra1k5sq622","tag_id":"cjice5ylx0019wfrab7h9r13u","_id":"cjice5ylz001fwfrav1abbcl8"},{"post_id":"cjice5ylj000cwfraujcunjnx","tag_id":"cjice5ylz001dwfraruup89x1","_id":"cjice5ylz001jwfraksd9a96f"},{"post_id":"cjice5yll000dwfraef6jcjk9","tag_id":"cjice5ylz001hwfrah3o3z4xk","_id":"cjice5ym0001mwfra09fclxc0"},{"post_id":"cjice5yln000hwfracqjfgm82","tag_id":"cjice5ylz001lwfraap67vvxf","_id":"cjice5ym0001owfrawwua45tm"},{"post_id":"cjice5ylq000nwfrartmam8g3","tag_id":"cjice5ym0001nwfraysstz0q2","_id":"cjice5ym0001rwfrauxudisvp"},{"post_id":"cjice5ylq000nwfrartmam8g3","tag_id":"cjice5ym0001pwfra8l9v9mcz","_id":"cjice5ym1001swfrazj0crvjb"},{"post_id":"cjice5ylr000pwfrae1rhyx6l","tag_id":"cjice5ym0001qwfrav3n24pfw","_id":"cjice5ym1001vwfraeib075tz"},{"post_id":"cjice5ylr000pwfrae1rhyx6l","tag_id":"cjice5ym1001twfrapjgdkwvu","_id":"cjice5ym1001wwfraqqdzas9c"},{"post_id":"cjice5yls000twfraz5mdt6y3","tag_id":"cjice5ym1001uwfrahmfk1r19","_id":"cjice5ym2001zwfratpahwjj2"},{"post_id":"cjice5yls000twfraz5mdt6y3","tag_id":"cjice5ym1001twfrapjgdkwvu","_id":"cjice5ym20020wfra2mpewhoe"},{"post_id":"cjice5ylt000wwfra0ltibl4o","tag_id":"cjice5ym0001qwfrav3n24pfw","_id":"cjice5ym30022wfraecdwewno"},{"post_id":"cjice5ylv0010wfrarkyh4vul","tag_id":"cjice5ylz001dwfraruup89x1","_id":"cjice5ym30024wfra8d20kcd5"},{"post_id":"cjice5ylw0014wfraxjh4wvuv","tag_id":"cjice5ym30023wfrapd3i7bp6","_id":"cjice5ym30025wfra5ll7aow6"},{"post_id":"cjice5ylw0014wfraxjh4wvuv","tag_id":"cjice5ylc0005wfrasp14t0cj","_id":"cjice5ym30026wfrasrfdzw49"},{"post_id":"cjie07l250000vcrau0n27gfw","tag_id":"cjice5ylc0005wfrasp14t0cj","_id":"cjie07l2b0002vcra3523665b"},{"post_id":"cjie07l290001vcrasct217tg","tag_id":"cjie07l2b0003vcraikjlyijz","_id":"cjie07l2f0007vcra3vi369d9"},{"post_id":"cjie07l290001vcrasct217tg","tag_id":"cjie07l2f0006vcralliszxvk","_id":"cjie07l2f0008vcraf52uaewc"}],"Tag":[{"name":"js","_id":"cjice5ylc0005wfrasp14t0cj"},{"name":"node","_id":"cjice5ylh000awfraojqmbhw8"},{"name":"nvm","_id":"cjice5yln000gwfrae38hp11m"},{"name":"homebrew","_id":"cjice5ylp000mwfracu8rgjsw"},{"name":"sublime","_id":"cjice5yls000swfra444ordpi"},{"name":"PHP","_id":"cjice5ylv0012wfral1a45dtq"},{"name":"css","_id":"cjice5ylx0019wfrab7h9r13u"},{"name":"linux","_id":"cjice5ylz001dwfraruup89x1"},{"name":"git","_id":"cjice5ylz001hwfrah3o3z4xk"},{"name":"chrome","_id":"cjice5ylz001lwfraap67vvxf"},{"name":"php","_id":"cjice5ym0001nwfraysstz0q2"},{"name":"wordpress","_id":"cjice5ym0001pwfra8l9v9mcz"},{"name":"hexo","_id":"cjice5ym0001qwfrav3n24pfw"},{"name":"nodejs","_id":"cjice5ym1001twfrapjgdkwvu"},{"name":"docker","_id":"cjice5ym1001uwfrahmfk1r19"},{"name":"jQuery Mobile","_id":"cjice5ym30023wfrapd3i7bp6"},{"name":"npm","_id":"cjie07l2b0003vcraikjlyijz"},{"name":"gulp","_id":"cjie07l2f0006vcralliszxvk"}]}}